import React from 'react';
import {createRoot} from 'react-dom/client';
import { renderToString } from 'react-dom/server';
import { useState,useEffect, useRef } from "react";
import {
  ChakraProvider,
  Box,
  Button,
  Heading,
  VStack,
  Flex,
  Grid,
  theme,
  List,
  NumberInput,
  NumberInputField,
  Container,
  Spacer,
  Divider,
  Accordion,
  AccordionItem,
  AccordionButton,
  AccordionPanel,
  AccordionIcon,
  ListItem,
  OrderedList,
  Link,
  Image,
  UnorderedList,
  Text,
  Wrap,
  WrapItem,
  Tabs,
  TabList,
  TabPanels,
  Tab,
  TabPanel,
  HStack,
  Table,
  TableContainer,
  Tr,
  Td,
  Th,
  Thead,
  Tbody,
} from '@chakra-ui/react';
import Timer from "react-compound-timerv2-ocuco";

function App() {

  const [VanstraIsShown, setVanstraIsShown] = useState(false)
  const [VanstraActive, setVanstraActive] = useState(false)
  
  const [ViIsShown, setViIsShown] = useState(false)
  const [ViActive, setViActive] = useState(false)
  
  const [VoidWignowIsShown, setVoidWignowIsShown] = useState(false)
  const [VoidWignowActive, setVoidWignowActive] = useState(false)
  
  const [LucerebIsShown, setLucerebIsShown] = useState(false)
  const [LucerebActive, setLucerebActive] = useState(false)
  
  const [ProfBartIsShown, setProfBartIsShown] = useState(false)
  const [ProfBartActive, setProfBartActive] = useState(false)

  const [VanspiIsShown, setVanspiIsShown] = useState(false)
  const [VanspiActive, setVanspiActive] = useState(false)

  const [ViyuIsShown, setViyuIsShown] = useState(false)
  const [ViyuActive, setViyuActive] = useState(false)

  const [VanvriIsShown, setVanvriIsShown] = useState(false)
  const [VanvriActive, setVanvriActive] = useState(false)

  const [ViyusaIsShown, setViyusaIsShown] = useState(false)
  const [ViyusaActive, setViyusaActive] = useState(false)

  const [ViradiseIsShown, setViradiseIsShown] = useState(false)
  const [ViradiseActive, setViradiseActive] = useState(false)

  const [GuidedCountdownIsShown, setGuidedCountdownIsShown] = useState(false)
  const [GuidedCountdownActive, setGuidedCountdownActive] = useState(false)

  
  const [GuidedCountdownMinIsShown, setGuidedCountdownMinIsShown] = useState(false)
  const [GuidedCountdownMinActive, setGuidedCountdownMinActive] = useState(false)


  const [Tab1IsShown, setTab1IsShown] = useState(false)
  const [Tab1Active, setTab1Active] = useState(false)

  const [Tab2IsShown, setTab2IsShown] = useState(false)
  const [Tab2Active, setTab2Active] = useState(false)


  const [NullIsShown, setNullIsShown] = useState(false)
  const [NullActive, setNullActive] = useState(false)

    const handleVanstraClick = event => {
      // 👇️ toggle shown state
      setVanstraIsShown (current => !VanstraIsShown);
      setVanstraActive (current => !VanstraActive);
      setViIsShown (current => null);
      setViActive (current => null);
      setVoidWignowIsShown (current => null);
      setVoidWignowActive (current => null);
      setLucerebIsShown (current => null);
      setLucerebActive (current => null);
      setProfBartIsShown (current => null);
      setProfBartActive (current => null);
      setVanspiIsShown (current => null);
      setVanspiActive (current => null);
      setVanvriIsShown (current => null);
      setVanvriActive (current => null);
      setViyusaIsShown (current => null);
      setViyusaActive (current => null);
      setViradiseIsShown (current => null);
      setViradiseActive (current => null);
      setViyuIsShown (current => null);
      setViyuActive (current => null);
      setGuidedCountdownIsShown (current => null);
      setGuidedCountdownActive (current => null);
      setGuidedCountdownMinIsShown (current => null);
      setGuidedCountdownMinActive (current => null);
    };
    
      const handleViClick = event => {
      setViIsShown (current => !ViIsShown);
      setViActive (current => !ViActive);
      setVanstraIsShown (current => null);
      setVanstraActive (current => null);
      setVoidWignowIsShown (current => null);
      setVoidWignowActive (current => null);
      setLucerebIsShown (current => null);
      setLucerebActive (current => null);
      setProfBartIsShown (current => null);
      setProfBartActive (current => null);
      setVanspiIsShown (current => null);
      setVanspiActive (current => null);
      setVanvriIsShown (current => null);
      setVanvriActive (current => null);
      setViyusaIsShown (current => null);
      setViyusaActive (current => null);
      setViradiseIsShown (current => null);
      setViradiseActive (current => null);
      setViyuIsShown (current => null);
      setViyuActive (current => null);
      setGuidedCountdownIsShown (current => null);
      setGuidedCountdownActive (current => null);
      setGuidedCountdownMinIsShown (current => null);
      setGuidedCountdownMinActive (current => null);
    };
    
      const handleVoidWignowClick = event => {
      setVoidWignowIsShown (current => !VoidWignowIsShown);
      setVoidWignowActive (current => !VoidWignowActive);
      setVanstraIsShown (current => null);
      setVanstraActive (current => null);
      setViIsShown (current => null);
      setViActive (current => null);
      setLucerebIsShown (current => null);
      setLucerebActive (current => null);
      setProfBartIsShown (current => null);
      setProfBartActive (current => null);
      setVanspiIsShown (current => null);
      setVanspiActive (current => null);
      setVanvriIsShown (current => null);
      setVanvriActive (current => null);
      setViyusaIsShown (current => null);
      setViyusaActive (current => null);
      setViradiseIsShown (current => null);
      setViradiseActive (current => null);
      setViyuIsShown (current => null);
      setViyuActive (current => null);
      setGuidedCountdownIsShown (current => null);
      setGuidedCountdownActive (current => null);
      setGuidedCountdownMinIsShown (current => null);
      setGuidedCountdownMinActive (current => null);
    };
    
      const handleLucerebClick = event => {
      setLucerebIsShown (current => !LucerebIsShown);
      setLucerebActive (current => !LucerebActive);
      setVanstraIsShown (current => null);
      setVanstraActive (current => null);
      setViIsShown (current => null);
      setViActive (current => null);
      setVoidWignowIsShown (current => null);
      setVoidWignowActive (current => null);
      setProfBartIsShown (current => null);
      setProfBartActive (current => null);
      setVanspiIsShown (current => null);
      setVanspiActive (current => null);
      setVanvriIsShown (current => null);
      setVanvriActive (current => null);
      setViyusaIsShown (current => null);
      setViyusaActive (current => null);
      setViradiseIsShown (current => null);
      setViradiseActive (current => null);
      setViyuIsShown (current => null);
      setViyuActive (current => null);
      setGuidedCountdownIsShown (current => null);
      setGuidedCountdownActive (current => null);
      setGuidedCountdownMinIsShown (current => null);
      setGuidedCountdownMinActive (current => null);
    };
    
      const handleProfBartClick = event => {
      setProfBartIsShown (current => !ProfBartIsShown);
      setProfBartActive (current => !ProfBartActive);
      setVanstraIsShown (current => null);
      setVanstraActive (current => null);
      setViIsShown (current => null);
      setViActive (current => null);
      setVoidWignowIsShown (current => null);
      setVoidWignowActive (current => null);
      setLucerebIsShown (current => null);
      setLucerebActive (current => null);
      setVanspiIsShown (current => null);
      setVanspiActive (current => null);
      setVanvriIsShown (current => null);
      setVanvriActive (current => null);
      setViyusaIsShown (current => null);
      setViyusaActive (current => null);
      setViradiseIsShown (current => null);
      setViradiseActive (current => null);
      setViyuIsShown (current => null);
      setViyuActive (current => null);
      setGuidedCountdownIsShown (current => null);
      setGuidedCountdownActive (current => null);
      setGuidedCountdownMinIsShown (current => null);
      setGuidedCountdownMinActive (current => null);
    };

    const handleVanspiClick = event => {
      setVanspiIsShown (current => !VanspiIsShown);
      setVanspiActive (current => !VanspiActive);
      setVanstraIsShown (current => null);
      setVanstraActive (current => null);
      setViIsShown (current => null);
      setViActive (current => null);
      setVoidWignowIsShown (current => null);
      setVoidWignowActive (current => null);
      setLucerebIsShown (current => null);
      setLucerebActive (current => null);
      setProfBartIsShown (current => null);
      setProfBartActive (current => null);
      setVanvriIsShown (current => null);
      setVanvriActive (current => null);
      setViyusaIsShown (current => null);
      setViyusaActive (current => null);
      setViradiseIsShown (current => null);
      setViradiseActive (current => null);
      setViyuIsShown (current => null);
      setViyuActive (current => null);
      setGuidedCountdownIsShown (current => null);
      setGuidedCountdownActive (current => null);
      setGuidedCountdownMinIsShown (current => null);
      setGuidedCountdownMinActive (current => null);
    };

    const handleViyuClick = event => {
      setViyuIsShown (current => !ViyuIsShown);
      setViyuActive (current => !ViyuActive);
      setVanstraIsShown (current => null);
      setVanstraActive (current => null);
      setViIsShown (current => null);
      setViActive (current => null);
      setVoidWignowIsShown (current => null);
      setVoidWignowActive (current => null);
      setLucerebIsShown (current => null);
      setLucerebActive (current => null);
      setProfBartIsShown (current => null);
      setProfBartActive (current => null);
      setVanspiIsShown (current => null);
      setVanspiActive (current => null);
      setViyusaIsShown (current => null);
      setViyusaActive (current => null);
      setViradiseIsShown (current => null);
      setViradiseActive (current => null);
      setVanvriIsShown (current => null);
      setVanvriActive (current => null);
      setGuidedCountdownIsShown (current => null);
      setGuidedCountdownActive (current => null);
      setGuidedCountdownMinIsShown (current => null);
      setGuidedCountdownMinActive (current => null);
    };       

    
    const handleVanvriClick = event => {
      setVanvriIsShown (current => !VanvriIsShown);
      setVanvriActive (current => !VanvriActive);
      setVanstraIsShown (current => null);
      setVanstraActive (current => null);
      setViIsShown (current => null);
      setViActive (current => null);
      setVoidWignowIsShown (current => null);
      setVoidWignowActive (current => null);
      setLucerebIsShown (current => null);
      setLucerebActive (current => null);
      setProfBartIsShown (current => null);
      setProfBartActive (current => null);
      setVanspiIsShown (current => null);
      setVanspiActive (current => null);
      setViyusaIsShown (current => null);
      setViyusaActive (current => null);
      setViradiseIsShown (current => null);
      setViradiseActive (current => null);
      setViyuIsShown (current => null);
      setViyuActive (current => null);
      setGuidedCountdownIsShown (current => null);
      setGuidedCountdownActive (current => null);
      setGuidedCountdownMinIsShown (current => null);
      setGuidedCountdownMinActive (current => null);
    };    

    const handleViyusaClick = event => {
      setViyusaIsShown (current => !ViyusaIsShown);
      setViyusaActive (current => !ViyusaActive);
      setVanstraIsShown (current => null);
      setVanstraActive (current => null);
      setViIsShown (current => null);
      setViActive (current => null);
      setVoidWignowIsShown (current => null);
      setVoidWignowActive (current => null);
      setLucerebIsShown (current => null);
      setLucerebActive (current => null);
      setProfBartIsShown (current => null);
      setProfBartActive (current => null);
      setVanspiIsShown (current => null);
      setVanspiActive (current => null);
      setVanvriIsShown (current => null);
      setVanvriActive (current => null);
      setViradiseIsShown (current => null);
      setViradiseActive (current => null);
      setViyuIsShown (current => null);
      setViyuActive (current => null);
      setGuidedCountdownIsShown (current => null);
      setGuidedCountdownActive (current => null);
      setGuidedCountdownMinIsShown (current => null);
      setGuidedCountdownMinActive (current => null);
    };    

    const handleViradiseClick = event => {
      setViradiseIsShown (current => !ViradiseIsShown);
      setViradiseActive (current => !ViradiseActive);
      setVanstraIsShown (current => null);
      setVanstraActive (current => null);
      setViIsShown (current => null);
      setViActive (current => null);
      setVoidWignowIsShown (current => null);
      setVoidWignowActive (current => null);
      setLucerebIsShown (current => null);
      setLucerebActive (current => null);
      setProfBartIsShown (current => null);
      setProfBartActive (current => null);
      setVanspiIsShown (current => null);
      setVanspiActive (current => null);
      setVanvriIsShown (current => null);
      setVanvriActive (current => null);
      setViyusaIsShown (current => null);
      setViyusaActive (current => null);
      setViyuIsShown (current => null);
      setViyuActive (current => null);
      setGuidedCountdownIsShown (current => null);
      setGuidedCountdownActive (current => null);      
      setGuidedCountdownMinIsShown (current => null);
      setGuidedCountdownMinActive (current => null);
    };
    
    const handleTab1Click = event => {
      setGuidedCountdownMinIsShown (current => null);
      setGuidedCountdownMinActive (current => null);
      setTab1IsShown (current => true);
      setTab1Active (current => true);
      setTab2IsShown (current => false);
      setTab2Active (current => false);

      };

      const handleTab2Click = event => {
        setGuidedCountdownIsShown (current => null);
        setGuidedCountdownActive (current => null);
        setTab1IsShown (current => false);
        setTab1Active (current => false);
        setTab2IsShown (current => true);
        setTab2Active (current => true);
      };

    const handleGuidedCountdownClick = event => {
    setGuidedCountdownIsShown (current => !GuidedCountdownIsShown);
    setGuidedCountdownActive (current => !GuidedCountdownActive);  };

    const handleGuidedCountdownMinClick = event => {
      setGuidedCountdownMinIsShown (current => !GuidedCountdownMinIsShown);
      setGuidedCountdownMinActive (current => !GuidedCountdownMinActive);  };


  


    const [DefenseStat, setDefenseStat] = useState(0); // Or any other non-zero value
    const [HP10, setHP10] = useState(0); // Or any other non-zero value
    const [HP75, setHP75] = useState(0); // Or any other non-zero value
    const [HP75Round, setHP75Round] = useState(0); // Or any other non-zero value
    const [HPCalculatedValue, setHPCalculatedValue] = useState(0); // Or any other non-zero value

    
    const handleDefenseStatChange = (valueString) => {
      setGuidedCountdownIsShown (current => null);
      setGuidedCountdownActive (current => null);
      setGuidedCountdownMinIsShown (current => null);
      setGuidedCountdownMinActive (current => null);
      const value = parseFloat(valueString); 
        setDefenseStat(value);
        setHP75(((value+30)*.75)/2);
    };
  
    const totalHP75Round = Math.ceil(HP75)
    const totalHPCalculatedValue = Math.max (((totalHP75Round*2)+2))
    
    const [MaxHP, setMaxHP] = useState(0);
    const totalMaxHP = Math.max ((30+DefenseStat),0)

    const [BaseHP, setBaseHP] = useState(0);
    const totalBaseHP = Math.min (totalMaxHP,100)


//Vanstra- MINIMUM TO WIN//

const [VanstraDownTo10Raw, setVanstraDownTo10Raw] = useState(0)
const totalVanstraDownTo10Raw = Math.min (totalBaseHP*.1)

//account for even number
const [VanstraDownTo10, setVanstraDownTo10] = useState(0)
const totalVanstraDownTo10 = 2 * Math.ceil(totalVanstraDownTo10Raw/2)

//seconds to reach 10%//

const [VanstraHPToLoseRaw, setVanstraHPToLoseRaw] = useState(0)
const totalVanstraHPToLoseRaw = Math.max(totalBaseHP-totalVanstraDownTo10,0)

const [VanstraHPToLose, setVanstraHPToLose] = useState(0)
const totalVanstraHPToLose = 2 * Math.floor(totalVanstraHPToLoseRaw/2)

const [VanstraSecsTo10, setVanstraSecsTo10] = useState(0)
const totalVanstraSecsTo10 = Math.max ((totalVanstraHPToLose/2)*4)

const [VanstraLoopsRaw, setVanstraLoopsRaw] = useState(0)
const totalVanstraLoopsRaw = Math.floor (180/totalVanstraSecsTo10)

const [VanstraCheck0, setVanstraCheck0] = useState(0)
const totalVanstraCheck0 = Math.max (180-(totalVanstraLoopsRaw*totalVanstraSecsTo10),0)

const [VanstraCheckLoops0, setVanstraCheckLoops0] = useState(0)
const totalVanstraCheckLoops0 = Math.ceil (totalVanstraCheck0/1000)

const [VanstraLoops, setVanstraLoops] = useState(0)
const totalVanstraLoops = Math.max ((totalVanstraLoopsRaw-1)+totalVanstraCheckLoops0)

const [VanstraSecsRemaining, setVanstraSecsRemaining] = useState(0)
const totalVanstraSecsRemaining = Math.max (180-(totalVanstraLoops*totalVanstraSecsTo10),0)

const [VanstraFinalMins, setVanstraFinalMins] = useState(0)
const totalVanstraFinalMins = Math.floor (totalVanstraSecsRemaining/60)

const [VanstraFinalSecs, setVanstraFinalSecs] = useState(0)
const totalVanstraFinalSecs = Math.max (totalVanstraSecsRemaining-(totalVanstraFinalMins*60),0)

const [VanstraMins10, setVanstraMins10] = useState(0)
const totalVanstraMins10 = Math.floor (totalVanstraSecsTo10/60)

const [VanstraSecs10, setVanstraSecs10] = useState(0)
const totalVanstraSecs10 = Math.max (totalVanstraSecsTo10-(totalVanstraMins10*60),0)


//vanstra - min to win - loops by X sec to lose 1 HP//

const [LoopTimeMin2SecPerHP, setLoopTimeMin2SecPerHP] = useState(null)
const totalLoopTimeMin2SecPerHP = Math.ceil((totalBaseHP-totalVanstraDownTo10)*2)

const [LoopTimeMin2SecPerHPTimeVal2, setLoopTimeMin2SecPerHPTimeVal2] = useState(null)
const totalLoopTimeMin2SecPerHPTimeVal2 = Math.max(totalLoopTimeMin2SecPerHP*1000)

const [LoopTimeMin2SecPerHPTimeVal3, setLoopTimeMin2SecPerHPTimeVal3] = useState(null)
const totalLoopTimeMin2SecPerHPTimeVal3 = Math.max(totalLoopTimeMin2SecPerHPTimeVal2*2)


const [WhenToStartFinalVanstraLoopMin, setWhenToStartFinalVanstraLoopMin] = useState(0)
const totalWhenToStartFinalVanstraLoopMin = Math.max
(totalLoopTimeMin2SecPerHPTimeVal2*totalVanstraLoops)


const [FinalLoopSecsVanstraMin, setFinalLoopSecsVanstraMin] = useState(0);
const totalFinalLoopSecsVanstraMin = Math.max (totalVanstraSecsRemaining*1000)


//4x MINIMUM BONUS//

//Vanstra loses 1 HP per 4 seconds. Lasts 360 seconds//

const [Vanstra75Raw, setVanstra75Raw] = useState(0)
const totalVanstra75Raw = Math.max (totalMaxHP*.75,0)

//account for even number
const [Vanstra75, setVanstra75] = useState(0)
const totalVanstra75 = ((2 * Math.ceil(totalVanstra75Raw/2))+2)

//get back to Baseline HP - update to totalMaxHP when bug is fixed//

const [VanstraBackTo100, setVanstraBackTo100] = useState(0)
const totalVanstraBackTo100 = Math.max (totalBaseHP-totalVanstra75, 0)

//time to get down to 75%//

const [VanstraSecsto75, setVanstraSecsto75] = useState(0)
const totalVanstraSecsto75 = Math.max (totalVanstraBackTo100*2,0)

const [VanstraMins75, setVanstraMins75] = useState(0)
const totalVanstraMins75 = Math.floor (totalVanstraSecsto75/60)

const [VanstraSecsAdj75, setVanstraSecsAdj75] = useState(0)
const totalVanstraSecsAdj75 = Math.max ((totalVanstraSecsto75-(totalVanstraMins75*60)),0)

const [Vanstra75LoopsRaw, setVanstra75LoopsRaw] = useState(0)
const totalVanstra75LoopsRaw = Math.floor (180/totalVanstraSecsto75)

const [Vanstra75Check0, setVanstra75Check0] = useState(0)
const totalVanstra75Check0 = Math.max (180-(totalVanstra75LoopsRaw*totalVanstraSecsto75),0)

const [Vanstra75CheckLoops0, setVanstra75CheckLoops0] = useState(0)
const totalVanstra75CheckLoops0 = Math.ceil (totalVanstra75Check0/100)

const [Vanstra75Loops, setVanstra75Loops] = useState(0)
const totalVanstra75Loops = Math.floor ((totalVanstra75LoopsRaw-1)+totalVanstra75CheckLoops0)

const [LeftoverVanstraTime, setLeftoverVanstraTime] = useState(0)
const totalLeftoverVanstraTime = Math.max (180-(totalVanstraSecsto75*totalVanstra75Loops),0)


//VI- MINIMUM TO WIN//

const [ViDownTo10Raw, setViDownTo10Raw] = useState(0)
const totalViDownTo10Raw = Math.min (totalBaseHP*.1)

//account for even number
const [ViDownTo10, setViDownTo10] = useState(0)
const totalViDownTo10 = 2 * Math.ceil(totalViDownTo10Raw/2)

//seconds to reach 10%//

const [ViHPToLoseRaw, setViHPToLoseRaw] = useState(0)
const totalViHPToLoseRaw = Math.max(totalBaseHP-totalViDownTo10,0)

const [ViHPToLose, setViHPToLose] = useState(0)
const totalViHPToLose = 2 * Math.floor(totalViHPToLoseRaw/2)

const [ViSecsTo10, setViSecsTo10] = useState(0)
const totalViSecsTo10 = Math.max ((totalViHPToLose/2)*5)

const [ViLoopsRaw, setViLoopsRaw] = useState(0)
const totalViLoopsRaw = Math.floor (300/totalViSecsTo10)

const [ViCheck0, setViCheck0] = useState(0)
const totalViCheck0 = Math.max (300-(totalViLoopsRaw*totalViSecsTo10),0)

const [ViCheckLoops0, setViCheckLoops0] = useState(0)
const totalViCheckLoops0 = Math.ceil (totalViCheck0/1000)

const [ViLoops, setViLoops] = useState(0)
const totalViLoops = Math.max ((totalViLoopsRaw-1)+totalViCheckLoops0)

const [ViSecsRemaining, setViSecsRemaining] = useState(0)
const totalViSecsRemaining = Math.max (300-(totalViLoops*totalViSecsTo10),0)

const [ViFinalMins, setViFinalMins] = useState(0)
const totalViFinalMins = Math.floor (totalViSecsRemaining/60)

const [ViFinalSecs, setViFinalSecs] = useState(0)
const totalViFinalSecs = Math.max (totalViSecsRemaining-(totalViFinalMins*60),0)

const [ViMins10, setViMins10] = useState(0)
const totalViMins10 = Math.floor (totalViSecsTo10/60)

const [ViSecs10, setViSecs10] = useState(0)
const totalViSecs10 = Math.max (totalViSecsTo10-(totalViMins10*60),0)

//4x MINIMUM BONUS//

//vi loses 1 HP per 3 seconds. Lasts 300 seconds//

const [Vi75Raw, setVi75Raw] = useState(0)
const totalVi75Raw = Math.max (totalMaxHP*.75,0)

//account for even number
const [Vi75, setVi75] = useState(0)
const totalVi75 = ((2 * Math.ceil(totalVi75Raw/2))+2)

//get back to Baseline HP - update to totalMaxHP when bug is fixed//

const [ViBackTo100, setViBackTo100] = useState(0)
const totalViBackTo100 = Math.max (totalBaseHP-totalVi75, 0)

//time to get down to 75%//

const [ViSecsto75, setViSecsto75] = useState(0)
const totalViSecsto75 = Math.max (totalViBackTo100*2.5,0)

const [ViMins75, setViMins75] = useState(0)
const totalViMins75 = Math.floor (totalViSecsto75/60)

const [ViSecsAdj75, setViSecsAdj75] = useState(0)
const totalViSecsAdj75 = Math.max ((totalViSecsto75-(totalViMins75*60)),0)

const [Vi75LoopsRaw, setVi75LoopsRaw] = useState(0)
const totalVi75LoopsRaw = Math.floor (300/totalViSecsto75)

const [Vi75Check0, setVi75Check0] = useState(0)
const totalVi75Check0 = Math.max (300-(totalVi75LoopsRaw*totalViSecsto75),0)

const [Vi75CheckLoops0, setVi75CheckLoops0] = useState(0)
const totalVi75CheckLoops0 = Math.ceil (totalVi75Check0/100)

const [Vi75Loops, setVi75Loops] = useState(0)
const totalVi75Loops = Math.floor ((totalVi75LoopsRaw-1)+totalVi75CheckLoops0)

const [LeftoverViTime, setLeftoverViTime] = useState(0)
const totalLeftoverViTime = Math.max (300-(totalViSecsto75*totalVi75Loops),0)


//VOID WIGNOW - MINIMUM TO WIN//

const [VoidWignowDownTo10Raw, setVoidWignowDownTo10Raw] = useState(0)
const totalVoidWignowDownTo10Raw = Math.min (totalBaseHP*.1)

//account for even number
const [VoidWignowDownTo10, setVoidWignowDownTo10] = useState(0)
const totalVoidWignowDownTo10 = 2 * Math.ceil(totalVoidWignowDownTo10Raw/2)

//seconds to reach 10%//

const [VoidWignowHPToLoseRaw, setVoidWignowHPToLoseRaw] = useState(0)
const totalVoidWignowHPToLoseRaw = Math.max(totalBaseHP-totalVoidWignowDownTo10,0)

const [VoidWignowHPToLose, setVoidWignowHPToLose] = useState(0)
const totalVoidWignowHPToLose = 2 * Math.floor(totalVoidWignowHPToLoseRaw/2)

const [VoidWignowSecsTo10, setVoidWignowSecsTo10] = useState(0)
const totalVoidWignowSecsTo10 = Math.max ((totalVoidWignowHPToLose/2)*8)

const [VoidWignowLoopsRaw, setVoidWignowLoopsRaw] = useState(0)
const totalVoidWignowLoopsRaw = Math.floor (360/totalVoidWignowSecsTo10)

const [VoidWignowCheck0, setVoidWignowCheck0] = useState(0)
const totalVoidWignowCheck0 = Math.max (360-(totalVoidWignowLoopsRaw*totalVoidWignowSecsTo10),0)

const [VoidWignowCheckLoops0, setVoidWignowCheckLoops0] = useState(0)
const totalVoidWignowCheckLoops0 = Math.ceil (totalVoidWignowCheck0/1000)

const [VoidWignowLoops, setVoidWignowLoops] = useState(0)
const totalVoidWignowLoops = Math.max ((totalVoidWignowLoopsRaw-1)+totalVoidWignowCheckLoops0)

const [VoidWignowSecsRemaining, setVoidWignowSecsRemaining] = useState(0)
const totalVoidWignowSecsRemaining = Math.max (360-(totalVoidWignowLoops*totalVoidWignowSecsTo10),0)

const [VoidWignowFinalMins, setVoidWignowFinalMins] = useState(0)
const totalVoidWignowFinalMins = Math.floor (totalVoidWignowSecsRemaining/60)

const [VoidWignowFinalSecs, setVoidWignowFinalSecs] = useState(0)
const totalVoidWignowFinalSecs = Math.max (totalVoidWignowSecsRemaining-(totalVoidWignowFinalMins*60),0)

const [VoidWignowMins10, setVoidWignowMins10] = useState(0)
const totalVoidWignowMins10 = Math.floor (totalVoidWignowSecsTo10/60)

const [VoidWignowSecs10, setVoidWignowSecs10] = useState(0)
const totalVoidWignowSecs10 = Math.max (totalVoidWignowSecsTo10-(totalVoidWignowMins10*60),0)

//4x MINIMUM BONUS//

//void wignow loses 1 HP per 4 seconds. Lasts 360 seconds//

const [VoidWignow75Raw, setVoidWignow75Raw] = useState(0)
const totalVoidWignow75Raw = Math.max (totalMaxHP*.75,0)

//account for even number
const [VoidWignow75, setVoidWignow75] = useState(0)
const totalVoidWignow75 = ((2 * Math.ceil(totalVoidWignow75Raw/2))+2)

//get back to Baseline HP - update to totalMaxHP when bug is fixed//

const [VoidWignowBackTo100, setVoidWignowBackTo100] = useState(0)
const totalVoidWignowBackTo100 = Math.max (totalBaseHP-totalVoidWignow75, 0)

//time to get down to 75%//

const [VoidWignowSecsto75, setVoidWignowSecsto75] = useState(0)
const totalVoidWignowSecsto75 = Math.max (totalVoidWignowBackTo100*4,0)

const [VoidWignowMins75, setVoidWignowMins75] = useState(0)
const totalVoidWignowMins75 = Math.floor (totalVoidWignowSecsto75/60)

const [VoidWignowSecsAdj75, setVoidWignowSecsAdj75] = useState(0)
const totalVoidWignowSecsAdj75 = Math.max ((totalVoidWignowSecsto75-(totalVoidWignowMins75*60)),0)

const [VoidWignow75LoopsRaw, setVoidWignow75LoopsRaw] = useState(0)
const totalVoidWignow75LoopsRaw = Math.floor (360/totalVoidWignowSecsto75)

const [VoidWignow75Check0, setVoidWignow75Check0] = useState(0)
const totalVoidWignow75Check0 = Math.max (360-(totalVoidWignow75LoopsRaw*totalVoidWignowSecsto75),0)

const [VoidWignow75CheckLoops0, setVoidWignow75CheckLoops0] = useState(0)
const totalVoidWignow75CheckLoops0 = Math.ceil (totalVoidWignow75Check0/100)

const [VoidWignow75Loops, setVoidWignow75Loops] = useState(0)
const totalVoidWignow75Loops = Math.floor ((totalVoidWignow75LoopsRaw-1)+totalVoidWignow75CheckLoops0)

const [LeftoverVoidWignowTime, setLeftoverVoidWignowTime] = useState(0)
const totalLeftoverVoidWignowTime = Math.max (360-(totalVoidWignowSecsto75*totalVoidWignow75Loops),0)

//Lucereb- MINIMUM TO WIN//

const [LucerebDownTo10Raw, setLucerebDownTo10Raw] = useState(0)
const totalLucerebDownTo10Raw = Math.min (totalBaseHP*.1)

//account for even number
const [LucerebDownTo10, setLucerebDownTo10] = useState(0)
const totalLucerebDownTo10 = 2 * Math.ceil(totalLucerebDownTo10Raw/2)

//seconds to reach 10%//

const [LucerebHPToLoseRaw, setLucerebHPToLoseRaw] = useState(0)
const totalLucerebHPToLoseRaw = Math.max(totalBaseHP-totalLucerebDownTo10,0)

const [LucerebHPToLose, setLucerebHPToLose] = useState(0)
const totalLucerebHPToLose = 2 * Math.floor(totalLucerebHPToLoseRaw/2)

const [LucerebSecsTo10, setLucerebSecsTo10] = useState(0)
const totalLucerebSecsTo10 = Math.max ((totalLucerebHPToLose/2)*6)

const [LucerebLoopsRaw, setLucerebLoopsRaw] = useState(0)
const totalLucerebLoopsRaw = Math.floor (600/totalLucerebSecsTo10)

const [LucerebCheck0, setLucerebCheck0] = useState(0)
const totalLucerebCheck0 = Math.max (600-(totalLucerebLoopsRaw*totalLucerebSecsTo10),0)

const [LucerebCheckLoops0, setLucerebCheckLoops0] = useState(0)
const totalLucerebCheckLoops0 = Math.ceil (totalLucerebCheck0/1000)

const [LucerebLoops, setLucerebLoops] = useState(0)
const totalLucerebLoops = Math.max ((totalLucerebLoopsRaw-1)+totalLucerebCheckLoops0)

const [LucerebSecsRemaining, setLucerebSecsRemaining] = useState(0)
const totalLucerebSecsRemaining = Math.max (600-(totalLucerebLoops*totalLucerebSecsTo10),0)

const [LucerebFinalMins, setLucerebFinalMins] = useState(0)
const totalLucerebFinalMins = Math.floor (totalLucerebSecsRemaining/60)

const [LucerebFinalSecs, setLucerebFinalSecs] = useState(0)
const totalLucerebFinalSecs = Math.max (totalLucerebSecsRemaining-(totalLucerebFinalMins*60),0)

const [LucerebMins10, setLucerebMins10] = useState(0)
const totalLucerebMins10 = Math.floor (totalLucerebSecsTo10/60)

const [LucerebSecs10, setLucerebSecs10] = useState(0)
const totalLucerebSecs10 = Math.max (totalLucerebSecsTo10-(totalLucerebMins10*60),0)

//4x MINIMUM BONUS//

//Lucereb loses 1 HP per 6 seconds. Lasts 600 seconds//

const [Lucereb75Raw, setLucereb75Raw] = useState(0)
const totalLucereb75Raw = Math.max (totalMaxHP*.75,0)

//account for even number
const [Lucereb75, setLucereb75] = useState(0)
const totalLucereb75 = (2 * Math.ceil(totalLucereb75Raw/2)+2)

//get back to Baseline HP - update to totalMaxHP when bug is fixed//

const [LucerebBackTo100, setLucerebBackTo100] = useState(0)
const totalLucerebBackTo100 = Math.max (totalBaseHP-totalLucereb75, 0)

//time to get down to 75%//

const [LucerebSecsto75, setLucerebSecsto75] = useState(0)
const totalLucerebSecsto75 = Math.max (totalLucerebBackTo100*3,0)

const [LucerebMins75, setLucerebMins75] = useState(0)
const totalLucerebMins75 = Math.floor (totalLucerebSecsto75/60)

const [LucerebSecsAdj75, setLucerebSecsAdj75] = useState(0)
const totalLucerebSecsAdj75 = Math.max ((totalLucerebSecsto75-(totalLucerebMins75*60)),0)

const [Lucereb75LoopsRaw, setLucereb75LoopsRaw] = useState(0)
const totalLucereb75LoopsRaw = Math.floor (600/totalLucerebSecsto75)

const [Lucereb75Check0, setLucereb75Check0] = useState(0)
const totalLucereb75Check0 = Math.max (600-(totalLucereb75LoopsRaw*totalLucerebSecsto75),0)

const [Lucereb75CheckLoops0, setLucereb75CheckLoops0] = useState(0)
const totalLucereb75CheckLoops0 = Math.ceil (totalLucereb75Check0/100)

const [Lucereb75Loops, setLucereb75Loops] = useState(0)
const totalLucereb75Loops = Math.floor ((totalLucereb75LoopsRaw-1)+totalLucereb75CheckLoops0)

const [LeftoverLucerebTime, setLeftoverLucerebTime] = useState(0)
const totalLeftoverLucerebTime = Math.max (600-(totalLucerebSecsto75*totalLucereb75Loops),0)


//ProfBart- MINIMUM TO WIN//

const [ProfBartDownTo10Raw, setProfBartDownTo10Raw] = useState(0)
const totalProfBartDownTo10Raw = Math.min (totalBaseHP*.1)

//account for even number
const [ProfBartDownTo10, setProfBartDownTo10] = useState(0)
const totalProfBartDownTo10 = 2 * Math.ceil(totalProfBartDownTo10Raw/2)

//seconds to reach 10%//

const [ProfBartHPToLoseRaw, setProfBartHPToLoseRaw] = useState(0)
const totalProfBartHPToLoseRaw = Math.max(totalBaseHP-totalProfBartDownTo10,0)

const [ProfBartHPToLose, setProfBartHPToLose] = useState(0)
const totalProfBartHPToLose = 2 * Math.floor(totalProfBartHPToLoseRaw/2)

const [ProfBartSecsTo10, setProfBartSecsTo10] = useState(0)
const totalProfBartSecsTo10 = Math.max ((totalProfBartHPToLose/2)*5)

const [ProfBartLoopsRaw, setProfBartLoopsRaw] = useState(0)
const totalProfBartLoopsRaw = Math.floor (600/totalProfBartSecsTo10)

const [ProfBartCheck0, setProfBartCheck0] = useState(0)
const totalProfBartCheck0 = Math.max (600-(totalProfBartLoopsRaw*totalProfBartSecsTo10),0)

const [ProfBartCheckLoops0, setProfBartCheckLoops0] = useState(0)
const totalProfBartCheckLoops0 = Math.ceil (totalProfBartCheck0/1000)

const [ProfBartLoops, setProfBartLoops] = useState(0)
const totalProfBartLoops = Math.max ((totalProfBartLoopsRaw-1)+totalProfBartCheckLoops0)

const [ProfBartSecsRemaining, setProfBartSecsRemaining] = useState(0)
const totalProfBartSecsRemaining = Math.max (600-(totalProfBartLoops*totalProfBartSecsTo10),0)

const [ProfBartFinalMins, setProfBartFinalMins] = useState(0)
const totalProfBartFinalMins = Math.floor (totalProfBartSecsRemaining/60)

const [ProfBartFinalSecs, setProfBartFinalSecs] = useState(0)
const totalProfBartFinalSecs = Math.max (totalProfBartSecsRemaining-(totalProfBartFinalMins*60),0)


const [ProfBartMins10, setProfBartMins10] = useState(0)
const totalProfBartMins10 = Math.floor (totalProfBartSecsTo10/60)

const [ProfBartSecs10, setProfBartSecs10] = useState(0)
const totalProfBartSecs10 = Math.max (totalProfBartSecsTo10-(totalProfBartMins10*60),0)

//4x MINIMUM BONUS//

//ProfBart loses 1 HP per 2.5 seconds. Lasts 600 seconds//

const [ProfBart75Raw, setProfBart75Raw] = useState(0)
const totalProfBart75Raw = Math.max (totalMaxHP*.75,0)

//account for even number
const [ProfBart75, setProfBart75] = useState(0)
const totalProfBart75 = (2 * Math.ceil(totalProfBart75Raw/2)+2)

//get back to Baseline HP - update to totalMaxHP when bug is fixed//

const [ProfBartBackTo100, setProfBartBackTo100] = useState(0)
const totalProfBartBackTo100 = Math.max (totalBaseHP-totalProfBart75, 0)

//time to get down to 75%//

const [ProfBartSecsto75, setProfBartSecsto75] = useState(0)
const totalProfBartSecsto75 = Math.max (totalProfBartBackTo100*2.5,0)

const [ProfBartMins75, setProfBartMins75] = useState(0)
const totalProfBartMins75 = Math.floor (totalProfBartSecsto75/60)

const [ProfBartSecsAdj75, setProfBartSecsAdj75] = useState(0)
const totalProfBartSecsAdj75 = Math.max ((totalProfBartSecsto75-(totalProfBartMins75*60)),0)

//Vanspi- MINIMUM TO WIN//

const [VanspiDownTo10Raw, setVanspiDownTo10Raw] = useState(0)
const totalVanspiDownTo10Raw = Math.min (totalBaseHP*.1)

//account for even number
const [VanspiDownTo10, setVanspiDownTo10] = useState(0)
const totalVanspiDownTo10 = 2 * Math.ceil(totalVanspiDownTo10Raw/2)

//seconds to reach 10%//

const [VanspiHPToLoseRaw, setVanspiHPToLoseRaw] = useState(0)
const totalVanspiHPToLoseRaw = Math.max(totalBaseHP-totalVanspiDownTo10,0)

const [VanspiHPToLose, setVanspiHPToLose] = useState(0)
const totalVanspiHPToLose = 2 * Math.floor(totalVanspiHPToLoseRaw/2)

const [VanspiSecsTo10, setVanspiSecsTo10] = useState(0)
const totalVanspiSecsTo10 = Math.max ((totalVanspiHPToLose/2)*5)

const [VanspiLoopsRaw, setVanspiLoopsRaw] = useState(0)
const totalVanspiLoopsRaw = Math.floor (600/totalVanspiSecsTo10)

const [VanspiCheck0, setVanspiCheck0] = useState(0)
const totalVanspiCheck0 = Math.max (600-(totalVanspiLoopsRaw*totalVanspiSecsTo10),0)

const [VanspiCheckLoops0, setVanspiCheckLoops0] = useState(0)
const totalVanspiCheckLoops0 = Math.ceil (totalVanspiCheck0/1000)

const [VanspiLoops, setVanspiLoops] = useState(0)
const totalVanspiLoops = Math.max ((totalVanspiLoopsRaw-1)+totalVanspiCheckLoops0)

const [VanspiSecsRemaining, setVanspiSecsRemaining] = useState(0)
const totalVanspiSecsRemaining = Math.max (600-(totalVanspiLoops*totalVanspiSecsTo10),0)

const [VanspiFinalMins, setVanspiFinalMins] = useState(0)
const totalVanspiFinalMins = Math.floor (totalVanspiSecsRemaining/60)

const [VanspiFinalSecs, setVanspiFinalSecs] = useState(0)
const totalVanspiFinalSecs = Math.max (totalVanspiSecsRemaining-(totalVanspiFinalMins*60),0)

const [VanspiMins10, setVanspiMins10] = useState(0)
const totalVanspiMins10 = Math.floor (totalVanspiSecsTo10/60)

const [VanspiSecs10, setVanspiSecs10] = useState(0)
const totalVanspiSecs10 = Math.max (totalVanspiSecsTo10-(totalVanspiMins10*60),0)

//4x MINIMUM BONUS//

//Vanspi loses 1 HP per 2.5 seconds. Lasts 600 seconds//

const [Vanspi75Raw, setVanspi75Raw] = useState(0)
const totalVanspi75Raw = Math.max (totalMaxHP*.75,0)

//account for even number
const [Vanspi75, setVanspi75] = useState(0)
const totalVanspi75 = (2 * Math.ceil(totalVanspi75Raw/2)+2)

//get back to Baseline HP - update to totalMaxHP when bug is fixed//

const [VanspiBackTo100, setVanspiBackTo100] = useState(0)
const totalVanspiBackTo100 = Math.max (totalBaseHP-totalVanspi75, 0)

//time to get down to 75%//

const [VanspiSecsto75, setVanspiSecsto75] = useState(0)
const totalVanspiSecsto75 = Math.max (totalVanspiBackTo100*2.5,0)

const [VanspiMins75, setVanspiMins75] = useState(0)
const totalVanspiMins75 = Math.floor (totalVanspiSecsto75/60)

const [VanspiSecsAdj75, setVanspiSecsAdj75] = useState(0)
const totalVanspiSecsAdj75 = Math.max ((totalVanspiSecsto75-(totalVanspiMins75*60)),0)

const [VanspiProfB75LoopsRaw, setVanspiProfB75LoopsRaw] = useState(0)
const totalVanspiProfB75LoopsRaw = Math.floor (600/totalVanspiSecsto75)

const [VanspiProfB75Check0, setVanspiProfB75Check0] = useState(0)
const totalVanspiProfB75Check0 = Math.max (600-(totalVanspiProfB75LoopsRaw*totalVanspiSecsto75),0)

const [VanspiProfB75CheckLoops0, setVanspiProfB75CheckLoops0] = useState(0)
const totalVanspiProfB75CheckLoops0 = Math.ceil (totalVanspiProfB75Check0/100)

const [VanspiProfB75Loops, setVanspiProfB75Loops] = useState(0)
const totalVanspiProfB75Loops = Math.floor ((totalVanspiProfB75LoopsRaw-1)+totalVanspiProfB75CheckLoops0)

const [LeftoverVanspiProfBTime, setLeftoverVanspiProfBTime] = useState(0)
const totalLeftoverVanspiProfBTime = Math.max (600-(totalVanspiSecsto75*totalVanspiProfB75Loops),0)


//Viyu- MINIMUM TO WIN//

const [ViyuDownTo10Raw, setViyuDownTo10Raw] = useState(0)
const totalViyuDownTo10Raw = Math.min (totalBaseHP*.1)

//account for even number
const [ViyuDownTo10, setViyuDownTo10] = useState(0)
const totalViyuDownTo10 = 2 * Math.ceil(totalViyuDownTo10Raw/2)

//seconds to reach 10%//

const [ViyuHPToLoseRaw, setViyuHPToLoseRaw] = useState(0)
const totalViyuHPToLoseRaw = Math.max(totalBaseHP-totalViyuDownTo10,0)

const [ViyuHPToLose, setViyuHPToLose] = useState(0)
const totalViyuHPToLose = 2 * Math.floor(totalViyuHPToLoseRaw/2)

const [ViyuSecsTo10, setViyuSecsTo10] = useState(0)
const totalViyuSecsTo10 = Math.max ((totalViyuHPToLose/2)*5)

const [ViyuLoopsRaw, setViyuLoopsRaw] = useState(0)
const totalViyuLoopsRaw = Math.floor (900/totalViyuSecsTo10)

const [ViyuCheck0, setViyuCheck0] = useState(0)
const totalViyuCheck0 = Math.max (900-(totalViyuLoopsRaw*totalViyuSecsTo10),0)

const [ViyuCheckLoops0, setViyuCheckLoops0] = useState(0)
const totalViyuCheckLoops0 = Math.ceil (totalViyuCheck0/1000)

const [ViyuLoops, setViyuLoops] = useState(0)
const totalViyuLoops = Math.max ((totalViyuLoopsRaw-1)+totalViyuCheckLoops0)

const [ViyuSecsRemaining, setViyuSecsRemaining] = useState(0)
const totalViyuSecsRemaining = Math.max (900-(totalViyuLoops*totalViyuSecsTo10),0)

const [ViyuFinalMins, setViyuFinalMins] = useState(0)
const totalViyuFinalMins = Math.floor (totalViyuSecsRemaining/60)

const [ViyuFinalSecs, setViyuFinalSecs] = useState(0)
const totalViyuFinalSecs = Math.max (totalViyuSecsRemaining-(totalViyuFinalMins*60),0)

const [ViyuMins10, setViyuMins10] = useState(0)
const totalViyuMins10 = Math.floor (totalViyuSecsTo10/60)

const [ViyuSecs10, setViyuSecs10] = useState(0)
const totalViyuSecs10 = Math.max (totalViyuSecsTo10-(totalViyuMins10*60),0)

//4x MINIMUM BONUS//

//Viyu loses 1 HP per 3.5 seconds. Lasts 900 seconds//

const [Viyu75Raw, setViyu75Raw] = useState(0)
const totalViyu75Raw = Math.max (totalMaxHP*.75,0)

//account for even number
const [Viyu75, setViyu75] = useState(0)
const totalViyu75 = (2 * Math.ceil(totalViyu75Raw/2)+2)

//get back to Baseline HP - update to totalMaxHP when bug is fixed//

const [ViyuBackTo100, setViyuBackTo100] = useState(0)
const totalViyuBackTo100 = Math.max (totalBaseHP-totalViyu75, 0)

//time to get down to 75%//

const [ViyuSecsto75, setViyuSecsto75] = useState(0)
const totalViyuSecsto75 = Math.max (totalViyuBackTo100*2.5,0)

const [ViyuMins75, setViyuMins75] = useState(0)
const totalViyuMins75 = Math.floor (totalViyuSecsto75/60)

const [ViyuSecsAdj75, setViyuSecsAdj75] = useState(0)
const totalViyuSecsAdj75 = Math.max ((totalViyuSecsto75-(totalViyuMins75*60)),0)

const [Viyu75LoopsRaw, setViyu75LoopsRaw] = useState(0)
const totalViyu75LoopsRaw = Math.floor (900/totalViyuSecsto75)

const [Viyu75Check0, setViyu75Check0] = useState(0)
const totalViyu75Check0 = Math.max (900-(totalViyu75LoopsRaw*totalViyuSecsto75),0)

const [Viyu75CheckLoops0, setViyu75CheckLoops0] = useState(0)
const totalViyu75CheckLoops0 = Math.ceil (totalViyu75Check0/100)

const [Viyu75Loops, setViyu75Loops] = useState(0)
const totalViyu75Loops = Math.floor ((totalViyu75LoopsRaw-1)+totalViyu75CheckLoops0)

const [LeftoverViyuTime, setLeftoverViyuTime] = useState(0)
const totalLeftoverViyuTime = Math.max (900-(totalViyuSecsto75*totalViyu75Loops),0)


//Vanvri- MINIMUM TO WIN//

const [VanvriDownTo10Raw, setVanvriDownTo10Raw] = useState(0)
const totalVanvriDownTo10Raw = Math.min (totalBaseHP*.1)

//account for even number
const [VanvriDownTo10, setVanvriDownTo10] = useState(0)
const totalVanvriDownTo10 = 2 * Math.ceil(totalVanvriDownTo10Raw/2)

//seconds to reach 10%//

const [VanvriHPToLoseRaw, setVanvriHPToLoseRaw] = useState(0)
const totalVanvriHPToLoseRaw = Math.max(totalBaseHP-totalVanvriDownTo10,0)

const [VanvriHPToLose, setVanvriHPToLose] = useState(0)
const totalVanvriHPToLose = 2 * Math.floor(totalVanvriHPToLoseRaw/2)

const [VanvriSecsTo10, setVanvriSecsTo10] = useState(0)
const totalVanvriSecsTo10 = Math.max ((totalVanvriHPToLose/2)*6)

const [VanvriLoopsRaw, setVanvriLoopsRaw] = useState(0)
const totalVanvriLoopsRaw = Math.floor (1200/totalVanvriSecsTo10)

const [VanvriCheck0, setVanvriCheck0] = useState(0)
const totalVanvriCheck0 = Math.max (1200-(totalVanvriLoopsRaw*totalVanvriSecsTo10),0)

const [VanvriCheckLoops0, setVanvriCheckLoops0] = useState(0)
const totalVanvriCheckLoops0 = Math.ceil (totalVanvriCheck0/1000)

const [VanvriLoops, setVanvriLoops] = useState(0)
const totalVanvriLoops = Math.max ((totalVanvriLoopsRaw-1)+totalVanvriCheckLoops0)

const [VanvriSecsRemaining, setVanvriSecsRemaining] = useState(0)
const totalVanvriSecsRemaining = Math.max (1200-(totalVanvriLoops*totalVanvriSecsTo10),0)

const [VanvriFinalMins, setVanvriFinalMins] = useState(0)
const totalVanvriFinalMins = Math.floor (totalVanvriSecsRemaining/60)

const [VanvriFinalSecs, setVanvriFinalSecs] = useState(0)
const totalVanvriFinalSecs = Math.max (totalVanvriSecsRemaining-(totalVanvriFinalMins*60),0)

const [VanvriMins10, setVanvriMins10] = useState(0)
const totalVanvriMins10 = Math.floor (totalVanvriSecsTo10/60)

const [VanvriSecs10, setVanvriSecs10] = useState(0)
const totalVanvriSecs10 = Math.max (totalVanvriSecsTo10-(totalVanvriMins10*60),0)

//4x MINIMUM BONUS//

//Vanvri loses 1 HP per 3 seconds. Lasts 1200 seconds//

const [Vanvri75Raw, setVanvri75Raw] = useState(0)
const totalVanvri75Raw = Math.max (totalMaxHP*.75,0)

//account for even number
const [Vanvri75, setVanvri75] = useState(0)
const totalVanvri75 = (2 * Math.ceil(totalVanvri75Raw/2)+2)

//get back to Baseline HP - update to totalMaxHP when bug is fixed//

const [VanvriBackTo100, setVanvriBackTo100] = useState(0)
const totalVanvriBackTo100 = Math.max (totalBaseHP-totalVanvri75, 0)

//time to get down to 75%//

const [VanvriSecsto75, setVanvriSecsto75] = useState(0)
const totalVanvriSecsto75 = Math.max (totalVanvriBackTo100*3,0)

const [VanvriMins75, setVanvriMins75] = useState(0)
const totalVanvriMins75 = Math.floor (totalVanvriSecsto75/60)

const [VanvriSecsAdj75, setVanvriSecsAdj75] = useState(0)
const totalVanvriSecsAdj75 = Math.max ((totalVanvriSecsto75-(totalVanvriMins75*60)),0)

const [Vanvri75LoopsRaw, setVanvri75LoopsRaw] = useState(0)
const totalVanvri75LoopsRaw = Math.floor (1200/totalVanvriSecsto75)

const [Vanvri75Check0, setVanvri75Check0] = useState(0)
const totalVanvri75Check0 = Math.max (1200-(totalVanvri75LoopsRaw*totalVanvriSecsto75),0)

const [Vanvri75CheckLoops0, setVanvri75CheckLoops0] = useState(0)
const totalVanvri75CheckLoops0 = Math.ceil (totalVanvri75Check0/100)

const [Vanvri75Loops, setVanvri75Loops] = useState(0)
const totalVanvri75Loops = Math.floor ((totalVanvri75LoopsRaw-1)+totalVanvri75CheckLoops0)

const [LeftoverVanvriTime, setLeftoverVanvriTime] = useState(0)
const totalLeftoverVanvriTime = Math.max (1200-(totalVanvriSecsto75*totalVanvri75Loops),0)


//Viyusa- MINIMUM TO WIN//

const [ViyusaDownTo10Raw, setViyusaDownTo10Raw] = useState(0)
const totalViyusaDownTo10Raw = Math.min (totalBaseHP*.1)

//account for even number
const [ViyusaDownTo10, setViyusaDownTo10] = useState(0)
const totalViyusaDownTo10 = 2 * Math.ceil(totalViyusaDownTo10Raw/2)

//seconds to reach 10%//

const [ViyusaHPToLoseRaw, setViyusaHPToLoseRaw] = useState(0)
const totalViyusaHPToLoseRaw = Math.max(totalBaseHP-totalViyusaDownTo10,0)

const [ViyusaHPToLose, setViyusaHPToLose] = useState(0)
const totalViyusaHPToLose = 2 * Math.floor(totalViyusaHPToLoseRaw/2)

const [ViyusaSecsTo10, setViyusaSecsTo10] = useState(0)
const totalViyusaSecsTo10 = Math.max ((totalViyusaHPToLose/2)*7)

const [ViyusaLoopsRaw, setViyusaLoopsRaw] = useState(0)
const totalViyusaLoopsRaw = Math.floor (1500/totalViyusaSecsTo10)

const [ViyusaCheck0, setViyusaCheck0] = useState(0)
const totalViyusaCheck0 = Math.max (1500-(totalViyusaLoopsRaw*totalViyusaSecsTo10),0)

const [ViyusaCheckLoops0, setViyusaCheckLoops0] = useState(0)
const totalViyusaCheckLoops0 = Math.ceil (totalViyusaCheck0/1000)

const [ViyusaLoops, setViyusaLoops] = useState(0)
const totalViyusaLoops = Math.max ((totalViyusaLoopsRaw-1)+totalViyusaCheckLoops0)

const [ViyusaSecsRemaining, setViyusaSecsRemaining] = useState(0)
const totalViyusaSecsRemaining = Math.max (1500-(totalViyusaLoops*totalViyusaSecsTo10),0)

const [ViyusaFinalMins, setViyusaFinalMins] = useState(0)
const totalViyusaFinalMins = Math.floor (totalViyusaSecsRemaining/60)

const [ViyusaFinalSecs, setViyusaFinalSecs] = useState(0)
const totalViyusaFinalSecs = Math.max (totalViyusaSecsRemaining-(totalViyusaFinalMins*60),0)

const [ViyusaMins10, setViyusaMins10] = useState(0)
const totalViyusaMins10 = Math.floor (totalViyusaSecsTo10/60)

const [ViyusaSecs10, setViyusaSecs10] = useState(0)
const totalViyusaSecs10 = Math.max (totalViyusaSecsTo10-(totalViyusaMins10*60),0)

//4x MINIMUM BONUS//

//Viyusa loses 1 HP per 3.5 seconds. Lasts 1500 seconds//

const [Viyusa75Raw, setViyusa75Raw] = useState(0)
const totalViyusa75Raw = Math.max (totalMaxHP*.75,0)

//account for even number
const [Viyusa75, setViyusa75] = useState(0)
const totalViyusa75 = (2 * Math.ceil(totalViyusa75Raw/2)+2)

//get back to Baseline HP - update to totalMaxHP when bug is fixed//

const [ViyusaBackTo100, setViyusaBackTo100] = useState(0)
const totalViyusaBackTo100 = Math.max (totalBaseHP-totalViyusa75, 0)

//time to get down to 75%//

const [ViyusaSecsto75, setViyusaSecsto75] = useState(0)
const totalViyusaSecsto75 = Math.max (totalViyusaBackTo100*3.5,0)

const [ViyusaMins75, setViyusaMins75] = useState(0)
const totalViyusaMins75 = Math.floor (totalViyusaSecsto75/60)

const [ViyusaSecsAdj75, setViyusaSecsAdj75] = useState(0)
const totalViyusaSecsAdj75 = Math.max ((totalViyusaSecsto75-(totalViyusaMins75*60)),0)

const [Viyusa75LoopsRaw, setViyusa75LoopsRaw] = useState(0)
const totalViyusa75LoopsRaw = Math.floor (1500/totalViyusaSecsto75)

const [Viyusa75Check0, setViyusa75Check0] = useState(0)
const totalViyusa75Check0 = Math.max (1500-(totalViyusa75LoopsRaw*totalViyusaSecsto75),0)

const [Viyusa75CheckLoops0, setViyusa75CheckLoops0] = useState(0)
const totalViyusa75CheckLoops0 = Math.ceil (totalViyusa75Check0/100)


const [Viyusa75Loops, setViyusa75Loops] = useState(0)
const totalViyusa75Loops = Math.floor ((totalViyusa75LoopsRaw-1)+totalViyusa75CheckLoops0)

const [LeftoverViyusaTime, setLeftoverViyusaTime] = useState(0)
const totalLeftoverViyusaTime = Math.max (1500-(totalViyusaSecsto75*totalViyusa75Loops),0)


//Viradise- MINIMUM TO WIN//

const [ViradiseDownTo10Raw, setViradiseDownTo10Raw] = useState(0)
const totalViradiseDownTo10Raw = Math.min (totalBaseHP*.1)

//account for even number
const [ViradiseDownTo10, setViradiseDownTo10] = useState(0)
const totalViradiseDownTo10 = 2 * Math.ceil(totalViradiseDownTo10Raw/2)

//seconds to reach 10%//

const [ViradiseHPToLoseRaw, setViradiseHPToLoseRaw] = useState(0)
const totalViradiseHPToLoseRaw = Math.max(totalBaseHP-totalViradiseDownTo10,0)

const [ViradiseHPToLose, setViradiseHPToLose] = useState(0)
const totalViradiseHPToLose = 2 * Math.floor(totalViradiseHPToLoseRaw/2)

const [ViradiseSecsTo10, setViradiseSecsTo10] = useState(0)
const totalViradiseSecsTo10 = Math.max ((totalViradiseHPToLose/2)*7)

const [ViradiseLoopsRaw, setViradiseLoopsRaw] = useState(0)
const totalViradiseLoopsRaw = Math.floor (1800/totalViradiseSecsTo10)

const [ViradiseCheck0, setViradiseCheck0] = useState(0)
const totalViradiseCheck0 = Math.max (1800-(totalViradiseLoopsRaw*totalViradiseSecsTo10),0)

const [ViradiseCheckLoops0, setViradiseCheckLoops0] = useState(0)
const totalViradiseCheckLoops0 = Math.ceil (totalViradiseCheck0/10000)

const [ViradiseLoops, setViradiseLoops] = useState(0)
const totalViradiseLoops = Math.max ((totalViradiseLoopsRaw-1)+totalViradiseCheckLoops0)

const [ViradiseSecsRemaining, setViradiseSecsRemaining] = useState(0)
const totalViradiseSecsRemaining = Math.max (1800-(totalViradiseLoops*totalViradiseSecsTo10),0)

const [ViradiseFinalMins, setViradiseFinalMins] = useState(0)
const totalViradiseFinalMins = Math.floor (totalViradiseSecsRemaining/60)

const [ViradiseFinalSecs, setViradiseFinalSecs] = useState(0)
const totalViradiseFinalSecs = Math.max (totalViradiseSecsRemaining-(totalViradiseFinalMins*60),0)

const [ViradiseMins10, setViradiseMins10] = useState(0)
const totalViradiseMins10 = Math.floor (totalViradiseSecsTo10/60)

const [ViradiseSecs10, setViradiseSecs10] = useState(0)
const totalViradiseSecs10 = Math.max (totalViradiseSecsTo10-(totalViradiseMins10*60),0)

//4x MINIMUM BONUS//

//Viradise loses 1 HP per 3.5 seconds. Lasts 1800 seconds//

const [Viradise75Raw, setViradise75Raw] = useState(0)
const totalViradise75Raw = Math.max (totalMaxHP*.75,0)

//account for even number
const [Viradise75, setViradise75] = useState(0)
const totalViradise75 = (2 * Math.ceil(totalViradise75Raw/2)+2)

//get back to Baseline HP - update to totalMaxHP when bug is fixed//

const [ViradiseBackTo100, setViradiseBackTo100] = useState(0)
const totalViradiseBackTo100 = Math.max (totalBaseHP-totalViradise75, 0)

//time to get down to 75%//

const [ViradiseSecsto75, setViradiseSecsto75] = useState(0)
const totalViradiseSecsto75 = Math.max (totalViradiseBackTo100*3.5,0)

const [ViradiseMins75, setViradiseMins75] = useState(0)
const totalViradiseMins75 = Math.floor (totalViradiseSecsto75/60)

const [ViradiseSecsAdj75, setViradiseSecsAdj75] = useState(0)
const totalViradiseSecsAdj75 = Math.max ((totalViradiseSecsto75-(totalViradiseMins75*60)),0)

const [Viradise75LoopsRaw, setViradise75LoopsRaw] = useState(0)
const totalViradise75LoopsRaw = Math.floor (1800/totalViradiseSecsto75)

const [Viradise75Check0, setViradise75Check0] = useState(0)
const totalViradise75Check0 = Math.max (1800-(totalViradise75LoopsRaw*totalViradiseSecsto75),0)

const [Viradise75CheckLoops0, setViradise75CheckLoops0] = useState(0)
const totalViradise75CheckLoops0 = Math.ceil (totalViradise75Check0/100)

const [Viradise75Loops, setViradise75Loops] = useState(0)
const totalViradise75Loops = Math.floor ((totalViradise75LoopsRaw-1)+totalViradise75CheckLoops0)

const [LeftoverViradiseTime, setLeftoverViradiseTime] = useState(0)
const totalLeftoverViradiseTime = Math.max (1800-(totalViradiseSecsto75*totalViradise75Loops),0)


//vanstra - loops by X sec to lose 1 HP//

const [LoopTime2SecPerHP, setLoopTime2SecPerHP] = useState(null)
const totalLoopTime2SecPerHP = Math.ceil((totalBaseHP-totalHPCalculatedValue)*2)

const [LoopTime2SecPerHPTimeVal2, setLoopTime2SecPerHPTimeVal2] = useState(null)
const totalLoopTime2SecPerHPTimeVal2 = Math.max(totalLoopTime2SecPerHP*1000)

const [LoopTime2SecPerHPTimeVal3, setLoopTime2SecPerHPTimeVal3] = useState(null)
const totalLoopTime2SecPerHPTimeVal3 = Math.max(totalLoopTime2SecPerHPTimeVal2*2)

const [LoopTime2SecPerHPTimeVal4, setLoopTime2SecPerHPTimeVal4] = useState(null)
const totalLoopTime2SecPerHPTimeVal4 = Math.max(totalLoopTime2SecPerHPTimeVal2*3)

const [LoopTime2SecPerHPTimeVal5, setLoopTime2SecPerHPTimeVal5] = useState(null)
const totalLoopTime2SecPerHPTimeVal5 = Math.max(totalLoopTime2SecPerHPTimeVal2*4)

const [LoopTime2SecPerHPTimeVal6, setLoopTime2SecPerHPTimeVal6] = useState(null)
const totalLoopTime2SecPerHPTimeVal6 = Math.max(totalLoopTime2SecPerHPTimeVal2*5)

const [LoopTime2SecPerHPTimeVal7, setLoopTime2SecPerHPTimeVal7] = useState(null)
const totalLoopTime2SecPerHPTimeVal7 = Math.max(totalLoopTime2SecPerHPTimeVal2*6)

const [LoopTime2SecPerHPTimeVal8, setLoopTime2SecPerHPTimeVal8] = useState(null)
const totalLoopTime2SecPerHPTimeVal8 = Math.max(totalLoopTime2SecPerHPTimeVal2*7)

const [LoopTime2SecPerHPTimeVal9, setLoopTime2SecPerHPTimeVal9] = useState(null)
const totalLoopTime2SecPerHPTimeVal9 = Math.max(totalLoopTime2SecPerHPTimeVal2*8)

const [LoopTime2SecPerHPTimeVal10, setLoopTime2SecPerHPTimeVal10] = useState(null)
const totalLoopTime2SecPerHPTimeVal10 = Math.max(totalLoopTime2SecPerHPTimeVal2*9)

const [LoopTime2SecPerHPTimeVal11, setLoopTime2SecPerHPTimeVal11] = useState(null)
const totalLoopTime2SecPerHPTimeVal11 = Math.max(totalLoopTime2SecPerHPTimeVal2*10)

const [LoopTime2SecPerHPTimeVal12, setLoopTime2SecPerHPTimeVal12] = useState(null)
const totalLoopTime2SecPerHPTimeVal12 = Math.max(totalLoopTime2SecPerHPTimeVal2*11)

const [LoopTime2SecPerHPTimeVal13, setLoopTime2SecPerHPTimeVal13] = useState(null)
const totalLoopTime2SecPerHPTimeVal13 = Math.max(totalLoopTime2SecPerHPTimeVal2*12)

const [LoopTime2SecPerHPTimeVal14, setLoopTime2SecPerHPTimeVal14] = useState(null)
const totalLoopTime2SecPerHPTimeVal14 = Math.max(totalLoopTime2SecPerHPTimeVal2*13)

const [LoopTime2SecPerHPTimeVal15, setLoopTime2SecPerHPTimeVal15] = useState(null)
const totalLoopTime2SecPerHPTimeVal15 = Math.max(totalLoopTime2SecPerHPTimeVal2*14)

const [LoopTime2SecPerHPTimeVal16, setLoopTime2SecPerHPTimeVal16] = useState(null)
const totalLoopTime2SecPerHPTimeVal16 = Math.max(totalLoopTime2SecPerHPTimeVal2*15)

const [LoopTime2SecPerHPTimeVal17, setLoopTime2SecPerHPTimeVal17] = useState(null)
const totalLoopTime2SecPerHPTimeVal17 = Math.max(totalLoopTime2SecPerHPTimeVal2*16)

const [LoopTime2SecPerHPTimeVal18, setLoopTime2SecPerHPTimeVal18] = useState(null)
const totalLoopTime2SecPerHPTimeVal18 = Math.max(totalLoopTime2SecPerHPTimeVal2*17)

const [LoopTime2SecPerHPTimeVal19, setLoopTime2SecPerHPTimeVal19] = useState(null)
const totalLoopTime2SecPerHPTimeVal19 = Math.max(totalLoopTime2SecPerHPTimeVal2*18)

const [LoopTime2SecPerHPTimeVal20, setLoopTime2SecPerHPTimeVal20] = useState(null)
const totalLoopTime2SecPerHPTimeVal20 = Math.max(totalLoopTime2SecPerHPTimeVal2*19)

const [LoopTime2SecPerHPTimeVal21, setLoopTime2SecPerHPTimeVal21] = useState(null)
const totalLoopTime2SecPerHPTimeVal21 = Math.max(totalLoopTime2SecPerHPTimeVal2*20)

const [LoopTime2SecPerHPTimeVal22, setLoopTime2SecPerHPTimeVal22] = useState(null)
const totalLoopTime2SecPerHPTimeVal22 = Math.max(totalLoopTime2SecPerHPTimeVal2*21)

const [WhenToStartFinalVanstraLoop, setWhenToStartFinalVanstraLoop] = useState(0)
const totalWhenToStartFinalVanstraLoop = Math.max
(totalLoopTime2SecPerHPTimeVal2*totalVanstra75Loops)

const [RemainingSecondsVanstra, setRemainingSecondsVanstra] = useState(0)
const totalRemainingSecondsVanstra = Math.max((180000-totalWhenToStartFinalVanstraLoop)/1000,0)

const [FinalLoopSecsVanstra, setFinalLoopSecsVanstra] = useState(0);
const totalFinalLoopSecsVanstra = Math.max (totalLeftoverVanstraTime*1000)

//Vi - min to win - loops by X sec to lose 1 HP//

const [LoopTimeMin2_5SecPerHP5Min, setLoopTimeMin2_5SecPerHP5Min] = useState(null)
const totalLoopTimeMin2_5SecPerHP5Min = Math.ceil((totalBaseHP-totalViDownTo10)*2.5)

const [LoopTimeMin2_5SecPerHP5MinTimeVal2, setLoopTimeMin2_5SecPerHP5MinTimeVal2] = useState(null)
const totalLoopTimeMin2_5SecPerHP5MinTimeVal2 = Math.max(totalLoopTimeMin2_5SecPerHP5Min*1000)

const [LoopTimeMin2_5SecPerHP5MinTimeVal3, setLoopTimeMin2_5SecPerHP5MinTimeVal3] = useState(null)
const totalLoopTimeMin2_5SecPerHP5MinTimeVal3 = Math.max(totalLoopTimeMin2_5SecPerHP5MinTimeVal2*2)

const [LoopTimeMin2_5SecPerHP5MinTimeVal4, setLoopTimeMin2_5SecPerHP5MinTimeVal4] = useState(null)
const totalLoopTimeMin2_5SecPerHP5MinTimeVal4 = Math.max(totalLoopTimeMin2_5SecPerHP5MinTimeVal2*3)

const [WhenToStartFinalViLoopMin, setWhenToStartFinalViLoopMin] = useState(0)
const totalWhenToStartFinalViLoopMin = Math.max
(totalLoopTimeMin2_5SecPerHP5MinTimeVal2*totalViLoops)

const [FinalLoopSecsViMin, setFinalLoopSecsViMin] = useState(0);
const totalFinalLoopSecsViMin = Math.max (totalViSecsRemaining*1000)

//Vi - loops by X sec to lose 1 HP//

const [LoopTime2_5SecPerHP5Min, setLoopTime2_5SecPerHP5Min] = useState(null)
const totalLoopTime2_5SecPerHP5Min = Math.ceil((totalBaseHP-totalHPCalculatedValue)*2.5)

const [LoopTime2_5SecPerHP5MinTimeVal2, setLoopTime2_5SecPerHP5MinTimeVal2] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal2 = Math.max(totalLoopTime2_5SecPerHP5Min*1000)

const [LoopTime2_5SecPerHP5MinTimeVal3, setLoopTime2_5SecPerHP5MinTimeVal3] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal3 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*2)

const [LoopTime2_5SecPerHP5MinTimeVal4, setLoopTime2_5SecPerHP5MinTimeVal4] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal4 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*3)

const [LoopTime2_5SecPerHP5MinTimeVal5, setLoopTime2_5SecPerHP5MinTimeVal5] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal5 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*4)

const [LoopTime2_5SecPerHP5MinTimeVal6, setLoopTime2_5SecPerHP5MinTimeVal6] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal6 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*5)

const [LoopTime2_5SecPerHP5MinTimeVal7, setLoopTime2_5SecPerHP5MinTimeVal7] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal7 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*6)

const [LoopTime2_5SecPerHP5MinTimeVal8, setLoopTime2_5SecPerHP5MinTimeVal8] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal8 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*7)

const [LoopTime2_5SecPerHP5MinTimeVal9, setLoopTime2_5SecPerHP5MinTimeVal9] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal9 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*8)

const [LoopTime2_5SecPerHP5MinTimeVal10, setLoopTime2_5SecPerHP5MinTimeVal10] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal10 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*9)

const [LoopTime2_5SecPerHP5MinTimeVal11, setLoopTime2_5SecPerHP5MinTimeVal11] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal11 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*10)

const [LoopTime2_5SecPerHP5MinTimeVal12, setLoopTime2_5SecPerHP5MinTimeVal12] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal12 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*11)

const [LoopTime2_5SecPerHP5MinTimeVal13, setLoopTime2_5SecPerHP5MinTimeVal13] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal13 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*12)

const [LoopTime2_5SecPerHP5MinTimeVal14, setLoopTime2_5SecPerHP5MinTimeVal14] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal14 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*13)

const [LoopTime2_5SecPerHP5MinTimeVal15, setLoopTime2_5SecPerHP5MinTimeVal15] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal15 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*14)

const [LoopTime2_5SecPerHP5MinTimeVal16, setLoopTime2_5SecPerHP5MinTimeVal16] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal16 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*15)

const [LoopTime2_5SecPerHP5MinTimeVal17, setLoopTime2_5SecPerHP5MinTimeVal17] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal17 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*16)

const [LoopTime2_5SecPerHP5MinTimeVal18, setLoopTime2_5SecPerHP5MinTimeVal18] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal18 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*17)

const [LoopTime2_5SecPerHP5MinTimeVal19, setLoopTime2_5SecPerHP5MinTimeVal19] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal19 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*18)

const [LoopTime2_5SecPerHP5MinTimeVal20, setLoopTime2_5SecPerHP5MinTimeVal20] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal20 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*19)

const [LoopTime2_5SecPerHP5MinTimeVal21, setLoopTime2_5SecPerHP5MinTimeVal21] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal21 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*20)

const [LoopTime2_5SecPerHP5MinTimeVal22, setLoopTime2_5SecPerHP5MinTimeVal22] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal22 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*21)

const [LoopTime2_5SecPerHP5MinTimeVal23, setLoopTime2_5SecPerHP5MinTimeVal23] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal23 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*22)

const [LoopTime2_5SecPerHP5MinTimeVal24, setLoopTime2_5SecPerHP5MinTimeVal24] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal24 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*23)

const [LoopTime2_5SecPerHP5MinTimeVal25, setLoopTime2_5SecPerHP5MinTimeVal25] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal25 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*24)

const [LoopTime2_5SecPerHP5MinTimeVal26, setLoopTime2_5SecPerHP5MinTimeVal26] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal26 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*25)

const [LoopTime2_5SecPerHP5MinTimeVal27, setLoopTime2_5SecPerHP5MinTimeVal27] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal27 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*26)

const [LoopTime2_5SecPerHP5MinTimeVal28, setLoopTime2_5SecPerHP5MinTimeVal28] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal28 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*27)

const [LoopTime2_5SecPerHP5MinTimeVal29, setLoopTime2_5SecPerHP5MinTimeVal29] = useState(null)
const totalLoopTime2_5SecPerHP5MinTimeVal29 = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*28)


const [WhenToStartFinalViLoop, setWhenToStartFinalViLoop] = useState(0)
const totalWhenToStartFinalViLoop = Math.max(totalLoopTime2_5SecPerHP5MinTimeVal2*totalVi75Loops)

const [RemainingSecondsVi, setRemainingSecondsVi] = useState(0)
const totalRemainingSecondsVi = Math.max((300000-totalWhenToStartFinalViLoop)/1000,0)

const [FinalLoopSecsVi, setFinalLoopSecsVi] = useState(0);
const totalFinalLoopSecsVi = Math.max (totalLeftoverViTime*1000)

//VoidWignow - min to win - loops by X sec to lose 1 HP//

const [LoopTimeMin4SecPerHP, setLoopTimeMin4SecPerHP] = useState(null)
const totalLoopTimeMin4SecPerHP = Math.ceil((totalBaseHP-totalVoidWignowDownTo10)*4)

const [LoopTimeMin4SecPerHPTimeVal2, setLoopTimeMin4SecPerHPTimeVal2] = useState(null)
const totalLoopTimeMin4SecPerHPTimeVal2 = Math.max(totalLoopTimeMin4SecPerHP*1000)

const [LoopTimeMin4SecPerHPTimeVal3, setLoopTimeMin4SecPerHPTimeVal3] = useState(null)
const totalLoopTimeMin4SecPerHPTimeVal3 = Math.max(totalLoopTimeMin4SecPerHPTimeVal2*2)

const [WhenToStartFinalVoidWignowLoopMin, setWhenToStartFinalVoidWignowLoopMin] = useState(0)
const totalWhenToStartFinalVoidWignowLoopMin = Math.max
(totalLoopTimeMin4SecPerHPTimeVal2*totalVoidWignowLoops)

const [FinalLoopSecsVoidWignowMin, setFinalLoopSecsVoidWignowMin] = useState(0);
const totalFinalLoopSecsVoidWignowMin = Math.max (totalVoidWignowSecsRemaining*1000)

//void wignow - loops by X sec to lose 1 HP//

const [LoopTime4SecPerHP, setLoopTime4SecPerHP] = useState(null)
const totalLoopTime4SecPerHP = Math.ceil((totalBaseHP-totalHPCalculatedValue)*4)

const [LoopTime4SecPerHPTimeVal2, setLoopTime4SecPerHPTimeVal2] = useState(null)
const totalLoopTime4SecPerHPTimeVal2 = Math.max(totalLoopTime4SecPerHP*1000)

const [LoopTime4SecPerHPTimeVal3, setLoopTime4SecPerHPTimeVal3] = useState(null)
const totalLoopTime4SecPerHPTimeVal3 = Math.max(totalLoopTime4SecPerHPTimeVal2*2)

const [LoopTime4SecPerHPTimeVal4, setLoopTime4SecPerHPTimeVal4] = useState(null)
const totalLoopTime4SecPerHPTimeVal4 = Math.max(totalLoopTime4SecPerHPTimeVal2*3)

const [LoopTime4SecPerHPTimeVal5, setLoopTime4SecPerHPTimeVal5] = useState(null)
const totalLoopTime4SecPerHPTimeVal5 = Math.max(totalLoopTime4SecPerHPTimeVal2*4)

const [LoopTime4SecPerHPTimeVal6, setLoopTime4SecPerHPTimeVal6] = useState(null)
const totalLoopTime4SecPerHPTimeVal6 = Math.max(totalLoopTime4SecPerHPTimeVal2*5)

const [LoopTime4SecPerHPTimeVal7, setLoopTime4SecPerHPTimeVal7] = useState(null)
const totalLoopTime4SecPerHPTimeVal7 = Math.max(totalLoopTime4SecPerHPTimeVal2*6)

const [LoopTime4SecPerHPTimeVal8, setLoopTime4SecPerHPTimeVal8] = useState(null)
const totalLoopTime4SecPerHPTimeVal8 = Math.max(totalLoopTime4SecPerHPTimeVal2*7)

const [LoopTime4SecPerHPTimeVal9, setLoopTime4SecPerHPTimeVal9] = useState(null)
const totalLoopTime4SecPerHPTimeVal9 = Math.max(totalLoopTime4SecPerHPTimeVal2*8)

const [LoopTime4SecPerHPTimeVal10, setLoopTime4SecPerHPTimeVal10] = useState(null)
const totalLoopTime4SecPerHPTimeVal10 = Math.max(totalLoopTime4SecPerHPTimeVal2*9)

const [LoopTime4SecPerHPTimeVal11, setLoopTime4SecPerHPTimeVal11] = useState(null)
const totalLoopTime4SecPerHPTimeVal11 = Math.max(totalLoopTime4SecPerHPTimeVal2*10)

const [LoopTime4SecPerHPTimeVal12, setLoopTime4SecPerHPTimeVal12] = useState(null)
const totalLoopTime4SecPerHPTimeVal12 = Math.max(totalLoopTime4SecPerHPTimeVal2*11)

const [LoopTime4SecPerHPTimeVal13, setLoopTime4SecPerHPTimeVal13] = useState(null)
const totalLoopTime4SecPerHPTimeVal13 = Math.max(totalLoopTime4SecPerHPTimeVal2*12)

const [LoopTime4SecPerHPTimeVal14, setLoopTime4SecPerHPTimeVal14] = useState(null)
const totalLoopTime4SecPerHPTimeVal14 = Math.max(totalLoopTime4SecPerHPTimeVal2*13)

const [LoopTime4SecPerHPTimeVal15, setLoopTime4SecPerHPTimeVal15] = useState(null)
const totalLoopTime4SecPerHPTimeVal15 = Math.max(totalLoopTime4SecPerHPTimeVal2*14)

const [LoopTime4SecPerHPTimeVal16, setLoopTime4SecPerHPTimeVal16] = useState(null)
const totalLoopTime4SecPerHPTimeVal16 = Math.max(totalLoopTime4SecPerHPTimeVal2*15)

const [LoopTime4SecPerHPTimeVal17, setLoopTime4SecPerHPTimeVal17] = useState(null)
const totalLoopTime4SecPerHPTimeVal17 = Math.max(totalLoopTime4SecPerHPTimeVal2*16)

const [LoopTime4SecPerHPTimeVal18, setLoopTime4SecPerHPTimeVal18] = useState(null)
const totalLoopTime4SecPerHPTimeVal18 = Math.max(totalLoopTime4SecPerHPTimeVal2*17)

const [LoopTime4SecPerHPTimeVal19, setLoopTime4SecPerHPTimeVal19] = useState(null)
const totalLoopTime4SecPerHPTimeVal19 = Math.max(totalLoopTime4SecPerHPTimeVal2*18)

const [LoopTime4SecPerHPTimeVal20, setLoopTime4SecPerHPTimeVal20] = useState(null)
const totalLoopTime4SecPerHPTimeVal20 = Math.max(totalLoopTime4SecPerHPTimeVal2*19)

const [LoopTime4SecPerHPTimeVal21, setLoopTime4SecPerHPTimeVal21] = useState(null)
const totalLoopTime4SecPerHPTimeVal21 = Math.max(totalLoopTime4SecPerHPTimeVal2*20)

const [LoopTime4SecPerHPTimeVal22, setLoopTime4SecPerHPTimeVal22] = useState(null)
const totalLoopTime4SecPerHPTimeVal22 = Math.max(totalLoopTime4SecPerHPTimeVal2*21)

const [WhenToStartFinalVoidWignowLoop, setWhenToStartFinalVoidWignowLoop] = useState(0)
const totalWhenToStartFinalVoidWignowLoop = Math.max(totalLoopTime4SecPerHPTimeVal2*totalVoidWignow75Loops)

const [RemainingSecondsVoidWignow, setRemainingSecondsVoidWignow] = useState(0)
const totalRemainingSecondsVoidWignow = Math.max((360000-totalWhenToStartFinalVoidWignowLoop)/1000,0)

const [FinalLoopSecsVoidWignow, setFinalLoopSecsVoidWignow] = useState(0);
const totalFinalLoopSecsVoidWignow = Math.max (totalLeftoverVoidWignowTime*1000)

//VanspiProfB - min to win - loops by X sec to lose 1 HP//

const [LoopTimeMin2_5SecPerHP10Min, setLoopTimeMin2_5SecPerHP10Min] = useState(null)
const totalLoopTimeMin2_5SecPerHP10Min = Math.ceil((totalBaseHP-totalVanspiDownTo10)*2.5)

const [LoopTimeMin2_5SecPerHP10MinTimeVal2, setLoopTimeMin2_5SecPerHP10MinTimeVal2] = useState(null)
const totalLoopTimeMin2_5SecPerHP10MinTimeVal2 = Math.max(totalLoopTimeMin2_5SecPerHP10Min*1000)

const [LoopTimeMin2_5SecPerHP10MinTimeVal3, setLoopTimeMin2_5SecPerHP10MinTimeVal3] = useState(null)
const totalLoopTimeMin2_5SecPerHP10MinTimeVal3 = Math.max(totalLoopTimeMin2_5SecPerHP10MinTimeVal2*2)

const [LoopTimeMin2_5SecPerHP10MinTimeVal4, setLoopTimeMin2_5SecPerHP10MinTimeVal4] = useState(null)
const totalLoopTimeMin2_5SecPerHP10MinTimeVal4 = Math.max(totalLoopTimeMin2_5SecPerHP10MinTimeVal2*3)

const [LoopTimeMin2_5SecPerHP10MinTimeVal5, setLoopTimeMin2_5SecPerHP10MinTimeVal5] = useState(null)
const totalLoopTimeMin2_5SecPerHP10MinTimeVal5 = Math.max(totalLoopTimeMin2_5SecPerHP10MinTimeVal2*4)

const [LoopTimeMin2_5SecPerHP10MinTimeVal6, setLoopTimeMin2_5SecPerHP10MinTimeVal6] = useState(null)
const totalLoopTimeMin2_5SecPerHP10MinTimeVal6 = Math.max(totalLoopTimeMin2_5SecPerHP10MinTimeVal2*5)

const [LoopTimeMin2_5SecPerHP10MinTimeVal7, setLoopTimeMin2_5SecPerHP10MinTimeVal7] = useState(null)
const totalLoopTimeMin2_5SecPerHP10MinTimeVal7 = Math.max(totalLoopTimeMin2_5SecPerHP10MinTimeVal2*6)

const [LoopTimeMin2_5SecPerHP10MinTimeVal8, setLoopTimeMin2_5SecPerHP10MinTimeVal8] = useState(null)
const totalLoopTimeMin2_5SecPerHP10MinTimeVal8 = Math.max(totalLoopTimeMin2_5SecPerHP10MinTimeVal2*7)

const [LoopTimeMin2_5SecPerHP10MinTimeVal9, setLoopTimeMin2_5SecPerHP10MinTimeVal9] = useState(null)
const totalLoopTimeMin2_5SecPerHP10MinTimeVal9 = Math.max(totalLoopTimeMin2_5SecPerHP10MinTimeVal2*8)

const [WhenToStartFinalVanspiProfBLoopMin, setWhenToStartFinalVanspiProfBLoopMin] = useState(0)
const totalWhenToStartFinalVanspiProfBLoopMin = Math.max
(totalLoopTimeMin2_5SecPerHP10MinTimeVal2*totalVanspiLoops)

const [FinalLoopSecsVanspiProfBMin, setFinalLoopSecsVanspiProfBMin] = useState(0);
const totalFinalLoopSecsVanspiProfBMin = Math.max (totalVanspiSecsRemaining*1000)

//VanspiProfB - loops by 2.5 sec to lose 1 HP//

const [LoopTime2_5SecPerHP10Min, setLoopTime2_5SecPerHP10Min] = useState(null)
const totalLoopTime2_5SecPerHP10Min = Math.ceil((totalBaseHP-totalHPCalculatedValue)*2.5)

const [LoopTime2_5SecPerHP10MinTimeVal2, setLoopTime2_5SecPerHP10MinTimeVal2] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal2 = Math.max(totalLoopTime2_5SecPerHP10Min*1000)

const [LoopTime2_5SecPerHP10MinTimeVal3, setLoopTime2_5SecPerHP10MinTimeVal3] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal3 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*2)

const [LoopTime2_5SecPerHP10MinTimeVal4, setLoopTime2_5SecPerHP10MinTimeVal4] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal4 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*3)

const [LoopTime2_5SecPerHP10MinTimeVal5, setLoopTime2_5SecPerHP10MinTimeVal5] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal5 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*4)

const [LoopTime2_5SecPerHP10MinTimeVal6, setLoopTime2_5SecPerHP10MinTimeVal6] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal6 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*5)

const [LoopTime2_5SecPerHP10MinTimeVal7, setLoopTime2_5SecPerHP10MinTimeVal7] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal7 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*6)

const [LoopTime2_5SecPerHP10MinTimeVal8, setLoopTime2_5SecPerHP10MinTimeVal8] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal8 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*7)

const [LoopTime2_5SecPerHP10MinTimeVal9, setLoopTime2_5SecPerHP10MinTimeVal9] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal9 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*8)

const [LoopTime2_5SecPerHP10MinTimeVal10, setLoopTime2_5SecPerHP10MinTimeVal10] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal10 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*9)

const [LoopTime2_5SecPerHP10MinTimeVal11, setLoopTime2_5SecPerHP10MinTimeVal11] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal11 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*10)

const [LoopTime2_5SecPerHP10MinTimeVal12, setLoopTime2_5SecPerHP10MinTimeVal12] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal12 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*11)

const [LoopTime2_5SecPerHP10MinTimeVal13, setLoopTime2_5SecPerHP10MinTimeVal13] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal13 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*12)

const [LoopTime2_5SecPerHP10MinTimeVal14, setLoopTime2_5SecPerHP10MinTimeVal14] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal14 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*13)

const [LoopTime2_5SecPerHP10MinTimeVal15, setLoopTime2_5SecPerHP10MinTimeVal15] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal15 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*14)

const [LoopTime2_5SecPerHP10MinTimeVal16, setLoopTime2_5SecPerHP10MinTimeVal16] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal16 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*15)

const [LoopTime2_5SecPerHP10MinTimeVal17, setLoopTime2_5SecPerHP10MinTimeVal17] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal17 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*16)

const [LoopTime2_5SecPerHP10MinTimeVal18, setLoopTime2_5SecPerHP10MinTimeVal18] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal18 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*17)

const [LoopTime2_5SecPerHP10MinTimeVal19, setLoopTime2_5SecPerHP10MinTimeVal19] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal19 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*18)

const [LoopTime2_5SecPerHP10MinTimeVal20, setLoopTime2_5SecPerHP10MinTimeVal20] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal20 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*19)

const [LoopTime2_5SecPerHP10MinTimeVal21, setLoopTime2_5SecPerHP10MinTimeVal21] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal21 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*20)

const [LoopTime2_5SecPerHP10MinTimeVal22, setLoopTime2_5SecPerHP10MinTimeVal22] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal22 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*21)

const [LoopTime2_5SecPerHP10MinTimeVal23, setLoopTime2_5SecPerHP10MinTimeVal23] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal23 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*22)

const [LoopTime2_5SecPerHP10MinTimeVal24, setLoopTime2_5SecPerHP10MinTimeVal24] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal24 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*23)

const [LoopTime2_5SecPerHP10MinTimeVal25, setLoopTime2_5SecPerHP10MinTimeVal25] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal25 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*24)

const [LoopTime2_5SecPerHP10MinTimeVal26, setLoopTime2_5SecPerHP10MinTimeVal26] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal26 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*25)

const [LoopTime2_5SecPerHP10MinTimeVal27, setLoopTime2_5SecPerHP10MinTimeVal27] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal27 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*26)

const [LoopTime2_5SecPerHP10MinTimeVal28, setLoopTime2_5SecPerHP10MinTimeVal28] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal28 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*27)

const [LoopTime2_5SecPerHP10MinTimeVal29, setLoopTime2_5SecPerHP10MinTimeVal29] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal29 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*28)

const [LoopTime2_5SecPerHP10MinTimeVal30, setLoopTime2_5SecPerHP10MinTimeVal30] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal30 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*29)

const [LoopTime2_5SecPerHP10MinTimeVal31, setLoopTime2_5SecPerHP10MinTimeVal31] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal31 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*30)

const [LoopTime2_5SecPerHP10MinTimeVal32, setLoopTime2_5SecPerHP10MinTimeVal32] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal32 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*31)

const [LoopTime2_5SecPerHP10MinTimeVal33, setLoopTime2_5SecPerHP10MinTimeVal33] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal33 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*32)

const [LoopTime2_5SecPerHP10MinTimeVal34, setLoopTime2_5SecPerHP10MinTimeVal34] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal34 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*33)

const [LoopTime2_5SecPerHP10MinTimeVal35, setLoopTime2_5SecPerHP10MinTimeVal35] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal35 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*34)

const [LoopTime2_5SecPerHP10MinTimeVal36, setLoopTime2_5SecPerHP10MinTimeVal36] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal36 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*35)

const [LoopTime2_5SecPerHP10MinTimeVal37, setLoopTime2_5SecPerHP10MinTimeVal37] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal37 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*36)

const [LoopTime2_5SecPerHP10MinTimeVal38, setLoopTime2_5SecPerHP10MinTimeVal38] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal38 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*37)

const [LoopTime2_5SecPerHP10MinTimeVal39, setLoopTime2_5SecPerHP10MinTimeVal39] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal39 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*38)

const [LoopTime2_5SecPerHP10MinTimeVal40, setLoopTime2_5SecPerHP10MinTimeVal40] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal40 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*39)

const [LoopTime2_5SecPerHP10MinTimeVal41, setLoopTime2_5SecPerHP10MinTimeVal41] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal41 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*40)

const [LoopTime2_5SecPerHP10MinTimeVal42, setLoopTime2_5SecPerHP10MinTimeVal42] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal42 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*41)

const [LoopTime2_5SecPerHP10MinTimeVal43, setLoopTime2_5SecPerHP10MinTimeVal43] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal43 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*42)

const [LoopTime2_5SecPerHP10MinTimeVal44, setLoopTime2_5SecPerHP10MinTimeVal44] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal44 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*43)

const [LoopTime2_5SecPerHP10MinTimeVal45, setLoopTime2_5SecPerHP10MinTimeVal45] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal45 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*44)

const [LoopTime2_5SecPerHP10MinTimeVal46, setLoopTime2_5SecPerHP10MinTimeVal46] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal46 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*45)

const [LoopTime2_5SecPerHP10MinTimeVal47, setLoopTime2_5SecPerHP10MinTimeVal47] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal47 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*46)

const [LoopTime2_5SecPerHP10MinTimeVal48, setLoopTime2_5SecPerHP10MinTimeVal48] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal48 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*47)

const [LoopTime2_5SecPerHP10MinTimeVal49, setLoopTime2_5SecPerHP10MinTimeVal49] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal49 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*48)

const [LoopTime2_5SecPerHP10MinTimeVal50, setLoopTime2_5SecPerHP10MinTimeVal50] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal50 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*49)

const [LoopTime2_5SecPerHP10MinTimeVal51, setLoopTime2_5SecPerHP10MinTimeVal51] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal51 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*50)

const [LoopTime2_5SecPerHP10MinTimeVal52, setLoopTime2_5SecPerHP10MinTimeVal52] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal52 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*51)

const [LoopTime2_5SecPerHP10MinTimeVal53, setLoopTime2_5SecPerHP10MinTimeVal53] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal53 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*52)

const [LoopTime2_5SecPerHP10MinTimeVal54, setLoopTime2_5SecPerHP10MinTimeVal54] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal54 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*53)

const [LoopTime2_5SecPerHP10MinTimeVal55, setLoopTime2_5SecPerHP10MinTimeVal55] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal55 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*54)

const [LoopTime2_5SecPerHP10MinTimeVal56, setLoopTime2_5SecPerHP10MinTimeVal56] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal56 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*55)

const [LoopTime2_5SecPerHP10MinTimeVal57, setLoopTime2_5SecPerHP10MinTimeVal57] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal57 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*56)

const [LoopTime2_5SecPerHP10MinTimeVal58, setLoopTime2_5SecPerHP10MinTimeVal58] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal58 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*57)

const [LoopTime2_5SecPerHP10MinTimeVal59, setLoopTime2_5SecPerHP10MinTimeVal59] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal59 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*58)

const [LoopTime2_5SecPerHP10MinTimeVal60, setLoopTime2_5SecPerHP10MinTimeVal60] = useState(null)
const totalLoopTime2_5SecPerHP10MinTimeVal60 = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*59)

const [WhenToStartFinalVanspiProfBLoop, setWhenToStartFinalVanspiProfBLoop] = useState(0)
const totalWhenToStartFinalVanspiProfBLoop = Math.max(totalLoopTime2_5SecPerHP10MinTimeVal2*totalVanspiProfB75Loops)

const [RemainingSecondsVanspiProfB, setRemainingSecondsVanspiProfB] = useState(0)
const totalRemainingSecondsVanspiProfB = Math.max((600000-totalWhenToStartFinalVanspiProfBLoop)/1000,0)

const [FinalLoopSecsVanspiProfB, setFinalLoopSecsVanspiProfB] = useState(0);
const totalFinalLoopSecsVanspiProfB = Math.max (totalLeftoverVanspiProfBTime*1000)

//Viyu - min to win - loops by X sec to lose 1 HP//

const [LoopTimeMin2_5SecPerHP15Min, setLoopTimeMin2_5SecPerHP15Min] = useState(null)
const totalLoopTimeMin2_5SecPerHP15Min = Math.ceil((totalBaseHP-totalViyuDownTo10)*2.5)

const [LoopTimeMin2_5SecPerHP15MinTimeVal2, setLoopTimeMin2_5SecPerHP15MinTimeVal2] = useState(null)
const totalLoopTimeMin2_5SecPerHP15MinTimeVal2 = Math.max(totalLoopTimeMin2_5SecPerHP15Min*1000)

const [LoopTimeMin2_5SecPerHP15MinTimeVal3, setLoopTimeMin2_5SecPerHP15MinTimeVal3] = useState(null)
const totalLoopTimeMin2_5SecPerHP15MinTimeVal3 = Math.max(totalLoopTimeMin2_5SecPerHP15MinTimeVal2*2)

const [LoopTimeMin2_5SecPerHP15MinTimeVal4, setLoopTimeMin2_5SecPerHP15MinTimeVal4] = useState(null)
const totalLoopTimeMin2_5SecPerHP15MinTimeVal4 = Math.max(totalLoopTimeMin2_5SecPerHP15MinTimeVal2*3)

const [LoopTimeMin2_5SecPerHP15MinTimeVal5, setLoopTimeMin2_5SecPerHP15MinTimeVal5] = useState(null)
const totalLoopTimeMin2_5SecPerHP15MinTimeVal5 = Math.max(totalLoopTimeMin2_5SecPerHP15MinTimeVal2*4)

const [LoopTimeMin2_5SecPerHP15MinTimeVal6, setLoopTimeMin2_5SecPerHP15MinTimeVal6] = useState(null)
const totalLoopTimeMin2_5SecPerHP15MinTimeVal6 = Math.max(totalLoopTimeMin2_5SecPerHP15MinTimeVal2*5)

const [LoopTimeMin2_5SecPerHP15MinTimeVal7, setLoopTimeMin2_5SecPerHP15MinTimeVal7] = useState(null)
const totalLoopTimeMin2_5SecPerHP15MinTimeVal7 = Math.max(totalLoopTimeMin2_5SecPerHP15MinTimeVal2*6)

const [LoopTimeMin2_5SecPerHP15MinTimeVal8, setLoopTimeMin2_5SecPerHP15MinTimeVal8] = useState(null)
const totalLoopTimeMin2_5SecPerHP15MinTimeVal8 = Math.max(totalLoopTimeMin2_5SecPerHP15MinTimeVal2*7)

const [LoopTimeMin2_5SecPerHP15MinTimeVal9, setLoopTimeMin2_5SecPerHP15MinTimeVal9] = useState(null)
const totalLoopTimeMin2_5SecPerHP15MinTimeVal9 = Math.max(totalLoopTimeMin2_5SecPerHP15MinTimeVal2*8)

const [LoopTimeMin2_5SecPerHP15MinTimeVal10, setLoopTimeMin2_5SecPerHP15MinTimeVal10] = useState(null)
const totalLoopTimeMin2_5SecPerHP15MinTimeVal10 = Math.max(totalLoopTimeMin2_5SecPerHP15MinTimeVal2*9)

const [LoopTimeMin2_5SecPerHP15MinTimeVal11, setLoopTimeMin2_5SecPerHP15MinTimeVal11] = useState(null)
const totalLoopTimeMin2_5SecPerHP15MinTimeVal11 = Math.max(totalLoopTimeMin2_5SecPerHP15MinTimeVal2*10)

const [LoopTimeMin2_5SecPerHP15MinTimeVal12, setLoopTimeMin2_5SecPerHP15MinTimeVal12] = useState(null)
const totalLoopTimeMin2_5SecPerHP15MinTimeVal12 = Math.max(totalLoopTimeMin2_5SecPerHP15MinTimeVal2*11)

const [LoopTimeMin2_5SecPerHP15MinTimeVal13, setLoopTimeMin2_5SecPerHP15MinTimeVal13] = useState(null)
const totalLoopTimeMin2_5SecPerHP15MinTimeVal13 = Math.max(totalLoopTimeMin2_5SecPerHP15MinTimeVal2*12)

const [WhenToStartFinalViyuLoopMin, setWhenToStartFinalViyuLoopMin] = useState(0)
const totalWhenToStartFinalViyuLoopMin = Math.max
(totalLoopTimeMin2_5SecPerHP15MinTimeVal2*totalViyuLoops)

const [FinalLoopSecsViyuMin, setFinalLoopSecsViyuMin] = useState(0);
const totalFinalLoopSecsViyuMin = Math.max (totalViyuSecsRemaining*1000)

//Viyu - loops by X sec to lose 1 HP//

const [LoopTime2_5SecPerHP15Min, setLoopTime2_5SecPerHP15Min] = useState(null)
const totalLoopTime2_5SecPerHP15Min = Math.ceil((totalBaseHP-totalHPCalculatedValue)*2.5)

const [LoopTime2_5SecPerHP15MinTimeVal2, setLoopTime2_5SecPerHP15MinTimeVal2] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal2 = Math.max(totalLoopTime2_5SecPerHP15Min*1000)

const [LoopTime2_5SecPerHP15MinTimeVal3, setLoopTime2_5SecPerHP15MinTimeVal3] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal3 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*2)

const [LoopTime2_5SecPerHP15MinTimeVal4, setLoopTime2_5SecPerHP15MinTimeVal4] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal4 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*3)

const [LoopTime2_5SecPerHP15MinTimeVal5, setLoopTime2_5SecPerHP15MinTimeVal5] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal5 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*4)

const [LoopTime2_5SecPerHP15MinTimeVal6, setLoopTime2_5SecPerHP15MinTimeVal6] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal6 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*5)

const [LoopTime2_5SecPerHP15MinTimeVal7, setLoopTime2_5SecPerHP15MinTimeVal7] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal7 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*6)

const [LoopTime2_5SecPerHP15MinTimeVal8, setLoopTime2_5SecPerHP15MinTimeVal8] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal8 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*7)

const [LoopTime2_5SecPerHP15MinTimeVal9, setLoopTime2_5SecPerHP15MinTimeVal9] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal9 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*8)

const [LoopTime2_5SecPerHP15MinTimeVal10, setLoopTime2_5SecPerHP15MinTimeVal10] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal10 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*9)

const [LoopTime2_5SecPerHP15MinTimeVal11, setLoopTime2_5SecPerHP15MinTimeVal11] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal11 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*10)

const [LoopTime2_5SecPerHP15MinTimeVal12, setLoopTime2_5SecPerHP15MinTimeVal12] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal12 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*11)

const [LoopTime2_5SecPerHP15MinTimeVal13, setLoopTime2_5SecPerHP15MinTimeVal13] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal13 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*12)

const [LoopTime2_5SecPerHP15MinTimeVal14, setLoopTime2_5SecPerHP15MinTimeVal14] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal14 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*13)

const [LoopTime2_5SecPerHP15MinTimeVal15, setLoopTime2_5SecPerHP15MinTimeVal15] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal15 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*14)

const [LoopTime2_5SecPerHP15MinTimeVal16, setLoopTime2_5SecPerHP15MinTimeVal16] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal16 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*15)

const [LoopTime2_5SecPerHP15MinTimeVal17, setLoopTime2_5SecPerHP15MinTimeVal17] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal17 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*16)

const [LoopTime2_5SecPerHP15MinTimeVal18, setLoopTime2_5SecPerHP15MinTimeVal18] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal18 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*17)

const [LoopTime2_5SecPerHP15MinTimeVal19, setLoopTime2_5SecPerHP15MinTimeVal19] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal19 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*18)

const [LoopTime2_5SecPerHP15MinTimeVal20, setLoopTime2_5SecPerHP15MinTimeVal20] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal20 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*19)

const [LoopTime2_5SecPerHP15MinTimeVal21, setLoopTime2_5SecPerHP15MinTimeVal21] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal21 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*20)

const [LoopTime2_5SecPerHP15MinTimeVal22, setLoopTime2_5SecPerHP15MinTimeVal22] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal22 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*21)

const [LoopTime2_5SecPerHP15MinTimeVal23, setLoopTime2_5SecPerHP15MinTimeVal23] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal23 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*22)

const [LoopTime2_5SecPerHP15MinTimeVal24, setLoopTime2_5SecPerHP15MinTimeVal24] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal24 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*23)

const [LoopTime2_5SecPerHP15MinTimeVal25, setLoopTime2_5SecPerHP15MinTimeVal25] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal25 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*24)

const [LoopTime2_5SecPerHP15MinTimeVal26, setLoopTime2_5SecPerHP15MinTimeVal26] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal26 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*25)

const [LoopTime2_5SecPerHP15MinTimeVal27, setLoopTime2_5SecPerHP15MinTimeVal27] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal27 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*26)

const [LoopTime2_5SecPerHP15MinTimeVal28, setLoopTime2_5SecPerHP15MinTimeVal28] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal28 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*27)

const [LoopTime2_5SecPerHP15MinTimeVal29, setLoopTime2_5SecPerHP15MinTimeVal29] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal29 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*28)


const [LoopTime2_5SecPerHP15MinTimeVal30, setLoopTime2_5SecPerHP15MinTimeVal30] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal30 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*29)

const [LoopTime2_5SecPerHP15MinTimeVal31, setLoopTime2_5SecPerHP15MinTimeVal31] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal31 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*30)

const [LoopTime2_5SecPerHP15MinTimeVal32, setLoopTime2_5SecPerHP15MinTimeVal32] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal32 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*31)

const [LoopTime2_5SecPerHP15MinTimeVal33, setLoopTime2_5SecPerHP15MinTimeVal33] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal33 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*32)

const [LoopTime2_5SecPerHP15MinTimeVal34, setLoopTime2_5SecPerHP15MinTimeVal34] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal34 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*33)

const [LoopTime2_5SecPerHP15MinTimeVal35, setLoopTime2_5SecPerHP15MinTimeVal35] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal35 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*34)

const [LoopTime2_5SecPerHP15MinTimeVal36, setLoopTime2_5SecPerHP15MinTimeVal36] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal36 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*35)

const [LoopTime2_5SecPerHP15MinTimeVal37, setLoopTime2_5SecPerHP15MinTimeVal37] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal37 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*36)

const [LoopTime2_5SecPerHP15MinTimeVal38, setLoopTime2_5SecPerHP15MinTimeVal38] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal38 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*37)

const [LoopTime2_5SecPerHP15MinTimeVal39, setLoopTime2_5SecPerHP15MinTimeVal39] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal39 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*38)

const [LoopTime2_5SecPerHP15MinTimeVal40, setLoopTime2_5SecPerHP15MinTimeVal40] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal40 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*39)

const [LoopTime2_5SecPerHP15MinTimeVal41, setLoopTime2_5SecPerHP15MinTimeVal41] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal41 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*40)

const [LoopTime2_5SecPerHP15MinTimeVal42, setLoopTime2_5SecPerHP15MinTimeVal42] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal42 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*41)

const [LoopTime2_5SecPerHP15MinTimeVal43, setLoopTime2_5SecPerHP15MinTimeVal43] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal43 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*42)

const [LoopTime2_5SecPerHP15MinTimeVal44, setLoopTime2_5SecPerHP15MinTimeVal44] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal44 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*43)

const [LoopTime2_5SecPerHP15MinTimeVal45, setLoopTime2_5SecPerHP15MinTimeVal45] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal45 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*44)

const [LoopTime2_5SecPerHP15MinTimeVal46, setLoopTime2_5SecPerHP15MinTimeVal46] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal46 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*45)

const [LoopTime2_5SecPerHP15MinTimeVal47, setLoopTime2_5SecPerHP15MinTimeVal47] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal47 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*46)

const [LoopTime2_5SecPerHP15MinTimeVal48, setLoopTime2_5SecPerHP15MinTimeVal48] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal48 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*47)

const [LoopTime2_5SecPerHP15MinTimeVal49, setLoopTime2_5SecPerHP15MinTimeVal49] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal49 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*48)

const [LoopTime2_5SecPerHP15MinTimeVal50, setLoopTime2_5SecPerHP15MinTimeVal50] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal50 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*49)

const [LoopTime2_5SecPerHP15MinTimeVal51, setLoopTime2_5SecPerHP15MinTimeVal51] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal51 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*50)

const [LoopTime2_5SecPerHP15MinTimeVal52, setLoopTime2_5SecPerHP15MinTimeVal52] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal52 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*51)

const [LoopTime2_5SecPerHP15MinTimeVal53, setLoopTime2_5SecPerHP15MinTimeVal53] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal53 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*52)

const [LoopTime2_5SecPerHP15MinTimeVal54, setLoopTime2_5SecPerHP15MinTimeVal54] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal54 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*53)

const [LoopTime2_5SecPerHP15MinTimeVal55, setLoopTime2_5SecPerHP15MinTimeVal55] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal55 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*54)

const [LoopTime2_5SecPerHP15MinTimeVal56, setLoopTime2_5SecPerHP15MinTimeVal56] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal56 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*55)

const [LoopTime2_5SecPerHP15MinTimeVal57, setLoopTime2_5SecPerHP15MinTimeVal57] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal57 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*56)

const [LoopTime2_5SecPerHP15MinTimeVal58, setLoopTime2_5SecPerHP15MinTimeVal58] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal58 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*57)

const [LoopTime2_5SecPerHP15MinTimeVal59, setLoopTime2_5SecPerHP15MinTimeVal59] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal59 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*58)

const [LoopTime2_5SecPerHP15MinTimeVal60, setLoopTime2_5SecPerHP15MinTimeVal60] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal60 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*59)

const [LoopTime2_5SecPerHP15MinTimeVal61, setLoopTime2_5SecPerHP15MinTimeVal61] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal61 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*60)

const [LoopTime2_5SecPerHP15MinTimeVal62, setLoopTime2_5SecPerHP15MinTimeVal62] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal62 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*61)

const [LoopTime2_5SecPerHP15MinTimeVal63, setLoopTime2_5SecPerHP15MinTimeVal63] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal63 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*62)

const [LoopTime2_5SecPerHP15MinTimeVal64, setLoopTime2_5SecPerHP15MinTimeVal64] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal64 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*63)

const [LoopTime2_5SecPerHP15MinTimeVal65, setLoopTime2_5SecPerHP15MinTimeVal65] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal65 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*64)

const [LoopTime2_5SecPerHP15MinTimeVal66, setLoopTime2_5SecPerHP15MinTimeVal66] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal66 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*65)

const [LoopTime2_5SecPerHP15MinTimeVal67, setLoopTime2_5SecPerHP15MinTimeVal67] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal67 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*66)

const [LoopTime2_5SecPerHP15MinTimeVal68, setLoopTime2_5SecPerHP15MinTimeVal68] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal68 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*67)

const [LoopTime2_5SecPerHP15MinTimeVal69, setLoopTime2_5SecPerHP15MinTimeVal69] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal69 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*68)

const [LoopTime2_5SecPerHP15MinTimeVal70, setLoopTime2_5SecPerHP15MinTimeVal70] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal70 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*69)

const [LoopTime2_5SecPerHP15MinTimeVal71, setLoopTime2_5SecPerHP15MinTimeVal71] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal71 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*70)

const [LoopTime2_5SecPerHP15MinTimeVal72, setLoopTime2_5SecPerHP15MinTimeVal72] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal72 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*71)

const [LoopTime2_5SecPerHP15MinTimeVal73, setLoopTime2_5SecPerHP15MinTimeVal73] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal73 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*72)

const [LoopTime2_5SecPerHP15MinTimeVal74, setLoopTime2_5SecPerHP15MinTimeVal74] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal74 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*73)

const [LoopTime2_5SecPerHP15MinTimeVal75, setLoopTime2_5SecPerHP15MinTimeVal75] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal75 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*74)

const [LoopTime2_5SecPerHP15MinTimeVal76, setLoopTime2_5SecPerHP15MinTimeVal76] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal76 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*75)

const [LoopTime2_5SecPerHP15MinTimeVal77, setLoopTime2_5SecPerHP15MinTimeVal77] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal77 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*76)

const [LoopTime2_5SecPerHP15MinTimeVal78, setLoopTime2_5SecPerHP15MinTimeVal78] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal78 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*77)

const [LoopTime2_5SecPerHP15MinTimeVal79, setLoopTime2_5SecPerHP15MinTimeVal79] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal79 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*78)

const [LoopTime2_5SecPerHP15MinTimeVal80, setLoopTime2_5SecPerHP15MinTimeVal80] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal80 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*79)

const [LoopTime2_5SecPerHP15MinTimeVal81, setLoopTime2_5SecPerHP15MinTimeVal81] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal81 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*80)

const [LoopTime2_5SecPerHP15MinTimeVal82, setLoopTime2_5SecPerHP15MinTimeVal82] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal82 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*81)

const [LoopTime2_5SecPerHP15MinTimeVal83, setLoopTime2_5SecPerHP15MinTimeVal83] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal83 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*82)

const [LoopTime2_5SecPerHP15MinTimeVal84, setLoopTime2_5SecPerHP15MinTimeVal84] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal84 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*83)

const [LoopTime2_5SecPerHP15MinTimeVal85, setLoopTime2_5SecPerHP15MinTimeVal85] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal85 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*84)

const [LoopTime2_5SecPerHP15MinTimeVal86, setLoopTime2_5SecPerHP15MinTimeVal86] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal86 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*85)

const [LoopTime2_5SecPerHP15MinTimeVal87, setLoopTime2_5SecPerHP15MinTimeVal87] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal87 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*86)

const [LoopTime2_5SecPerHP15MinTimeVal88, setLoopTime2_5SecPerHP15MinTimeVal88] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal88 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*87)

const [LoopTime2_5SecPerHP15MinTimeVal89, setLoopTime2_5SecPerHP15MinTimeVal89] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal89 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*88)

const [LoopTime2_5SecPerHP15MinTimeVal90, setLoopTime2_5SecPerHP15MinTimeVal90] = useState(null)
const totalLoopTime2_5SecPerHP15MinTimeVal90 = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*89)

const [WhenToStartFinalViyuLoop, setWhenToStartFinalViyuLoop] = useState(0)
const totalWhenToStartFinalViyuLoop = Math.max(totalLoopTime2_5SecPerHP15MinTimeVal2*totalViyu75Loops)

const [RemainingSecondsViyu, setRemainingSecondsViyu] = useState(0)
const totalRemainingSecondsViyu = Math.max((900000-totalWhenToStartFinalViyuLoop)/1000,0)

const [FinalLoopSecsViyu, setFinalLoopSecsViyu] = useState(0);
const totalFinalLoopSecsViyu = Math.max (totalLeftoverViyuTime*1000)

//Lucereb - min to win - loops by X sec to lose 1 HP//

const [LoopTimeMin3SecPerHP10Min, setLoopTimeMin3SecPerHP10Min] = useState(null)
const totalLoopTimeMin3SecPerHP10Min = Math.ceil((totalBaseHP-totalLucerebDownTo10)*3)

const [LoopTimeMin3SecPerHP10MinTimeVal2, setLoopTimeMin3SecPerHP10MinTimeVal2] = useState(null)
const totalLoopTimeMin3SecPerHP10MinTimeVal2 = Math.max(totalLoopTimeMin3SecPerHP10Min*1000)

const [LoopTimeMin3SecPerHP10MinTimeVal3, setLoopTimeMin3SecPerHP10MinTimeVal3] = useState(null)
const totalLoopTimeMin3SecPerHP10MinTimeVal3 = Math.max(totalLoopTimeMin3SecPerHP10MinTimeVal2*2)

const [LoopTimeMin3SecPerHP10MinTimeVal4, setLoopTimeMin3SecPerHP10MinTimeVal4] = useState(null)
const totalLoopTimeMin3SecPerHP10MinTimeVal4 = Math.max(totalLoopTimeMin3SecPerHP10MinTimeVal2*3)

const [LoopTimeMin3SecPerHP10MinTimeVal5, setLoopTimeMin3SecPerHP10MinTimeVal5] = useState(null)
const totalLoopTimeMin3SecPerHP10MinTimeVal5 = Math.max(totalLoopTimeMin3SecPerHP10MinTimeVal2*4)

const [LoopTimeMin3SecPerHP10MinTimeVal6, setLoopTimeMin3SecPerHP10MinTimeVal6] = useState(null)
const totalLoopTimeMin3SecPerHP10MinTimeVal6 = Math.max(totalLoopTimeMin3SecPerHP10MinTimeVal2*5)

const [LoopTimeMin3SecPerHP10MinTimeVal7, setLoopTimeMin3SecPerHP10MinTimeVal7] = useState(null)
const totalLoopTimeMin3SecPerHP10MinTimeVal7 = Math.max(totalLoopTimeMin3SecPerHP10MinTimeVal2*6)

const [WhenToStartFinalLucerebLoopMin, setWhenToStartFinalLucerebLoopMin] = useState(0)
const totalWhenToStartFinalLucerebLoopMin = Math.max
(totalLoopTimeMin3SecPerHP10MinTimeVal2*totalLucerebLoops)

const [FinalLoopSecsLucerebMin, setFinalLoopSecsLucerebMin] = useState(0);
const totalFinalLoopSecsLucerebMin = Math.max (totalLucerebSecsRemaining*1000)



//Lucereb - loops by X sec to lose 1 HP//

const [LoopTime3SecPerHP10min, setLoopTime3SecPerHP10min] = useState(null)
const totalLoopTime3SecPerHP10min = Math.ceil((totalBaseHP-totalHPCalculatedValue)*3)

const [LoopTime3SecPerHP10minTimeVal2, setLoopTime3SecPerHP10minTimeVal2] = useState(0)
const totalLoopTime3SecPerHP10MinTimeVal2 = Math.max(totalLoopTime3SecPerHP10min*1000, 0)

const [LoopTime3SecPerHP10minTimeVal3, setLoopTime3SecPerHP10minTimeVal3] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal3 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*2)

const [LoopTime3SecPerHP10minTimeVal4, setLoopTime3SecPerHP10minTimeVal4] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal4 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*3)

const [LoopTime3SecPerHP10minTimeVal5, setLoopTime3SecPerHP10minTimeVal5] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal5 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*4)

const [LoopTime3SecPerHP10minTimeVal6, setLoopTime3SecPerHP10minTimeVal6] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal6 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*5)

const [LoopTime3SecPerHP10minTimeVal7, setLoopTime3SecPerHP10minTimeVal7] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal7 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*6)

const [LoopTime3SecPerHP10minTimeVal8, setLoopTime3SecPerHP10minTimeVal8] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal8 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*7)

const [LoopTime3SecPerHP10minTimeVal9, setLoopTime3SecPerHP10minTimeVal9] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal9 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*8)

const [LoopTime3SecPerHP10minTimeVal10, setLoopTime3SecPerHP10minTimeVal10] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal10 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*9)

const [LoopTime3SecPerHP10minTimeVal11, setLoopTime3SecPerHP10minTimeVal11] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal11 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*10)

const [LoopTime3SecPerHP10minTimeVal12, setLoopTime3SecPerHP10minTimeVal12] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal12 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*11)

const [LoopTime3SecPerHP10minTimeVal13, setLoopTime3SecPerHP10minTimeVal13] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal13 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*12)

const [LoopTime3SecPerHP10minTimeVal14, setLoopTime3SecPerHP10minTimeVal14] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal14 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*13)

const [LoopTime3SecPerHP10minTimeVal15, setLoopTime3SecPerHP10minTimeVal15] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal15 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*14)

const [LoopTime3SecPerHP10minTimeVal16, setLoopTime3SecPerHP10minTimeVal16] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal16 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*15)

const [LoopTime3SecPerHP10minTimeVal17, setLoopTime3SecPerHP10minTimeVal17] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal17 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*16)

const [LoopTime3SecPerHP10minTimeVal18, setLoopTime3SecPerHP10minTimeVal18] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal18 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*17)

const [LoopTime3SecPerHP10minTimeVal19, setLoopTime3SecPerHP10minTimeVal19] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal19 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*18)

const [LoopTime3SecPerHP10minTimeVal20, setLoopTime3SecPerHP10minTimeVal20] = useState(null)
const totalLoopTime3SecPerHP10MinTimeVal20 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*19)

const [LoopTime3SecPerHP10minTimeVal21, setLoopTime3SecPerHP10minTimeVal21] = useState(null)
const totalLoopTime3SecPerHP10MinTimeVal21 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*20)

const [LoopTime3SecPerHP10minTimeVal22, setLoopTime3SecPerHP10minTimeVal22] = useState(null)
const totalLoopTime3SecPerHP10MinTimeVal22 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*21)

const [LoopTime3SecPerHP10minTimeVal23, setLoopTime3SecPerHP10minTimeVal23] = useState(null)
const totalLoopTime3SecPerHP10MinTimeVal23 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*22)

const [LoopTime3SecPerHP10minTimeVal24, setLoopTime3SecPerHP10minTimeVal24] = useState(null)
const totalLoopTime3SecPerHP10MinTimeVal24 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*23)

const [LoopTime3SecPerHP10minTimeVal25, setLoopTime3SecPerHP10minTimeVal25] = useState(null)
const totalLoopTime3SecPerHP10MinTimeVal25 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*24)

const [LoopTime3SecPerHP10minTimeVal26, setLoopTime3SecPerHP10minTimeVal26] = useState(null)
const totalLoopTime3SecPerHP10MinTimeVal26 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*25)

const [LoopTime3SecPerHP10minTimeVal27, setLoopTime3SecPerHP10minTimeVal27] = useState(null)
const totalLoopTime3SecPerHP10MinTimeVal27 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*26)

const [LoopTime3SecPerHP10minTimeVal28, setLoopTime3SecPerHP10minTimeVal28] = useState(null)
const totalLoopTime3SecPerHP10MinTimeVal28 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*27)

const [LoopTime3SecPerHP10minTimeVal29, setLoopTime3SecPerHP10minTimeVal29] = useState(null)
const totalLoopTime3SecPerHP10MinTimeVal29 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*28)


const [LoopTime3SecPerHP10minTimeVal30, setLoopTime3SecPerHP10minTimeVal30] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal30 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*29)

const [LoopTime3SecPerHP10minTimeVal31, setLoopTime3SecPerHP10minTimeVal31] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal31 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*30)

const [LoopTime3SecPerHP10minTimeVal32, setLoopTime3SecPerHP10minTimeVal32] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal32 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*31)

const [LoopTime3SecPerHP10minTimeVal33, setLoopTime3SecPerHP10minTimeVal33] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal33 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*32)

const [LoopTime3SecPerHP10minTimeVal34, setLoopTime3SecPerHP10minTimeVal34] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal34 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*33)

const [LoopTime3SecPerHP10minTimeVal35, setLoopTime3SecPerHP10minTimeVal35] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal35 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*34)

const [LoopTime3SecPerHP10minTimeVal36, setLoopTime3SecPerHP10minTimeVal36] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal36 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*35)

const [LoopTime3SecPerHP10minTimeVal37, setLoopTime3SecPerHP10minTimeVal37] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal37 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*36)

const [LoopTime3SecPerHP10minTimeVal38, setLoopTime3SecPerHP10minTimeVal38] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal38 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*37)

const [LoopTime3SecPerHP10minTimeVal39, setLoopTime3SecPerHP10minTimeVal39] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal39 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*38)

const [LoopTime3SecPerHP10minTimeVal40, setLoopTime3SecPerHP10minTimeVal40] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal40 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*39)

const [LoopTime3SecPerHP10minTimeVal41, setLoopTime3SecPerHP10minTimeVal41] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal41 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*40)

const [LoopTime3SecPerHP10minTimeVal42, setLoopTime3SecPerHP10minTimeVal42] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal42 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*41)

const [LoopTime3SecPerHP10minTimeVal43, setLoopTime3SecPerHP10minTimeVal43] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal43 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*42)

const [LoopTime3SecPerHP10minTimeVal44, setLoopTime3SecPerHP10minTimeVal44] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal44 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*43)

const [LoopTime3SecPerHP10minTimeVal45, setLoopTime3SecPerHP10minTimeVal45] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal45 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*44)

const [LoopTime3SecPerHP10minTimeVal46, setLoopTime3SecPerHP10minTimeVal46] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal46 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*45)

const [LoopTime3SecPerHP10minTimeVal47, setLoopTime3SecPerHP10minTimeVal47] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal47 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*46)

const [LoopTime3SecPerHP10minTimeVal48, setLoopTime3SecPerHP10minTimeVal48] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal48 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*47)

const [LoopTime3SecPerHP10minTimeVal49, setLoopTime3SecPerHP10minTimeVal49] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal49 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*48)

const [LoopTime3SecPerHP10minTimeVal50, setLoopTime3SecPerHP10minTimeVal50] = useState(null)
const totalLoopTime3SecPerHP10minTimeVal50 = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*49)

const [WhenToStartFinalLucerebLoop, setWhenToStartFinalLucerebLoop] = useState(0)
const totalWhenToStartFinalLucerebLoop = Math.max(totalLoopTime3SecPerHP10MinTimeVal2*totalLucereb75Loops)

const [RemainingSecondsLucereb, setRemainingSecondsLucereb] = useState(0)
const totalRemainingSecondsLucereb = Math.max((600000-totalWhenToStartFinalLucerebLoop)/1000,0)

const [FinalLoopSecsLucereb, setFinalLoopSecsLucereb] = useState(0);
const totalFinalLoopSecsLucereb = Math.max (totalLeftoverLucerebTime*1000)

//Vanvri - min to win - loops by X sec to lose 1 HP//

const [LoopTimeMin3SecPerHP20Min, setLoopTimeMin3SecPerHP20Min] = useState(null)
const totalLoopTimeMin3SecPerHP20Min = Math.ceil((totalBaseHP-totalVanvriDownTo10)*3)

const [LoopTimeMin3SecPerHP20MinTimeVal2, setLoopTimeMin3SecPerHP20MinTimeVal2] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal2 = Math.max(totalLoopTimeMin3SecPerHP20Min*1000)

const [LoopTimeMin3SecPerHP20MinTimeVal3, setLoopTimeMin3SecPerHP20MinTimeVal3] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal3 = Math.max(totalLoopTimeMin3SecPerHP20MinTimeVal2*2)

const [LoopTimeMin3SecPerHP20MinTimeVal4, setLoopTimeMin3SecPerHP20MinTimeVal4] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal4 = Math.max(totalLoopTimeMin3SecPerHP20MinTimeVal2*3)

const [LoopTimeMin3SecPerHP20MinTimeVal5, setLoopTimeMin3SecPerHP20MinTimeVal5] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal5 = Math.max(totalLoopTimeMin3SecPerHP20MinTimeVal2*4)

const [LoopTimeMin3SecPerHP20MinTimeVal6, setLoopTimeMin3SecPerHP20MinTimeVal6] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal6 = Math.max(totalLoopTimeMin3SecPerHP20MinTimeVal2*5)

const [LoopTimeMin3SecPerHP20MinTimeVal7, setLoopTimeMin3SecPerHP20MinTimeVal7] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal7 = Math.max(totalLoopTimeMin3SecPerHP20MinTimeVal2*6)

const [LoopTimeMin3SecPerHP20MinTimeVal8, setLoopTimeMin3SecPerHP20MinTimeVal8] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal8 = Math.max(totalLoopTimeMin3SecPerHP20MinTimeVal2*7)

const [LoopTimeMin3SecPerHP20MinTimeVal9, setLoopTimeMin3SecPerHP20MinTimeVal9] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal9 = Math.max(totalLoopTimeMin3SecPerHP20MinTimeVal2*8)

const [LoopTimeMin3SecPerHP20MinTimeVal10, setLoopTimeMin3SecPerHP20MinTimeVal10] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal10 = Math.max(totalLoopTimeMin3SecPerHP20MinTimeVal2*9)

const [LoopTimeMin3SecPerHP20MinTimeVal11, setLoopTimeMin3SecPerHP20MinTimeVal11] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal11 = Math.max(totalLoopTimeMin3SecPerHP20MinTimeVal2*10)

const [LoopTimeMin3SecPerHP20MinTimeVal12, setLoopTimeMin3SecPerHP20MinTimeVal12] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal12 = Math.max(totalLoopTimeMin3SecPerHP20MinTimeVal2*11)

const [LoopTimeMin3SecPerHP20MinTimeVal13, setLoopTimeMin3SecPerHP20MinTimeVal13] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal13 = Math.max(totalLoopTimeMin3SecPerHP20MinTimeVal2*12)

const [LoopTimeMin3SecPerHP20MinTimeVal14, setLoopTimeMin3SecPerHP20MinTimeVal14] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal14 = Math.max(totalLoopTimeMin3SecPerHP20MinTimeVal2*13)

const [LoopTimeMin3SecPerHP20MinTimeVal15, setLoopTimeMin3SecPerHP20MinTimeVal15] = useState(null)
const totalLoopTimeMin3SecPerHP20MinTimeVal15 = Math.max(totalLoopTimeMin3SecPerHP20MinTimeVal2*14)

const [WhenToStartFinalVanvriLoopMin, setWhenToStartFinalVanvriLoopMin] = useState(0)
const totalWhenToStartFinalVanvriLoopMin = Math.max
(totalLoopTimeMin3SecPerHP20MinTimeVal2*totalVanvriLoops)

const [FinalLoopSecsVanvriMin, setFinalLoopSecsVanvriMin] = useState(0);
const totalFinalLoopSecsVanvriMin = Math.max (totalVanvriSecsRemaining*1000)

//Vanvri - loops by X sec to lose 1 HP//

const [LoopTime3SecPerHP20Min, setLoopTime3SecPerHP20Min] = useState(null)
const totalLoopTime3SecPerHP20Min = Math.ceil((totalBaseHP-totalHPCalculatedValue)*3)

const [LoopTime3SecPerHP20MinTimeVal2, setLoopTime3SecPerHP20MinTimeVal2] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal2 = Math.max(totalLoopTime3SecPerHP20Min*1000)

const [LoopTime3SecPerHP20MinTimeVal3, setLoopTime3SecPerHP20MinTimeVal3] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal3 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*2)

const [LoopTime3SecPerHP20MinTimeVal4, setLoopTime3SecPerHP20MinTimeVal4] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal4 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*3)

const [LoopTime3SecPerHP20MinTimeVal5, setLoopTime3SecPerHP20MinTimeVal5] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal5 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*4)

const [LoopTime3SecPerHP20MinTimeVal6, setLoopTime3SecPerHP20MinTimeVal6] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal6 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*5)

const [LoopTime3SecPerHP20MinTimeVal7, setLoopTime3SecPerHP20MinTimeVal7] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal7 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*6)

const [LoopTime3SecPerHP20MinTimeVal8, setLoopTime3SecPerHP20MinTimeVal8] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal8 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*7)

const [LoopTime3SecPerHP20MinTimeVal9, setLoopTime3SecPerHP20MinTimeVal9] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal9 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*8)

const [LoopTime3SecPerHP20MinTimeVal10, setLoopTime3SecPerHP20MinTimeVal10] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal10 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*9)

const [LoopTime3SecPerHP20MinTimeVal11, setLoopTime3SecPerHP20MinTimeVal11] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal11 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*10)

const [LoopTime3SecPerHP20MinTimeVal12, setLoopTime3SecPerHP20MinTimeVal12] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal12 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*11)

const [LoopTime3SecPerHP20MinTimeVal13, setLoopTime3SecPerHP20MinTimeVal13] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal13 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*12)

const [LoopTime3SecPerHP20MinTimeVal14, setLoopTime3SecPerHP20MinTimeVal14] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal14 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*13)

const [LoopTime3SecPerHP20MinTimeVal15, setLoopTime3SecPerHP20MinTimeVal15] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal15 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*14)

const [LoopTime3SecPerHP20MinTimeVal16, setLoopTime3SecPerHP20MinTimeVal16] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal16 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*15)

const [LoopTime3SecPerHP20MinTimeVal17, setLoopTime3SecPerHP20MinTimeVal17] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal17 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*16)

const [LoopTime3SecPerHP20MinTimeVal18, setLoopTime3SecPerHP20MinTimeVal18] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal18 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*17)

const [LoopTime3SecPerHP20MinTimeVal19, setLoopTime3SecPerHP20MinTimeVal19] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal19 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*18)

const [LoopTime3SecPerHP20MinTimeVal20, setLoopTime3SecPerHP20MinTimeVal20] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal20 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*19)

const [LoopTime3SecPerHP20MinTimeVal21, setLoopTime3SecPerHP20MinTimeVal21] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal21 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*20)

const [LoopTime3SecPerHP20MinTimeVal22, setLoopTime3SecPerHP20MinTimeVal22] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal22 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*21)

const [LoopTime3SecPerHP20MinTimeVal23, setLoopTime3SecPerHP20MinTimeVal23] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal23 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*22)

const [LoopTime3SecPerHP20MinTimeVal24, setLoopTime3SecPerHP20MinTimeVal24] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal24 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*23)

const [LoopTime3SecPerHP20MinTimeVal25, setLoopTime3SecPerHP20MinTimeVal25] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal25 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*24)

const [LoopTime3SecPerHP20MinTimeVal26, setLoopTime3SecPerHP20MinTimeVal26] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal26 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*25)

const [LoopTime3SecPerHP20MinTimeVal27, setLoopTime3SecPerHP20MinTimeVal27] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal27 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*26)

const [LoopTime3SecPerHP20MinTimeVal28, setLoopTime3SecPerHP20MinTimeVal28] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal28 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*27)

const [LoopTime3SecPerHP20MinTimeVal29, setLoopTime3SecPerHP20MinTimeVal29] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal29 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*28)


const [LoopTime3SecPerHP20MinTimeVal30, setLoopTime3SecPerHP20MinTimeVal30] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal30 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*29)

const [LoopTime3SecPerHP20MinTimeVal31, setLoopTime3SecPerHP20MinTimeVal31] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal31 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*30)

const [LoopTime3SecPerHP20MinTimeVal32, setLoopTime3SecPerHP20MinTimeVal32] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal32 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*31)

const [LoopTime3SecPerHP20MinTimeVal33, setLoopTime3SecPerHP20MinTimeVal33] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal33 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*32)

const [LoopTime3SecPerHP20MinTimeVal34, setLoopTime3SecPerHP20MinTimeVal34] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal34 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*33)

const [LoopTime3SecPerHP20MinTimeVal35, setLoopTime3SecPerHP20MinTimeVal35] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal35 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*34)

const [LoopTime3SecPerHP20MinTimeVal36, setLoopTime3SecPerHP20MinTimeVal36] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal36 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*35)

const [LoopTime3SecPerHP20MinTimeVal37, setLoopTime3SecPerHP20MinTimeVal37] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal37 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*36)

const [LoopTime3SecPerHP20MinTimeVal38, setLoopTime3SecPerHP20MinTimeVal38] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal38 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*37)

const [LoopTime3SecPerHP20MinTimeVal39, setLoopTime3SecPerHP20MinTimeVal39] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal39 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*38)

const [LoopTime3SecPerHP20MinTimeVal40, setLoopTime3SecPerHP20MinTimeVal40] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal40 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*39)

const [LoopTime3SecPerHP20MinTimeVal41, setLoopTime3SecPerHP20MinTimeVal41] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal41 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*40)

const [LoopTime3SecPerHP20MinTimeVal42, setLoopTime3SecPerHP20MinTimeVal42] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal42 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*41)

const [LoopTime3SecPerHP20MinTimeVal43, setLoopTime3SecPerHP20MinTimeVal43] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal43 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*42)

const [LoopTime3SecPerHP20MinTimeVal44, setLoopTime3SecPerHP20MinTimeVal44] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal44 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*43)

const [LoopTime3SecPerHP20MinTimeVal45, setLoopTime3SecPerHP20MinTimeVal45] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal45 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*44)

const [LoopTime3SecPerHP20MinTimeVal46, setLoopTime3SecPerHP20MinTimeVal46] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal46 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*45)

const [LoopTime3SecPerHP20MinTimeVal47, setLoopTime3SecPerHP20MinTimeVal47] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal47 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*46)

const [LoopTime3SecPerHP20MinTimeVal48, setLoopTime3SecPerHP20MinTimeVal48] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal48 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*47)

const [LoopTime3SecPerHP20MinTimeVal49, setLoopTime3SecPerHP20MinTimeVal49] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal49 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*48)

const [LoopTime3SecPerHP20MinTimeVal50, setLoopTime3SecPerHP20MinTimeVal50] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal50 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*49)

const [LoopTime3SecPerHP20MinTimeVal51, setLoopTime3SecPerHP20MinTimeVal51] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal51 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*50)

const [LoopTime3SecPerHP20MinTimeVal52, setLoopTime3SecPerHP20MinTimeVal52] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal52 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*51)

const [LoopTime3SecPerHP20MinTimeVal53, setLoopTime3SecPerHP20MinTimeVal53] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal53 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*52)

const [LoopTime3SecPerHP20MinTimeVal54, setLoopTime3SecPerHP20MinTimeVal54] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal54 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*53)

const [LoopTime3SecPerHP20MinTimeVal55, setLoopTime3SecPerHP20MinTimeVal55] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal55 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*54)

const [LoopTime3SecPerHP20MinTimeVal56, setLoopTime3SecPerHP20MinTimeVal56] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal56 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*55)

const [LoopTime3SecPerHP20MinTimeVal57, setLoopTime3SecPerHP20MinTimeVal57] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal57 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*56)

const [LoopTime3SecPerHP20MinTimeVal58, setLoopTime3SecPerHP20MinTimeVal58] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal58 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*57)

const [LoopTime3SecPerHP20MinTimeVal59, setLoopTime3SecPerHP20MinTimeVal59] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal59 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*58)

const [LoopTime3SecPerHP20MinTimeVal60, setLoopTime3SecPerHP20MinTimeVal60] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal60 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*59)

const [LoopTime3SecPerHP20MinTimeVal61, setLoopTime3SecPerHP20MinTimeVal61] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal61 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*60)

const [LoopTime3SecPerHP20MinTimeVal62, setLoopTime3SecPerHP20MinTimeVal62] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal62 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*61)

const [LoopTime3SecPerHP20MinTimeVal63, setLoopTime3SecPerHP20MinTimeVal63] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal63 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*62)

const [LoopTime3SecPerHP20MinTimeVal64, setLoopTime3SecPerHP20MinTimeVal64] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal64 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*63)

const [LoopTime3SecPerHP20MinTimeVal65, setLoopTime3SecPerHP20MinTimeVal65] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal65 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*64)

const [LoopTime3SecPerHP20MinTimeVal66, setLoopTime3SecPerHP20MinTimeVal66] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal66 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*65)

const [LoopTime3SecPerHP20MinTimeVal67, setLoopTime3SecPerHP20MinTimeVal67] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal67 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*66)

const [LoopTime3SecPerHP20MinTimeVal68, setLoopTime3SecPerHP20MinTimeVal68] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal68 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*67)

const [LoopTime3SecPerHP20MinTimeVal69, setLoopTime3SecPerHP20MinTimeVal69] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal69 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*68)

const [LoopTime3SecPerHP20MinTimeVal70, setLoopTime3SecPerHP20MinTimeVal70] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal70 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*69)

const [LoopTime3SecPerHP20MinTimeVal71, setLoopTime3SecPerHP20MinTimeVal71] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal71 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*70)

const [LoopTime3SecPerHP20MinTimeVal72, setLoopTime3SecPerHP20MinTimeVal72] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal72 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*71)

const [LoopTime3SecPerHP20MinTimeVal73, setLoopTime3SecPerHP20MinTimeVal73] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal73 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*72)

const [LoopTime3SecPerHP20MinTimeVal74, setLoopTime3SecPerHP20MinTimeVal74] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal74 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*73)

const [LoopTime3SecPerHP20MinTimeVal75, setLoopTime3SecPerHP20MinTimeVal75] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal75 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*74)

const [LoopTime3SecPerHP20MinTimeVal76, setLoopTime3SecPerHP20MinTimeVal76] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal76 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*75)

const [LoopTime3SecPerHP20MinTimeVal77, setLoopTime3SecPerHP20MinTimeVal77] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal77 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*76)

const [LoopTime3SecPerHP20MinTimeVal78, setLoopTime3SecPerHP20MinTimeVal78] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal78 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*77)

const [LoopTime3SecPerHP20MinTimeVal79, setLoopTime3SecPerHP20MinTimeVal79] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal79 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*78)

const [LoopTime3SecPerHP20MinTimeVal80, setLoopTime3SecPerHP20MinTimeVal80] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal80 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*79)

const [LoopTime3SecPerHP20MinTimeVal81, setLoopTime3SecPerHP20MinTimeVal81] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal81 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*80)

const [LoopTime3SecPerHP20MinTimeVal82, setLoopTime3SecPerHP20MinTimeVal82] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal82 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*81)

const [LoopTime3SecPerHP20MinTimeVal83, setLoopTime3SecPerHP20MinTimeVal83] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal83 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*82)

const [LoopTime3SecPerHP20MinTimeVal84, setLoopTime3SecPerHP20MinTimeVal84] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal84 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*83)

const [LoopTime3SecPerHP20MinTimeVal85, setLoopTime3SecPerHP20MinTimeVal85] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal85 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*84)

const [LoopTime3SecPerHP20MinTimeVal86, setLoopTime3SecPerHP20MinTimeVal86] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal86 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*85)

const [LoopTime3SecPerHP20MinTimeVal87, setLoopTime3SecPerHP20MinTimeVal87] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal87 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*86)

const [LoopTime3SecPerHP20MinTimeVal88, setLoopTime3SecPerHP20MinTimeVal88] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal88 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*87)

const [LoopTime3SecPerHP20MinTimeVal89, setLoopTime3SecPerHP20MinTimeVal89] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal89 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*88)

const [LoopTime3SecPerHP20MinTimeVal90, setLoopTime3SecPerHP20MinTimeVal90] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal90 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*89)

const [LoopTime3SecPerHP20MinTimeVal91, setLoopTime3SecPerHP20MinTimeVal91] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal91 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*90)

const [LoopTime3SecPerHP20MinTimeVal92, setLoopTime3SecPerHP20MinTimeVal92] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal92 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*91)

const [LoopTime3SecPerHP20MinTimeVal93, setLoopTime3SecPerHP20MinTimeVal93] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal93 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*92)

const [LoopTime3SecPerHP20MinTimeVal94, setLoopTime3SecPerHP20MinTimeVal94] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal94 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*93)

const [LoopTime3SecPerHP20MinTimeVal95, setLoopTime3SecPerHP20MinTimeVal95] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal95 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*94)

const [LoopTime3SecPerHP20MinTimeVal96, setLoopTime3SecPerHP20MinTimeVal96] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal96 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*95)

const [LoopTime3SecPerHP20MinTimeVal97, setLoopTime3SecPerHP20MinTimeVal97] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal97 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*96)

const [LoopTime3SecPerHP20MinTimeVal98, setLoopTime3SecPerHP20MinTimeVal98] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal98 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*97)

const [LoopTime3SecPerHP20MinTimeVal99, setLoopTime3SecPerHP20MinTimeVal99] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal99 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*98)

const [LoopTime3SecPerHP20MinTimeVal100, setLoopTime3SecPerHP20MinTimeVal100] = useState(null)
const totalLoopTime3SecPerHP20MinTimeVal100 = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*99)


const [WhenToStartFinalVanvriLoop, setWhenToStartFinalVanvriLoop] = useState(0)
const totalWhenToStartFinalVanvriLoop = Math.max(totalLoopTime3SecPerHP20MinTimeVal2*totalVanvri75Loops)

const [RemainingSecondsVanvri, setRemainingSecondsVanvri] = useState(0)
const totalRemainingSecondsVanvri = Math.max((1200000-totalWhenToStartFinalVanvriLoop)/1000,0)

const [FinalLoopSecsVanvri, setFinalLoopSecsVanvri] = useState(0);
const totalFinalLoopSecsVanvri = Math.max (totalLeftoverVanvriTime*1000)

//Viyusa - min to win - loops by X sec to lose 1 HP//

const [LoopTimeMin3_5SecPerHP25Min, setLoopTimeMin3_5SecPerHP25Min] = useState(null)
const totalLoopTimeMin3_5SecPerHP25Min = Math.ceil((totalBaseHP-totalViyusaDownTo10)*3.5)

const [LoopTimeMin3_5SecPerHP25MinTimeVal2, setLoopTimeMin3_5SecPerHP25MinTimeVal2] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal2 = Math.max(totalLoopTimeMin3_5SecPerHP25Min*1000)

const [LoopTimeMin3_5SecPerHP25MinTimeVal3, setLoopTimeMin3_5SecPerHP25MinTimeVal3] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal3 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*2)

const [LoopTimeMin3_5SecPerHP25MinTimeVal4, setLoopTimeMin3_5SecPerHP25MinTimeVal4] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal4 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*3)

const [LoopTimeMin3_5SecPerHP25MinTimeVal5, setLoopTimeMin3_5SecPerHP25MinTimeVal5] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal5 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*4)

const [LoopTimeMin3_5SecPerHP25MinTimeVal6, setLoopTimeMin3_5SecPerHP25MinTimeVal6] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal6 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*5)

const [LoopTimeMin3_5SecPerHP25MinTimeVal7, setLoopTimeMin3_5SecPerHP25MinTimeVal7] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal7 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*6)

const [LoopTimeMin3_5SecPerHP25MinTimeVal8, setLoopTimeMin3_5SecPerHP25MinTimeVal8] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal8 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*7)

const [LoopTimeMin3_5SecPerHP25MinTimeVal9, setLoopTimeMin3_5SecPerHP25MinTimeVal9] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal9 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*8)

const [LoopTimeMin3_5SecPerHP25MinTimeVal10, setLoopTimeMin3_5SecPerHP25MinTimeVal10] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal10 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*9)

const [LoopTimeMin3_5SecPerHP25MinTimeVal11, setLoopTimeMin3_5SecPerHP25MinTimeVal11] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal11 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*10)

const [LoopTimeMin3_5SecPerHP25MinTimeVal12, setLoopTimeMin3_5SecPerHP25MinTimeVal12] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal12 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*11)

const [LoopTimeMin3_5SecPerHP25MinTimeVal13, setLoopTimeMin3_5SecPerHP25MinTimeVal13] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal13 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*12)

const [LoopTimeMin3_5SecPerHP25MinTimeVal14, setLoopTimeMin3_5SecPerHP25MinTimeVal14] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal14 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*13)

const [LoopTimeMin3_5SecPerHP25MinTimeVal15, setLoopTimeMin3_5SecPerHP25MinTimeVal15] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal15 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*14)

const [LoopTimeMin3_5SecPerHP25MinTimeVal16, setLoopTimeMin3_5SecPerHP25MinTimeVal16] = useState(null)
const totalLoopTimeMin3_5SecPerHP25MinTimeVal16 = Math.max(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*15)

const [WhenToStartFinalViyusaLoopMin, setWhenToStartFinalViyusaLoopMin] = useState(0)
const totalWhenToStartFinalViyusaLoopMin = Math.max
(totalLoopTimeMin3_5SecPerHP25MinTimeVal2*totalViyusaLoops)

const [FinalLoopSecsViyusaMin, setFinalLoopSecsViyusaMin] = useState(0);
const totalFinalLoopSecsViyusaMin = Math.max (totalViyusaSecsRemaining*1000)

//Viyusa - loops by X sec to lose 1 HP//

const [LoopTime3_5SecPerHP25min, setLoopTime3_5SecPerHP25min] = useState(null)
const totalLoopTime3_5SecPerHP25min = Math.ceil((totalBaseHP-totalHPCalculatedValue)*3.5)

const [LoopTime3_5SecPerHP25minTimeVal2, setLoopTime3_5SecPerHP25minTimeVal2] = useState(0)
const totalLoopTime3_5SecPerHP25MinTimeVal2 = Math.max(totalLoopTime3_5SecPerHP25min*1000,0)

const [LoopTime3_5SecPerHP25minTimeVal3, setLoopTime3_5SecPerHP25minTimeVal3] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal3 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*2)

const [LoopTime3_5SecPerHP25minTimeVal4, setLoopTime3_5SecPerHP25minTimeVal4] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal4 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*3)

const [LoopTime3_5SecPerHP25minTimeVal5, setLoopTime3_5SecPerHP25minTimeVal5] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal5 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*4)

const [LoopTime3_5SecPerHP25minTimeVal6, setLoopTime3_5SecPerHP25minTimeVal6] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal6 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*5)

const [LoopTime3_5SecPerHP25minTimeVal7, setLoopTime3_5SecPerHP25minTimeVal7] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal7 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*6)

const [LoopTime3_5SecPerHP25minTimeVal8, setLoopTime3_5SecPerHP25minTimeVal8] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal8 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*7)

const [LoopTime3_5SecPerHP25minTimeVal9, setLoopTime3_5SecPerHP25minTimeVal9] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal9 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*8)

const [LoopTime3_5SecPerHP25minTimeVal10, setLoopTime3_5SecPerHP25minTimeVal10] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal10 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*9)

const [LoopTime3_5SecPerHP25minTimeVal11, setLoopTime3_5SecPerHP25minTimeVal11] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal11 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*10)

const [LoopTime3_5SecPerHP25minTimeVal12, setLoopTime3_5SecPerHP25minTimeVal12] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal12 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*11)

const [LoopTime3_5SecPerHP25minTimeVal13, setLoopTime3_5SecPerHP25minTimeVal13] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal13 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*12)

const [LoopTime3_5SecPerHP25minTimeVal14, setLoopTime3_5SecPerHP25minTimeVal14] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal14 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*13)

const [LoopTime3_5SecPerHP25minTimeVal15, setLoopTime3_5SecPerHP25minTimeVal15] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal15 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*14)

const [LoopTime3_5SecPerHP25minTimeVal16, setLoopTime3_5SecPerHP25minTimeVal16] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal16 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*15)

const [LoopTime3_5SecPerHP25minTimeVal17, setLoopTime3_5SecPerHP25minTimeVal17] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal17 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*16)

const [LoopTime3_5SecPerHP25minTimeVal18, setLoopTime3_5SecPerHP25minTimeVal18] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal18 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*17)

const [LoopTime3_5SecPerHP25minTimeVal19, setLoopTime3_5SecPerHP25minTimeVal19] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal19 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*18)

const [LoopTime3_5SecPerHP25minTimeVal20, setLoopTime3_5SecPerHP25minTimeVal20] = useState(null)
const totalLoopTime3_5SecPerHP25MinTimeVal20 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*19)

const [LoopTime3_5SecPerHP25minTimeVal21, setLoopTime3_5SecPerHP25minTimeVal21] = useState(null)
const totalLoopTime3_5SecPerHP25MinTimeVal21 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*20)

const [LoopTime3_5SecPerHP25minTimeVal22, setLoopTime3_5SecPerHP25minTimeVal22] = useState(null)
const totalLoopTime3_5SecPerHP25MinTimeVal22 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*21)

const [LoopTime3_5SecPerHP25minTimeVal23, setLoopTime3_5SecPerHP25minTimeVal23] = useState(null)
const totalLoopTime3_5SecPerHP25MinTimeVal23 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*22)

const [LoopTime3_5SecPerHP25minTimeVal24, setLoopTime3_5SecPerHP25minTimeVal24] = useState(null)
const totalLoopTime3_5SecPerHP25MinTimeVal24 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*23)

const [LoopTime3_5SecPerHP25minTimeVal25, setLoopTime3_5SecPerHP25minTimeVal25] = useState(null)
const totalLoopTime3_5SecPerHP25MinTimeVal25 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*24)

const [LoopTime3_5SecPerHP25minTimeVal26, setLoopTime3_5SecPerHP25minTimeVal26] = useState(null)
const totalLoopTime3_5SecPerHP25MinTimeVal26 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*25)

const [LoopTime3_5SecPerHP25minTimeVal27, setLoopTime3_5SecPerHP25minTimeVal27] = useState(null)
const totalLoopTime3_5SecPerHP25MinTimeVal27 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*26)

const [LoopTime3_5SecPerHP25minTimeVal28, setLoopTime3_5SecPerHP25minTimeVal28] = useState(null)
const totalLoopTime3_5SecPerHP25MinTimeVal28 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*27)

const [LoopTime3_5SecPerHP25minTimeVal29, setLoopTime3_5SecPerHP25minTimeVal29] = useState(null)
const totalLoopTime3_5SecPerHP25MinTimeVal29 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*28)


const [LoopTime3_5SecPerHP25minTimeVal30, setLoopTime3_5SecPerHP25minTimeVal30] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal30 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*29)

const [LoopTime3_5SecPerHP25minTimeVal31, setLoopTime3_5SecPerHP25minTimeVal31] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal31 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*30)

const [LoopTime3_5SecPerHP25minTimeVal32, setLoopTime3_5SecPerHP25minTimeVal32] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal32 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*31)

const [LoopTime3_5SecPerHP25minTimeVal33, setLoopTime3_5SecPerHP25minTimeVal33] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal33 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*32)

const [LoopTime3_5SecPerHP25minTimeVal34, setLoopTime3_5SecPerHP25minTimeVal34] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal34 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*33)

const [LoopTime3_5SecPerHP25minTimeVal35, setLoopTime3_5SecPerHP25minTimeVal35] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal35 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*34)

const [LoopTime3_5SecPerHP25minTimeVal36, setLoopTime3_5SecPerHP25minTimeVal36] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal36 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*35)

const [LoopTime3_5SecPerHP25minTimeVal37, setLoopTime3_5SecPerHP25minTimeVal37] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal37 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*36)

const [LoopTime3_5SecPerHP25minTimeVal38, setLoopTime3_5SecPerHP25minTimeVal38] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal38 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*37)

const [LoopTime3_5SecPerHP25minTimeVal39, setLoopTime3_5SecPerHP25minTimeVal39] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal39 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*38)

const [LoopTime3_5SecPerHP25minTimeVal40, setLoopTime3_5SecPerHP25minTimeVal40] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal40 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*39)

const [LoopTime3_5SecPerHP25minTimeVal41, setLoopTime3_5SecPerHP25minTimeVal41] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal41 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*40)

const [LoopTime3_5SecPerHP25minTimeVal42, setLoopTime3_5SecPerHP25minTimeVal42] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal42 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*41)

const [LoopTime3_5SecPerHP25minTimeVal43, setLoopTime3_5SecPerHP25minTimeVal43] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal43 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*42)

const [LoopTime3_5SecPerHP25minTimeVal44, setLoopTime3_5SecPerHP25minTimeVal44] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal44 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*43)

const [LoopTime3_5SecPerHP25minTimeVal45, setLoopTime3_5SecPerHP25minTimeVal45] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal45 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*44)

const [LoopTime3_5SecPerHP25minTimeVal46, setLoopTime3_5SecPerHP25minTimeVal46] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal46 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*45)

const [LoopTime3_5SecPerHP25minTimeVal47, setLoopTime3_5SecPerHP25minTimeVal47] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal47 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*46)

const [LoopTime3_5SecPerHP25minTimeVal48, setLoopTime3_5SecPerHP25minTimeVal48] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal48 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*47)

const [LoopTime3_5SecPerHP25minTimeVal49, setLoopTime3_5SecPerHP25minTimeVal49] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal49 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*48)

const [LoopTime3_5SecPerHP25minTimeVal50, setLoopTime3_5SecPerHP25minTimeVal50] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal50 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*49)

const [LoopTime3_5SecPerHP25minTimeVal51, setLoopTime3_5SecPerHP25minTimeVal51] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal51 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*50)

const [LoopTime3_5SecPerHP25minTimeVal52, setLoopTime3_5SecPerHP25minTimeVal52] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal52 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*51)

const [LoopTime3_5SecPerHP25minTimeVal53, setLoopTime3_5SecPerHP25minTimeVal53] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal53 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*52)

const [LoopTime3_5SecPerHP25minTimeVal54, setLoopTime3_5SecPerHP25minTimeVal54] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal54 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*53)

const [LoopTime3_5SecPerHP25minTimeVal55, setLoopTime3_5SecPerHP25minTimeVal55] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal55 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*54)

const [LoopTime3_5SecPerHP25minTimeVal56, setLoopTime3_5SecPerHP25minTimeVal56] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal56 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*55)

const [LoopTime3_5SecPerHP25minTimeVal57, setLoopTime3_5SecPerHP25minTimeVal57] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal57 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*56)

const [LoopTime3_5SecPerHP25minTimeVal58, setLoopTime3_5SecPerHP25minTimeVal58] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal58 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*57)

const [LoopTime3_5SecPerHP25minTimeVal59, setLoopTime3_5SecPerHP25minTimeVal59] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal59 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*58)

const [LoopTime3_5SecPerHP25minTimeVal60, setLoopTime3_5SecPerHP25minTimeVal60] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal60 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*59)

const [LoopTime3_5SecPerHP25minTimeVal61, setLoopTime3_5SecPerHP25minTimeVal61] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal61 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*60)

const [LoopTime3_5SecPerHP25minTimeVal62, setLoopTime3_5SecPerHP25minTimeVal62] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal62 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*61)

const [LoopTime3_5SecPerHP25minTimeVal63, setLoopTime3_5SecPerHP25minTimeVal63] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal63 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*62)

const [LoopTime3_5SecPerHP25minTimeVal64, setLoopTime3_5SecPerHP25minTimeVal64] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal64 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*63)

const [LoopTime3_5SecPerHP25minTimeVal65, setLoopTime3_5SecPerHP25minTimeVal65] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal65 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*64)

const [LoopTime3_5SecPerHP25minTimeVal66, setLoopTime3_5SecPerHP25minTimeVal66] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal66 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*65)

const [LoopTime3_5SecPerHP25minTimeVal67, setLoopTime3_5SecPerHP25minTimeVal67] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal67 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*66)

const [LoopTime3_5SecPerHP25minTimeVal68, setLoopTime3_5SecPerHP25minTimeVal68] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal68 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*67)

const [LoopTime3_5SecPerHP25minTimeVal69, setLoopTime3_5SecPerHP25minTimeVal69] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal69 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*68)

const [LoopTime3_5SecPerHP25minTimeVal70, setLoopTime3_5SecPerHP25minTimeVal70] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal70 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*69)

const [LoopTime3_5SecPerHP25minTimeVal71, setLoopTime3_5SecPerHP25minTimeVal71] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal71 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*70)

const [LoopTime3_5SecPerHP25minTimeVal72, setLoopTime3_5SecPerHP25minTimeVal72] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal72 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*71)

const [LoopTime3_5SecPerHP25minTimeVal73, setLoopTime3_5SecPerHP25minTimeVal73] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal73 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*72)

const [LoopTime3_5SecPerHP25minTimeVal74, setLoopTime3_5SecPerHP25minTimeVal74] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal74 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*73)

const [LoopTime3_5SecPerHP25minTimeVal75, setLoopTime3_5SecPerHP25minTimeVal75] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal75 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*74)

const [LoopTime3_5SecPerHP25minTimeVal76, setLoopTime3_5SecPerHP25minTimeVal76] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal76 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*75)

const [LoopTime3_5SecPerHP25minTimeVal77, setLoopTime3_5SecPerHP25minTimeVal77] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal77 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*76)

const [LoopTime3_5SecPerHP25minTimeVal78, setLoopTime3_5SecPerHP25minTimeVal78] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal78 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*77)

const [LoopTime3_5SecPerHP25minTimeVal79, setLoopTime3_5SecPerHP25minTimeVal79] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal79 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*78)

const [LoopTime3_5SecPerHP25minTimeVal80, setLoopTime3_5SecPerHP25minTimeVal80] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal80 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*79)

const [LoopTime3_5SecPerHP25minTimeVal81, setLoopTime3_5SecPerHP25minTimeVal81] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal81 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*80)

const [LoopTime3_5SecPerHP25minTimeVal82, setLoopTime3_5SecPerHP25minTimeVal82] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal82 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*81)

const [LoopTime3_5SecPerHP25minTimeVal83, setLoopTime3_5SecPerHP25minTimeVal83] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal83 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*82)

const [LoopTime3_5SecPerHP25minTimeVal84, setLoopTime3_5SecPerHP25minTimeVal84] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal84 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*83)

const [LoopTime3_5SecPerHP25minTimeVal85, setLoopTime3_5SecPerHP25minTimeVal85] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal85 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*84)

const [LoopTime3_5SecPerHP25minTimeVal86, setLoopTime3_5SecPerHP25minTimeVal86] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal86 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*85)

const [LoopTime3_5SecPerHP25minTimeVal87, setLoopTime3_5SecPerHP25minTimeVal87] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal87 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*86)

const [LoopTime3_5SecPerHP25minTimeVal88, setLoopTime3_5SecPerHP25minTimeVal88] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal88 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*87)

const [LoopTime3_5SecPerHP25minTimeVal89, setLoopTime3_5SecPerHP25minTimeVal89] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal89 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*88)

const [LoopTime3_5SecPerHP25minTimeVal90, setLoopTime3_5SecPerHP25minTimeVal90] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal90 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*89)

const [LoopTime3_5SecPerHP25minTimeVal91, setLoopTime3_5SecPerHP25minTimeVal91] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal91 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*90)

const [LoopTime3_5SecPerHP25minTimeVal92, setLoopTime3_5SecPerHP25minTimeVal92] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal92 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*91)

const [LoopTime3_5SecPerHP25minTimeVal93, setLoopTime3_5SecPerHP25minTimeVal93] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal93 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*92)

const [LoopTime3_5SecPerHP25minTimeVal94, setLoopTime3_5SecPerHP25minTimeVal94] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal94 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*93)

const [LoopTime3_5SecPerHP25minTimeVal95, setLoopTime3_5SecPerHP25minTimeVal95] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal95 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*94)

const [LoopTime3_5SecPerHP25minTimeVal96, setLoopTime3_5SecPerHP25minTimeVal96] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal96 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*95)

const [LoopTime3_5SecPerHP25minTimeVal97, setLoopTime3_5SecPerHP25minTimeVal97] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal97 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*96)

const [LoopTime3_5SecPerHP25minTimeVal98, setLoopTime3_5SecPerHP25minTimeVal98] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal98 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*97)

const [LoopTime3_5SecPerHP25minTimeVal99, setLoopTime3_5SecPerHP25minTimeVal99] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal99 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*98)

const [LoopTime3_5SecPerHP25minTimeVal100, setLoopTime3_5SecPerHP25minTimeVal100] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal100 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*99)

const [LoopTime3_5SecPerHP25minTimeVal101, setLoopTime3_5SecPerHP25minTimeVal101] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal101 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*100)

const [LoopTime3_5SecPerHP25minTimeVal102, setLoopTime3_5SecPerHP25minTimeVal102] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal102 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*101)

const [LoopTime3_5SecPerHP25minTimeVal103, setLoopTime3_5SecPerHP25minTimeVal103] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal103 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*102)

const [LoopTime3_5SecPerHP25minTimeVal104, setLoopTime3_5SecPerHP25minTimeVal104] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal104 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*103)

const [LoopTime3_5SecPerHP25minTimeVal105, setLoopTime3_5SecPerHP25minTimeVal105] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal105 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*104)

const [LoopTime3_5SecPerHP25minTimeVal106, setLoopTime3_5SecPerHP25minTimeVal106] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal106 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*105)

const [LoopTime3_5SecPerHP25minTimeVal107, setLoopTime3_5SecPerHP25minTimeVal107] = useState(null)
const totalLoopTime3_5SecPerHP25minTimeVal107 = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*106)

const [WhenToStartFinalViyusaLoop, setWhenToStartFinalViyusaLoop] = useState(0)
const totalWhenToStartFinalViyusaLoop = Math.max(totalLoopTime3_5SecPerHP25MinTimeVal2*totalViyusa75Loops)

const [RemainingSecondsViyusa, setRemainingSecondsViyusa] = useState(0)
const totalRemainingSecondsViyusa = Math.max((1500000-totalWhenToStartFinalViyusaLoop)/1000,0)

const [FinalLoopSecsViyusa, setFinalLoopSecsViyusa] = useState(0);
const totalFinalLoopSecsViyusa = Math.max (totalLeftoverViyusaTime*1000)

//Viradise - min to win - loops by X sec to lose 1 HP//

const [LoopTimeMin3_5SecPerHP30Min, setLoopTimeMin3_5SecPerHP30Min] = useState(null)
const totalLoopTimeMin3_5SecPerHP30Min = Math.ceil((totalBaseHP-totalViradiseDownTo10)*3.5)

const [LoopTimeMin3_5SecPerHP30MinTimeVal2, setLoopTimeMin3_5SecPerHP30MinTimeVal2] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal2 = Math.max(totalLoopTimeMin3_5SecPerHP30Min*1000)

const [LoopTimeMin3_5SecPerHP30MinTimeVal3, setLoopTimeMin3_5SecPerHP30MinTimeVal3] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal3 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*2)

const [LoopTimeMin3_5SecPerHP30MinTimeVal4, setLoopTimeMin3_5SecPerHP30MinTimeVal4] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal4 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*3)

const [LoopTimeMin3_5SecPerHP30MinTimeVal5, setLoopTimeMin3_5SecPerHP30MinTimeVal5] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal5 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*4)

const [LoopTimeMin3_5SecPerHP30MinTimeVal6, setLoopTimeMin3_5SecPerHP30MinTimeVal6] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal6 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*5)

const [LoopTimeMin3_5SecPerHP30MinTimeVal7, setLoopTimeMin3_5SecPerHP30MinTimeVal7] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal7 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*6)

const [LoopTimeMin3_5SecPerHP30MinTimeVal8, setLoopTimeMin3_5SecPerHP30MinTimeVal8] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal8 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*7)

const [LoopTimeMin3_5SecPerHP30MinTimeVal9, setLoopTimeMin3_5SecPerHP30MinTimeVal9] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal9 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*8)

const [LoopTimeMin3_5SecPerHP30MinTimeVal10, setLoopTimeMin3_5SecPerHP30MinTimeVal10] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal10 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*9)

const [LoopTimeMin3_5SecPerHP30MinTimeVal11, setLoopTimeMin3_5SecPerHP30MinTimeVal11] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal11 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*10)

const [LoopTimeMin3_5SecPerHP30MinTimeVal12, setLoopTimeMin3_5SecPerHP30MinTimeVal12] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal12 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*11)

const [LoopTimeMin3_5SecPerHP30MinTimeVal13, setLoopTimeMin3_5SecPerHP30MinTimeVal13] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal13 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*12)

const [LoopTimeMin3_5SecPerHP30MinTimeVal14, setLoopTimeMin3_5SecPerHP30MinTimeVal14] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal14 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*13)

const [LoopTimeMin3_5SecPerHP30MinTimeVal15, setLoopTimeMin3_5SecPerHP30MinTimeVal15] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal15 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*14)

const [LoopTimeMin3_5SecPerHP30MinTimeVal16, setLoopTimeMin3_5SecPerHP30MinTimeVal16] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal16 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*15)

const [LoopTimeMin3_5SecPerHP30MinTimeVal17, setLoopTimeMin3_5SecPerHP30MinTimeVal17] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal17 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*16)

const [LoopTimeMin3_5SecPerHP30MinTimeVal18, setLoopTimeMin3_5SecPerHP30MinTimeVal18] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal18 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*17)

const [LoopTimeMin3_5SecPerHP30MinTimeVal19, setLoopTimeMin3_5SecPerHP30MinTimeVal19] = useState(null)
const totalLoopTimeMin3_5SecPerHP30MinTimeVal19 = Math.max(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*18)

const [WhenToStartFinalViradiseLoopMin, setWhenToStartFinalViradiseLoopMin] = useState(0)
const totalWhenToStartFinalViradiseLoopMin = Math.max
(totalLoopTimeMin3_5SecPerHP30MinTimeVal2*totalViradiseLoops)

const [FinalLoopSecsViradiseMin, setFinalLoopSecsViradiseMin] = useState(0);
const totalFinalLoopSecsViradiseMin = Math.max (totalViradiseSecsRemaining*1000)

//Viradise - loops by X sec to lose 1 HP//

const [LoopTime3_5SecPerHP30min, setLoopTime3_5SecPerHP30min] = useState(null)
const totalLoopTime3_5SecPerHP30min = Math.ceil((totalBaseHP-totalHPCalculatedValue)*3.5)

const [LoopTime3_5SecPerHP30minTimeVal2, setLoopTime3_5SecPerHP30minTimeVal2] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal2 = Math.max(totalLoopTime3_5SecPerHP30min*1000)

const [LoopTime3_5SecPerHP30minTimeVal3, setLoopTime3_5SecPerHP30minTimeVal3] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal3 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*2)

const [LoopTime3_5SecPerHP30minTimeVal4, setLoopTime3_5SecPerHP30minTimeVal4] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal4 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*3)

const [LoopTime3_5SecPerHP30minTimeVal5, setLoopTime3_5SecPerHP30minTimeVal5] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal5 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*4)

const [LoopTime3_5SecPerHP30minTimeVal6, setLoopTime3_5SecPerHP30minTimeVal6] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal6 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*5)

const [LoopTime3_5SecPerHP30minTimeVal7, setLoopTime3_5SecPerHP30minTimeVal7] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal7 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*6)

const [LoopTime3_5SecPerHP30minTimeVal8, setLoopTime3_5SecPerHP30minTimeVal8] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal8 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*7)

const [LoopTime3_5SecPerHP30minTimeVal9, setLoopTime3_5SecPerHP30minTimeVal9] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal9 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*8)

const [LoopTime3_5SecPerHP30minTimeVal10, setLoopTime3_5SecPerHP30minTimeVal10] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal10 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*9)

const [LoopTime3_5SecPerHP30minTimeVal11, setLoopTime3_5SecPerHP30minTimeVal11] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal11 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*10)

const [LoopTime3_5SecPerHP30minTimeVal12, setLoopTime3_5SecPerHP30minTimeVal12] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal12 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*11)

const [LoopTime3_5SecPerHP30minTimeVal13, setLoopTime3_5SecPerHP30minTimeVal13] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal13 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*12)

const [LoopTime3_5SecPerHP30minTimeVal14, setLoopTime3_5SecPerHP30minTimeVal14] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal14 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*13)

const [LoopTime3_5SecPerHP30minTimeVal15, setLoopTime3_5SecPerHP30minTimeVal15] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal15 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*14)

const [LoopTime3_5SecPerHP30minTimeVal16, setLoopTime3_5SecPerHP30minTimeVal16] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal16 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*15)

const [LoopTime3_5SecPerHP30minTimeVal17, setLoopTime3_5SecPerHP30minTimeVal17] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal17 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*16)

const [LoopTime3_5SecPerHP30minTimeVal18, setLoopTime3_5SecPerHP30minTimeVal18] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal18 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*17)

const [LoopTime3_5SecPerHP30minTimeVal19, setLoopTime3_5SecPerHP30minTimeVal19] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal19 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*18)

const [LoopTime3_5SecPerHP30minTimeVal20, setLoopTime3_5SecPerHP30minTimeVal20] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal20 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*19)

const [LoopTime3_5SecPerHP30minTimeVal21, setLoopTime3_5SecPerHP30minTimeVal21] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal21 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*20)

const [LoopTime3_5SecPerHP30minTimeVal22, setLoopTime3_5SecPerHP30minTimeVal22] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal22 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*21)

const [LoopTime3_5SecPerHP30minTimeVal23, setLoopTime3_5SecPerHP30minTimeVal23] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal23 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*22)

const [LoopTime3_5SecPerHP30minTimeVal24, setLoopTime3_5SecPerHP30minTimeVal24] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal24 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*23)

const [LoopTime3_5SecPerHP30minTimeVal25, setLoopTime3_5SecPerHP30minTimeVal25] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal25 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*24)

const [LoopTime3_5SecPerHP30minTimeVal26, setLoopTime3_5SecPerHP30minTimeVal26] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal26 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*25)

const [LoopTime3_5SecPerHP30minTimeVal27, setLoopTime3_5SecPerHP30minTimeVal27] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal27 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*26)

const [LoopTime3_5SecPerHP30minTimeVal28, setLoopTime3_5SecPerHP30minTimeVal28] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal28 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*27)

const [LoopTime3_5SecPerHP30minTimeVal29, setLoopTime3_5SecPerHP30minTimeVal29] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal29 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*28)


const [LoopTime3_5SecPerHP30minTimeVal30, setLoopTime3_5SecPerHP30minTimeVal30] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal30 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*29)

const [LoopTime3_5SecPerHP30minTimeVal31, setLoopTime3_5SecPerHP30minTimeVal31] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal31 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*30)

const [LoopTime3_5SecPerHP30minTimeVal32, setLoopTime3_5SecPerHP30minTimeVal32] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal32 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*31)

const [LoopTime3_5SecPerHP30minTimeVal33, setLoopTime3_5SecPerHP30minTimeVal33] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal33 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*32)

const [LoopTime3_5SecPerHP30minTimeVal34, setLoopTime3_5SecPerHP30minTimeVal34] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal34 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*33)

const [LoopTime3_5SecPerHP30minTimeVal35, setLoopTime3_5SecPerHP30minTimeVal35] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal35 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*34)

const [LoopTime3_5SecPerHP30minTimeVal36, setLoopTime3_5SecPerHP30minTimeVal36] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal36 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*35)

const [LoopTime3_5SecPerHP30minTimeVal37, setLoopTime3_5SecPerHP30minTimeVal37] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal37 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*36)

const [LoopTime3_5SecPerHP30minTimeVal38, setLoopTime3_5SecPerHP30minTimeVal38] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal38 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*37)

const [LoopTime3_5SecPerHP30minTimeVal39, setLoopTime3_5SecPerHP30minTimeVal39] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal39 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*38)

const [LoopTime3_5SecPerHP30minTimeVal40, setLoopTime3_5SecPerHP30minTimeVal40] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal40 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*39)

const [LoopTime3_5SecPerHP30minTimeVal41, setLoopTime3_5SecPerHP30minTimeVal41] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal41 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*40)

const [LoopTime3_5SecPerHP30minTimeVal42, setLoopTime3_5SecPerHP30minTimeVal42] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal42 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*41)

const [LoopTime3_5SecPerHP30minTimeVal43, setLoopTime3_5SecPerHP30minTimeVal43] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal43 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*42)

const [LoopTime3_5SecPerHP30minTimeVal44, setLoopTime3_5SecPerHP30minTimeVal44] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal44 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*43)

const [LoopTime3_5SecPerHP30minTimeVal45, setLoopTime3_5SecPerHP30minTimeVal45] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal45 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*44)

const [LoopTime3_5SecPerHP30minTimeVal46, setLoopTime3_5SecPerHP30minTimeVal46] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal46 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*45)

const [LoopTime3_5SecPerHP30minTimeVal47, setLoopTime3_5SecPerHP30minTimeVal47] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal47 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*46)

const [LoopTime3_5SecPerHP30minTimeVal48, setLoopTime3_5SecPerHP30minTimeVal48] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal48 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*47)

const [LoopTime3_5SecPerHP30minTimeVal49, setLoopTime3_5SecPerHP30minTimeVal49] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal49 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*48)

const [LoopTime3_5SecPerHP30minTimeVal50, setLoopTime3_5SecPerHP30minTimeVal50] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal50 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*49)

const [LoopTime3_5SecPerHP30minTimeVal51, setLoopTime3_5SecPerHP30minTimeVal51] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal51 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*50)

const [LoopTime3_5SecPerHP30minTimeVal52, setLoopTime3_5SecPerHP30minTimeVal52] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal52 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*51)

const [LoopTime3_5SecPerHP30minTimeVal53, setLoopTime3_5SecPerHP30minTimeVal53] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal53 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*52)

const [LoopTime3_5SecPerHP30minTimeVal54, setLoopTime3_5SecPerHP30minTimeVal54] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal54 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*53)

const [LoopTime3_5SecPerHP30minTimeVal55, setLoopTime3_5SecPerHP30minTimeVal55] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal55 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*54)

const [LoopTime3_5SecPerHP30minTimeVal56, setLoopTime3_5SecPerHP30minTimeVal56] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal56 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*55)

const [LoopTime3_5SecPerHP30minTimeVal57, setLoopTime3_5SecPerHP30minTimeVal57] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal57 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*56)

const [LoopTime3_5SecPerHP30minTimeVal58, setLoopTime3_5SecPerHP30minTimeVal58] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal58 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*57)

const [LoopTime3_5SecPerHP30minTimeVal59, setLoopTime3_5SecPerHP30minTimeVal59] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal59 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*58)

const [LoopTime3_5SecPerHP30minTimeVal60, setLoopTime3_5SecPerHP30minTimeVal60] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal60 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*59)

const [LoopTime3_5SecPerHP30minTimeVal61, setLoopTime3_5SecPerHP30minTimeVal61] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal61 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*60)

const [LoopTime3_5SecPerHP30minTimeVal62, setLoopTime3_5SecPerHP30minTimeVal62] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal62 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*61)

const [LoopTime3_5SecPerHP30minTimeVal63, setLoopTime3_5SecPerHP30minTimeVal63] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal63 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*62)

const [LoopTime3_5SecPerHP30minTimeVal64, setLoopTime3_5SecPerHP30minTimeVal64] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal64 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*63)

const [LoopTime3_5SecPerHP30minTimeVal65, setLoopTime3_5SecPerHP30minTimeVal65] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal65 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*64)

const [LoopTime3_5SecPerHP30minTimeVal66, setLoopTime3_5SecPerHP30minTimeVal66] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal66 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*65)

const [LoopTime3_5SecPerHP30minTimeVal67, setLoopTime3_5SecPerHP30minTimeVal67] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal67 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*66)

const [LoopTime3_5SecPerHP30minTimeVal68, setLoopTime3_5SecPerHP30minTimeVal68] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal68 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*67)

const [LoopTime3_5SecPerHP30minTimeVal69, setLoopTime3_5SecPerHP30minTimeVal69] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal69 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*68)

const [LoopTime3_5SecPerHP30minTimeVal70, setLoopTime3_5SecPerHP30minTimeVal70] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal70 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*69)

const [LoopTime3_5SecPerHP30minTimeVal71, setLoopTime3_5SecPerHP30minTimeVal71] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal71 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*70)

const [LoopTime3_5SecPerHP30minTimeVal72, setLoopTime3_5SecPerHP30minTimeVal72] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal72 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*71)

const [LoopTime3_5SecPerHP30minTimeVal73, setLoopTime3_5SecPerHP30minTimeVal73] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal73 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*72)

const [LoopTime3_5SecPerHP30minTimeVal74, setLoopTime3_5SecPerHP30minTimeVal74] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal74 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*73)

const [LoopTime3_5SecPerHP30minTimeVal75, setLoopTime3_5SecPerHP30minTimeVal75] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal75 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*74)

const [LoopTime3_5SecPerHP30minTimeVal76, setLoopTime3_5SecPerHP30minTimeVal76] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal76 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*75)

const [LoopTime3_5SecPerHP30minTimeVal77, setLoopTime3_5SecPerHP30minTimeVal77] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal77 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*76)

const [LoopTime3_5SecPerHP30minTimeVal78, setLoopTime3_5SecPerHP30minTimeVal78] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal78 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*77)

const [LoopTime3_5SecPerHP30minTimeVal79, setLoopTime3_5SecPerHP30minTimeVal79] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal79 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*78)

const [LoopTime3_5SecPerHP30minTimeVal80, setLoopTime3_5SecPerHP30minTimeVal80] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal80 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*79)

const [LoopTime3_5SecPerHP30minTimeVal81, setLoopTime3_5SecPerHP30minTimeVal81] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal81 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*80)

const [LoopTime3_5SecPerHP30minTimeVal82, setLoopTime3_5SecPerHP30minTimeVal82] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal82 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*81)

const [LoopTime3_5SecPerHP30minTimeVal83, setLoopTime3_5SecPerHP30minTimeVal83] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal83 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*82)

const [LoopTime3_5SecPerHP30minTimeVal84, setLoopTime3_5SecPerHP30minTimeVal84] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal84 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*83)

const [LoopTime3_5SecPerHP30minTimeVal85, setLoopTime3_5SecPerHP30minTimeVal85] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal85 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*84)

const [LoopTime3_5SecPerHP30minTimeVal86, setLoopTime3_5SecPerHP30minTimeVal86] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal86 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*85)

const [LoopTime3_5SecPerHP30minTimeVal87, setLoopTime3_5SecPerHP30minTimeVal87] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal87 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*86)

const [LoopTime3_5SecPerHP30minTimeVal88, setLoopTime3_5SecPerHP30minTimeVal88] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal88 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*87)

const [LoopTime3_5SecPerHP30minTimeVal89, setLoopTime3_5SecPerHP30minTimeVal89] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal89 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*88)

const [LoopTime3_5SecPerHP30minTimeVal90, setLoopTime3_5SecPerHP30minTimeVal90] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal90 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*89)

const [LoopTime3_5SecPerHP30minTimeVal91, setLoopTime3_5SecPerHP30minTimeVal91] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal91 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*90)

const [LoopTime3_5SecPerHP30minTimeVal92, setLoopTime3_5SecPerHP30minTimeVal92] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal92 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*91)

const [LoopTime3_5SecPerHP30minTimeVal93, setLoopTime3_5SecPerHP30minTimeVal93] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal93 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*92)

const [LoopTime3_5SecPerHP30minTimeVal94, setLoopTime3_5SecPerHP30minTimeVal94] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal94 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*93)

const [LoopTime3_5SecPerHP30minTimeVal95, setLoopTime3_5SecPerHP30minTimeVal95] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal95 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*94)

const [LoopTime3_5SecPerHP30minTimeVal96, setLoopTime3_5SecPerHP30minTimeVal96] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal96 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*95)

const [LoopTime3_5SecPerHP30minTimeVal97, setLoopTime3_5SecPerHP30minTimeVal97] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal97 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*96)

const [LoopTime3_5SecPerHP30minTimeVal98, setLoopTime3_5SecPerHP30minTimeVal98] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal98 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*97)

const [LoopTime3_5SecPerHP30minTimeVal99, setLoopTime3_5SecPerHP30minTimeVal99] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal99 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*98)

const [LoopTime3_5SecPerHP30minTimeVal100, setLoopTime3_5SecPerHP30minTimeVal100] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal100 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*99)

const [LoopTime3_5SecPerHP30minTimeVal101, setLoopTime3_5SecPerHP30minTimeVal101] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal101 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*100)

const [LoopTime3_5SecPerHP30minTimeVal102, setLoopTime3_5SecPerHP30minTimeVal102] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal102 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*101)

const [LoopTime3_5SecPerHP30minTimeVal103, setLoopTime3_5SecPerHP30minTimeVal103] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal103 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*102)

const [LoopTime3_5SecPerHP30minTimeVal104, setLoopTime3_5SecPerHP30minTimeVal104] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal104 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*103)

const [LoopTime3_5SecPerHP30minTimeVal105, setLoopTime3_5SecPerHP30minTimeVal105] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal105 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*104)

const [LoopTime3_5SecPerHP30minTimeVal106, setLoopTime3_5SecPerHP30minTimeVal106] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal106 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*105)

const [LoopTime3_5SecPerHP30minTimeVal107, setLoopTime3_5SecPerHP30minTimeVal107] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal107 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*106)

const [LoopTime3_5SecPerHP30minTimeVal108, setLoopTime3_5SecPerHP30minTimeVal108] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal108 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*107)

const [LoopTime3_5SecPerHP30minTimeVal109, setLoopTime3_5SecPerHP30minTimeVal109] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal109 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*108)

const [LoopTime3_5SecPerHP30minTimeVal110, setLoopTime3_5SecPerHP30minTimeVal110] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal110 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*109)

const [LoopTime3_5SecPerHP30minTimeVal111, setLoopTime3_5SecPerHP30minTimeVal111] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal111 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*110)

const [LoopTime3_5SecPerHP30minTimeVal112, setLoopTime3_5SecPerHP30minTimeVal112] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal112 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*111)

const [LoopTime3_5SecPerHP30minTimeVal113, setLoopTime3_5SecPerHP30minTimeVal113] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal113 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*112)

const [LoopTime3_5SecPerHP30minTimeVal114, setLoopTime3_5SecPerHP30minTimeVal114] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal114 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*113)

const [LoopTime3_5SecPerHP30minTimeVal115, setLoopTime3_5SecPerHP30minTimeVal115] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal115 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*114)

const [LoopTime3_5SecPerHP30minTimeVal116, setLoopTime3_5SecPerHP30minTimeVal116] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal116 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*115)

const [LoopTime3_5SecPerHP30minTimeVal117, setLoopTime3_5SecPerHP30minTimeVal117] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal117 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*116)

const [LoopTime3_5SecPerHP30minTimeVal118, setLoopTime3_5SecPerHP30minTimeVal118] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal118 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*117)

const [LoopTime3_5SecPerHP30minTimeVal119, setLoopTime3_5SecPerHP30minTimeVal119] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal119 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*118)

const [LoopTime3_5SecPerHP30minTimeVal120, setLoopTime3_5SecPerHP30minTimeVal120] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal120 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*119)

const [LoopTime3_5SecPerHP30minTimeVal121, setLoopTime3_5SecPerHP30minTimeVal121] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal121 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*120)

const [LoopTime3_5SecPerHP30minTimeVal122, setLoopTime3_5SecPerHP30minTimeVal122] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal122 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*121)

const [LoopTime3_5SecPerHP30minTimeVal123, setLoopTime3_5SecPerHP30minTimeVal123] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal123 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*122)

const [LoopTime3_5SecPerHP30minTimeVal124, setLoopTime3_5SecPerHP30minTimeVal124] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal124 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*123)

const [LoopTime3_5SecPerHP30minTimeVal125, setLoopTime3_5SecPerHP30minTimeVal125] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal125 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*124)

const [LoopTime3_5SecPerHP30minTimeVal126, setLoopTime3_5SecPerHP30minTimeVal126] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal126 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*125)

const [LoopTime3_5SecPerHP30minTimeVal127, setLoopTime3_5SecPerHP30minTimeVal127] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal127 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*126)

const [LoopTime3_5SecPerHP30minTimeVal128, setLoopTime3_5SecPerHP30minTimeVal128] = useState(null)
const totalLoopTime3_5SecPerHP30minTimeVal128 = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*127)

const [WhenToStartFinalViradiseLoop, setWhenToStartFinalViradiseLoop] = useState(0)
const totalWhenToStartFinalViradiseLoop = Math.max(totalLoopTime3_5SecPerHP30minTimeVal2*totalViradise75Loops)

const [RemainingSecondsViradise, setRemainingSecondsViradise] = useState(0)
const totalRemainingSecondsViradise = Math.max((1800000-totalWhenToStartFinalViradiseLoop)/1000,0)

const [FinalLoopSecsViradise, setFinalLoopSecsViradise] = useState(0);
const totalFinalLoopSecsViradise = Math.max (totalLeftoverViradiseTime*1000)


//vanstra - min - timers//

const DelayComponentVanstraMinLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTimeMin2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' mt='25px' fontSize='md'>
      	<b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentVanstraMinLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTimeMin2SecPerHPTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalVanstraMins10} minutes and {totalVanstraSecs10} seconds </Text>)
  return (   <Timer initialTime={totalLoopTimeMin2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'>
      	<b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraMinLoop3 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTimeMin2SecPerHPTimeVal3)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 3: </b>{totalVanstraMins10} minutes and {totalVanstraSecs10} seconds </Text>)
  return (   <Timer initialTime={totalLoopTimeMin2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentVanstraMinLoopFinal = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
      const timeout = setTimeout(() => {
        setShow(true)
      }, totalWhenToStartFinalVanstraLoopMin)
      return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
      <b>Final Loop: </b>{totalVanstraFinalMins} minutes and {totalVanstraFinalSecs} seconds </Text>)
    return (   <Timer initialTime={totalFinalLoopSecsVanstraMin}
    direction="backward"
        timeToUpdate={10}>
      {({ start, resume, pause, stop, reset, timerState }) => (
        <React.Fragment>
          <div>
          <Text mb='8px' fontSize='md'>
            <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
          </div>
        </React.Fragment>
      )}
    </Timer>
  )
  };



//vanstra - timers//

const DelayComponentVanstraLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' mt='25px' fontSize='md'>
      	<b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
      </div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentVanstraLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'>
      	<b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop3 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal3)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 3: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop4 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal4)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 4: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 4: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop5 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal5)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 5: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop6 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal6)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 6: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop7 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal7)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 7: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop8 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal8)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 8: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanstraLoop9 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal9)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 9: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanstraLoop10 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal10)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 10: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 10: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanstraLoop11 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal11)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 11: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 11: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanstraLoop12 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal12)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 12: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 12: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanstraLoop13 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal13)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 13: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 13: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanstraLoop14 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal14)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 14: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 14: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanstraLoop15 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal15)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 15: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 15: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop16 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal16)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 16: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 16: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop17 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal17)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 17: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 17: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop18 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal18)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 18: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 18: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop19 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal19)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 19: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 19: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop20 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal20)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 20: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 20: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop21 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal21)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 21: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 21: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop22 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2SecPerHPTimeVal22)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 22: </b>{totalVanstraMins75} minutes and {totalVanstraSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'><b>Loop 22: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanstraLoop4x = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, (((Math.ceil((180/4)*.9))*4)*1000))
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (
  
      <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
      }} >
          <Text mt='15px' pt='10px'  fontSize='md' style={{color: '#7a7a7a'}}>
          At ~15 secs remaining:<br />
    the timer will flash 1x, then show the 4x reward multiplier</Text>
        </Container>
      )
  return (   <Timer initialTime={totalFinalLoopSecsVoidWignow}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
      }} >
          <Text mt='15px' pt='25px' fontSize='md'><span>
            When you see the </span><span style={{color: '#B794F4'}}><b>x4 multiplier</b></span><span>, <b><i>type</i></b> at least 1 word</span></Text>
        </Container>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanstraLoopFinal = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalWhenToStartFinalVanstraLoop)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Final Loop: </b>0 minutes and {totalLeftoverVanstraTime} seconds </Text>)
  return (   <Timer initialTime={totalFinalLoopSecsVanstra}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'>
      	<b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

//Vi - min - timers//

const DelayComponentViMinLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP5MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' mt='25px' fontSize='md'>
      	<b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentViMinLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTimeMin2_5SecPerHP5MinTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalViMins10} minutes and {totalViSecs10} seconds </Text>)
  return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP5MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'>
      	<b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
  
  const DelayComponentViMinLoop3 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP5MinTimeVal3)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 3: </b>{totalViMins10} minutes and {totalViSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP5MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };

  const DelayComponentViMinLoop4 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP5MinTimeVal4)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 3: </b>{totalViMins10} minutes and {totalViSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP5MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  
  const DelayComponentViMinLoopFinal = () => {
      const [show, setShow] = React.useState(false)
    
      React.useEffect(() => {
        const timeout = setTimeout(() => {
          setShow(true)
        }, totalWhenToStartFinalViLoopMin)
        return () => clearTimeout(timeout)
      }, [show])
      if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
        <b>Final Loop: </b>{totalViFinalMins} minutes and {totalViFinalSecs} seconds </Text>)
      return (   <Timer initialTime={totalFinalLoopSecsViMin}
      direction="backward"
          timeToUpdate={10}>
        {({ start, resume, pause, stop, reset, timerState }) => (
          <React.Fragment>
            <div>
            <Text mb='8px' fontSize='md'>
              <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
            </div>
          </React.Fragment>
        )}
      </Timer>
    )
    };


//Vi - timers//

const DelayComponentViLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, 0)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' mt='25px' fontSize='md'>
 		 <b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};


const DelayComponentViLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal2)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 2: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'>
 		 <b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop3 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal3)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 3: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop4 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal4)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 4: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 4: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop5 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal5)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 5: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop6 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal6)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 6: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop7 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal7)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 7: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop8 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal8)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 8: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentViLoop9 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal9)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 9: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentViLoop10 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal10)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 10: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 10: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentViLoop11 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal11)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 11: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 11: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentViLoop12 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal12)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 12: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 12: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentViLoop13 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal13)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 13: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 13: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentViLoop14 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal14)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 14: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 14: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentViLoop15 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal15)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 15: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 15: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop16 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal16)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 16: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 16: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop17 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal17)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 17: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 17: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop18 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal18)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 18: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 18: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop19 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal19)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 19: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 19: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop20 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal20)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 20: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 20: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop21 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal21)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 21: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 21: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop22 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal22)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 22: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 22: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop23 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal23)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 23: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 23: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop24 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal24)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 24: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 24: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop25 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal25)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 25: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 25: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop26 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal26)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 26: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 26: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop27 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal27)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 27: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 27: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop28 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal28)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 28: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 28: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop29 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP5MinTimeVal29)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 32: </b>{totalViMins75} minutes and {totalViSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP5MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 32: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoop4x = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, (((Math.ceil((300/5)*.9))*5)*1000))
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (
  
      <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
      }} >
          <Text mt='15px' pt='15px'  fontSize='md' style={{color: '#7a7a7a'}}>
          At ~30 secs remaining:<br/>
    the timer will flash 1x, then show the 4x reward multiplier</Text>
        </Container>
      )
  return (   <Timer initialTime={totalFinalLoopSecsVoidWignow}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
      }} >
          <Text mt='15px' pt='25px' fontSize='md'><span>
            When you see the </span><span style={{color: '#B794F4'}}><b>x4 multiplier</b></span><span>, <b><i>type</i></b> at least 1 word</span></Text>
        </Container>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentViLoopFinal = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalWhenToStartFinalViLoop)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Final Loop: </b>0 minutes and {totalLeftoverViTime} seconds </Text>)
  return (   <Timer initialTime={totalFinalLoopSecsVi}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'>
 		 <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

//VoidWignow - min - timers//

const DelayComponentVoidWignowMinLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTimeMin4SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' mt='25px' fontSize='md'>
      	<b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentVoidWignowMinLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTimeMin4SecPerHPTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalVoidWignowMins10} minutes and {totalVoidWignowSecs10} seconds </Text>)
  return (   <Timer initialTime={totalLoopTimeMin4SecPerHPTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'>
      	<b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
  
  const DelayComponentVoidWignowMinLoop3 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin4SecPerHPTimeVal3)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 3: </b>{totalVoidWignowMins10} minutes and {totalVoidWignowSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin4SecPerHPTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };

  
  const DelayComponentVoidWignowMinLoopFinal = () => {
      const [show, setShow] = React.useState(false)
    
      React.useEffect(() => {
        const timeout = setTimeout(() => {
          setShow(true)
        }, totalWhenToStartFinalVoidWignowLoopMin)
        return () => clearTimeout(timeout)
      }, [show])
      if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
        <b>Final Loop: </b>{totalVoidWignowFinalMins} minutes and {totalVoidWignowFinalSecs} seconds </Text>)
      return (   <Timer initialTime={totalFinalLoopSecsVoidWignowMin}
      direction="backward"
          timeToUpdate={10}>
        {({ start, resume, pause, stop, reset, timerState }) => (
          <React.Fragment>
            <div>
            <Text mb='8px' fontSize='md'>
              <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
            </div>
          </React.Fragment>
        )}
      </Timer>
    )
    };




//void wignow - timers//

const DelayComponent55Loop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, 0)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' mt='25px' fontSize='md'>
          <b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>     
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};


const DelayComponent55Loop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal2)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 2: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'>
          <b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>     
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop3 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal3)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 3: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>     
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop4 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal4)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 4: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 4: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop5 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal5)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 5: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop6 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal6)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 6: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop7 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal7)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 7: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop8 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal8)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 8: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponent55Loop9 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal9)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 9: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponent55Loop10 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal10)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 10: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 10: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponent55Loop11 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal11)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 11: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 11: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponent55Loop12 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal12)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 12: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 12: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponent55Loop13 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal13)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 13: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 13: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponent55Loop14 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal14)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 14: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 14: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponent55Loop15 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal15)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 15: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 15: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop16 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal16)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 16: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 16: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop17 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal17)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 17: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 17: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop18 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal18)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 18: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 18: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop19 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal19)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 19: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 19: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop20 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal20)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 20: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 20: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop21 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal21)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 21: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 21: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop22 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime4SecPerHPTimeVal22)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 22: </b>{totalVoidWignowMins75} minutes and {totalVoidWignowSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime4SecPerHPTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 22: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponent55Loop4x = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, (((Math.ceil((360/8)*.9))*8)*1000))
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (
  
      <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
      }} >
          <Text mt='15px' pt='10px'  fontSize='md' style={{color: '#7a7a7a'}}>
    At ~30 secs remaining:<br />
    the timer will flash 1x, then show the 4x reward multiplier</Text>
        </Container>
      )
  return (   <Timer initialTime={totalFinalLoopSecsVoidWignow}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
      }} >
          <Text mt='15px' pt='25px' fontSize='md'><span>
            When you see the </span><span style={{color: '#B794F4'}}><b>x4 multiplier</b></span><span>, <b><i>type</i></b> at least 1 word</span></Text>
        </Container>
      </React.Fragment>
    )}
  </Timer>
)
};


const DelayComponent55LoopFinal = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalWhenToStartFinalVoidWignowLoop)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Final Loop: </b>0 minutes and {totalLeftoverVoidWignowTime} seconds </Text>)
  return (   <Timer initialTime={totalFinalLoopSecsVoidWignow}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'>
          <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};


//yay battle end - for all monsters//

const YayBattleEndVanstraMin = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, 180000)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsVanstraMin}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text fontSize='md' style={{color: '#B794F4'}}>
        <b>The battle is over!</b> 🎉</Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};


const YayBattleEndViMin = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, 300000)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsViMin}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text fontSize='md' style={{color: '#B794F4'}}>
        <b>The battle is over!</b> 🎉</Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const YayBattleEndVanstra = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
    setGuidedCountdownMinIsShown (current => false);
    setShow(true)
	}, 182000)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsVanstra}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text fontSize='md' style={{color: '#B794F4'}}>
    	<b>The battle is over!</b> 🎉</Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const YayBattleEndVi = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 300000)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsVi}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md' style={{color: '#B794F4'}}>
    	<b>The battle is over!</b> 🎉</Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const YayBattleEndVoidWignowMin = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, 360000)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsVoidWignowMin}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text fontSize='md' style={{color: '#B794F4'}}>
        <b>The battle is over!</b> 🎉</Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const YayBattleEndVoidWignow = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, 360000)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsVoidWignow}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md' style={{color: '#B794F4'}}>
        <b>The battle is over!</b> 🎉</Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const YayBattleEndVanspiProfBMin = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, 600000)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsVanspiProfBMin}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text fontSize='md' style={{color: '#B794F4'}}>
        <b>The battle is over!</b> 🎉</Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};


const YayBattleEndVanspiProfB = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 600000)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsVanspiProfB}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md' style={{color: '#B794F4'}}>
    	<b>The battle is over!</b> 🎉</Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const YayBattleEndViyuMin = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, 900000)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsViyuMin}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text fontSize='md' style={{color: '#B794F4'}}>
        <b>The battle is over!</b> 🎉</Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};


const YayBattleEndViyu = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 900000)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsViyu}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md' style={{color: '#B794F4'}}>
    	<b>The battle is over!</b> 🎉</Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const YayBattleEndLucerebMin = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, 600000)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsLucerebMin}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text fontSize='md' style={{color: '#B794F4'}}>
        <b>The battle is over!</b> 🎉</Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const YayBattleEndLucereb = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 600000)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsLucereb}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md' style={{color: '#B794F4'}}>
    	<b>The battle is over!</b> 🎉</Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const YayBattleEndVanvriMin = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, 1200000)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsVanvriMin}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text fontSize='md' style={{color: '#B794F4'}}>
        <b>The battle is over!</b> 🎉</Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};


const YayBattleEndVanvri = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 1200000)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsVanvri}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md' style={{color: '#B794F4'}}>
    	<b>The battle is over!</b> 🎉</Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const YayBattleEndViyusaMin = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, 1500000)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsViyusaMin}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text fontSize='md' style={{color: '#B794F4'}}>
        <b>The battle is over!</b> 🎉</Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const YayBattleEndViyusa = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 1500000)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsViyusa}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md' style={{color: '#B794F4'}}>
    	<b>The battle is over!</b> 🎉</Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const YayBattleEndViradiseMin = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, 1800000)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsViradiseMin}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text fontSize='md' style={{color: '#B794F4'}}>
        <b>The battle is over!</b> 🎉</Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const YayBattleEndViradise = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 1800000)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalFinalLoopSecsViradise}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md' style={{color: '#B794F4'}}>
    	<b>The battle is over!</b> 🎉</Text>
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};



//Vanstra - min - it goes in its boxes precious//

const VanstraTimerMin = () => {
  if (totalVanstraLoops == 1 )
    return(<Container>
<DelayComponentVanstraMinLoop />
<DelayComponentVanstraMinLoopFinal />
<YayBattleEndVanstraMin />
</Container>
)
};

const VanstraTimerMin2 = () => {
  if (totalVanstraLoops == 2)
    return(<Container>
<DelayComponentVanstraMinLoop />
<DelayComponentVanstraMinLoop2 />
<DelayComponentVanstraMinLoopFinal />
<YayBattleEndVanstraMin />
</Container>
)
};

const VanstraTimerMin3 = () => {
  if (totalVanstraLoops == 3)
    return(<Container>
<DelayComponentVanstraMinLoop />
<DelayComponentVanstraMinLoop2 />
<DelayComponentVanstraMinLoop3 />
<DelayComponentVanstraMinLoopFinal />
<YayBattleEndVanstraMin />
</Container>
)
};

//Vanstra - it goes in its boxes precious//

const VanstraTimer4 = () => {
  if (totalVanstra75Loops == 4)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};



const VanstraTimer5 = () => {
  if (totalVanstra75Loops == 5)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra /></Container>
)
};

const VanstraTimer6 = () => {
  if (totalVanstra75Loops == 6)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};


const VanstraTimer7 = () => {
  if (totalVanstra75Loops == 7)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};


const VanstraTimer8 = () => {
  if (totalVanstra75Loops == 8)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer9 = () => {
  if (totalVanstra75Loops == 9)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer10 = () => {
  if (totalVanstra75Loops == 10)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoop10 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer11 = () => {
  if (totalVanstra75Loops == 11)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoop10 />
<DelayComponentVanstraLoop11 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer12 = () => {
  if (totalVanstra75Loops == 12)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoop10 />
<DelayComponentVanstraLoop11 />
<DelayComponentVanstraLoop12 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer13 = () => {
  if (totalVanstra75Loops == 13)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoop10 />
<DelayComponentVanstraLoop11 />
<DelayComponentVanstraLoop12 />
<DelayComponentVanstraLoop13 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer14 = () => {
  if (totalVanstra75Loops == 14)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoop10 />
<DelayComponentVanstraLoop11 />
<DelayComponentVanstraLoop12 />
<DelayComponentVanstraLoop13 />
<DelayComponentVanstraLoop14 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer15 = () => {
  if (totalVanstra75Loops == 15)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoop10 />
<DelayComponentVanstraLoop11 />
<DelayComponentVanstraLoop12 />
<DelayComponentVanstraLoop13 />
<DelayComponentVanstraLoop14 />
<DelayComponentVanstraLoop15 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer16 = () => {
  if (totalVanstra75Loops == 16)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoop10 />
<DelayComponentVanstraLoop11 />
<DelayComponentVanstraLoop12 />
<DelayComponentVanstraLoop13 />
<DelayComponentVanstraLoop14 />
<DelayComponentVanstraLoop15 />
<DelayComponentVanstraLoop16 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer17 = () => {
  if (totalVanstra75Loops == 17)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoop10 />
<DelayComponentVanstraLoop11 />
<DelayComponentVanstraLoop12 />
<DelayComponentVanstraLoop13 />
<DelayComponentVanstraLoop14 />
<DelayComponentVanstraLoop15 />
<DelayComponentVanstraLoop16 />
<DelayComponentVanstraLoop17 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer18 = () => {
  if (totalVanstra75Loops == 18)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoop10 />
<DelayComponentVanstraLoop11 />
<DelayComponentVanstraLoop12 />
<DelayComponentVanstraLoop13 />
<DelayComponentVanstraLoop14 />
<DelayComponentVanstraLoop15 />
<DelayComponentVanstraLoop16 />
<DelayComponentVanstraLoop17 />
<DelayComponentVanstraLoop18 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer19 = () => {
  if (totalVanstra75Loops == 19)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoop10 />
<DelayComponentVanstraLoop11 />
<DelayComponentVanstraLoop12 />
<DelayComponentVanstraLoop13 />
<DelayComponentVanstraLoop14 />
<DelayComponentVanstraLoop15 />
<DelayComponentVanstraLoop16 />
<DelayComponentVanstraLoop17 />
<DelayComponentVanstraLoop18 />
<DelayComponentVanstraLoop19 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer20 = () => {
  if (totalVanstra75Loops == 20)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoop10 />
<DelayComponentVanstraLoop11 />
<DelayComponentVanstraLoop12 />
<DelayComponentVanstraLoop13 />
<DelayComponentVanstraLoop14 />
<DelayComponentVanstraLoop15 />
<DelayComponentVanstraLoop16 />
<DelayComponentVanstraLoop17 />
<DelayComponentVanstraLoop18 />
<DelayComponentVanstraLoop19 />
<DelayComponentVanstraLoop20 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer21 = () => {
  if (totalVanstra75Loops == 21)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoop10 />
<DelayComponentVanstraLoop11 />
<DelayComponentVanstraLoop12 />
<DelayComponentVanstraLoop13 />
<DelayComponentVanstraLoop14 />
<DelayComponentVanstraLoop15 />
<DelayComponentVanstraLoop16 />
<DelayComponentVanstraLoop17 />
<DelayComponentVanstraLoop18 />
<DelayComponentVanstraLoop19 />
<DelayComponentVanstraLoop20 />
<DelayComponentVanstraLoop21 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const VanstraTimer22 = () => {
  if (totalVanstra75Loops == 22)
	return(<Container>
<DelayComponentVanstraLoop />
<DelayComponentVanstraLoop2 />
<DelayComponentVanstraLoop3 />
<DelayComponentVanstraLoop4 />
<DelayComponentVanstraLoop5 />
<DelayComponentVanstraLoop6 />
<DelayComponentVanstraLoop7 />
<DelayComponentVanstraLoop8 />
<DelayComponentVanstraLoop9 />
<DelayComponentVanstraLoop10 />
<DelayComponentVanstraLoop11 />
<DelayComponentVanstraLoop12 />
<DelayComponentVanstraLoop13 />
<DelayComponentVanstraLoop14 />
<DelayComponentVanstraLoop15 />
<DelayComponentVanstraLoop16 />
<DelayComponentVanstraLoop17 />
<DelayComponentVanstraLoop18 />
<DelayComponentVanstraLoop19 />
<DelayComponentVanstraLoop20 />
<DelayComponentVanstraLoop21 />
<DelayComponentVanstraLoop22 />
<DelayComponentVanstraLoopFinal />
<YayBattleEndVanstra />
</Container>
)
};

const Vanstra4 = () => {
  if (totalVanstraBackTo100 == 4)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra5 = () => {
  if (totalVanstraBackTo100 == 5)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra6 = () => {
  if (totalVanstraBackTo100 == 6)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra7 = () => {
  if (totalVanstraBackTo100 == 7)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra8 = () => {
  if (totalVanstraBackTo100 == 8)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra9 = () => {
  if (totalVanstraBackTo100 == 9)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra10 = () => {
  if (totalVanstraBackTo100 == 10)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra11 = () => {
  if (totalVanstraBackTo100 == 11)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanstra12 = () => {
  if (totalVanstraBackTo100 == 12)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanstra13 = () => {
  if (totalVanstraBackTo100 == 13)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc ex sodales.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanstra14 = () => {
  if (totalVanstraBackTo100 == 14)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at ex sodales.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanstra15 = () => {
  if (totalVanstraBackTo100 == 15)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanstra16 = () => {
  if (totalVanstraBackTo100 == 16)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales consequat.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}


const Vanstra17 = () => {
  if (totalVanstraBackTo100 == 17)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus orci. ')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanstra18 = () => {
  if (totalVanstraBackTo100 == 18)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in orci. ')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanstra19 = () => {
  if (totalVanstraBackTo100 == 19)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius. ')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanstra20 = () => {
  if (totalVanstraBackTo100 == 20)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque. ')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanstra21 = () => {
  if (totalVanstraBackTo100 == 21)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus.')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanstra22 = () => {
  if (totalVanstraBackTo100 == 22)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus et. ')}}>
Copy {totalVanstraBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanstra26 = () => {
  if (totalVanstraHPToLose == 26)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam vel ante quam. Nulla egestas auctor enim non rhoncus. Maecenas feugiat dapibus lacus nec gravida. Quisque dictum.')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra28 = () => {
  if (totalVanstraHPToLose == 28)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam non purus feugiat, gravida dolor eget, porta mi. Aliquam iaculis elit diam. Ut id blandit dui. Nulla et dolor.')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra30 = () => {
  if (totalVanstraHPToLose == 30)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rhoncus euismod lacus ut lobortis. Maecenas tincidunt lacus quis interdum faucibus. Aliquam erat volutpat. Vestibulum semper est in condimentum mattis. Suspendisse.')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra32 = () => {
  if (totalVanstraHPToLose == 32)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec faucibus risus justo, ac consectetur orci maximus nec. Proin placerat, lectus nec tempus cursus, augue nibh eleifend erat, at porttitor nulla arcu in.')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra34 = () => {
  if (totalVanstraHPToLose == 34)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus diam tellus, volutpat vitae dapibus vel, convallis auctor tellus. Cras fringilla tincidunt lorem, quis sagittis odio accumsan at. Sed nec dictum diam. Cras ac pulvinar.')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra36 = () => {
  if (totalVanstraHPToLose == 36)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus mollis egestas ex. Vivamus tempus neque odio, nec scelerisque ipsum vehicula sit amet. Duis nisl dolor, posuere sed ante vel, euismod faucibus nisi. Donec nulla leo, aliquet.')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra38 = () => {
  if (totalVanstraHPToLose == 38)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque feugiat aliquam ipsum ac auctor. Phasellus a nisi auctor, tempus felis eget, porta felis. Maecenas et tempor nisi. Aenean metus arcu, posuere sit amet nunc vel, cursus porttitor nisl.')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra40 = () => {
  if (totalVanstraHPToLose == 40)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus at est et ipsum suscipit lacinia nec sit amet turpis. Vestibulum nec ex nibh. Etiam consequat et justo sit amet commodo. Suspendisse mattis semper arcu eget fermentum. Donec eu nisi elementum.')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra42 = () => {
  if (totalVanstraHPToLose == 42)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ac aliquam nunc. Sed vitae tellus a tellus dictum condimentum. Nunc volutpat feugiat justo. Fusce vulputate ligula nisl, sed ullamcorper libero imperdiet sit amet. In fermentum sed metus nec pellentesque. Duis eget tellus. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra44 = () => {
  if (totalVanstraHPToLose == 44)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus vehicula volutpat ligula eu efficitur. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris mollis et odio eu placerat. Phasellus mollis eleifend orci, eget pulvinar sem viverra eu. Nam turpis. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra46 = () => {
  if (totalVanstraHPToLose == 46)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer aliquam mauris ac dignissim hendrerit. Suspendisse leo nulla, hendrerit ultrices diam interdum, consequat mollis sapien. Donec ac placerat leo. In ante libero, facilisis sit amet quam in, iaculis commodo nisl. Aliquam tincidunt nunc massa, sit amet viverra.')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra48 = () => {
  if (totalVanstraHPToLose == 48)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis eu ligula ac ipsum tempus tristique ac at urna. Phasellus accumsan erat ac dui elementum fringilla. Phasellus sagittis et mi ac malesuada. Nam eleifend mi in velit auctor, vel mollis massa volutpat. Ut tempus lorem diam, a sollicitudin ex.')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra50 = () => {
  if (totalVanstraHPToLose == 50)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam consequat blandit eros, pellentesque vulputate tortor imperdiet et. In hac habitasse platea dictumst. Aenean non dapibus diam, vitae suscipit augue. Phasellus ut aliquam magna, nec efficitur lacus. Pellentesque lacus sapien, vulputate in blandit at, venenatis vestibulum magna. Nullam quis facilisis dui. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra52 = () => {
  if (totalVanstraHPToLose == 52)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eros odio, pellentesque quis tellus at, consectetur lobortis sem. Etiam turpis libero, viverra at malesuada ac, fringilla consectetur orci. Etiam sed convallis magna. Morbi feugiat rutrum metus vitae placerat. Cras fermentum convallis posuere. Vivamus hendrerit neque id pharetra consectetur. Etiam fringilla augue et. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra54 = () => {
  if (totalVanstraHPToLose == 54)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec id posuere est, a ultrices nisi. In porttitor ligula vel arcu dapibus, vel interdum magna ultricies. Aenean odio ante, ultrices vitae fermentum sed, aliquam eu tellus. Vestibulum mattis dignissim sollicitudin. Integer mollis, lorem et convallis elementum, lorem nisi vehicula dolor, congue vulputate metus eros id. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra56 = () => {
  if (totalVanstraHPToLose == 56)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce blandit viverra neque, iaculis blandit urna vulputate et. Etiam eu imperdiet nulla, ut malesuada mi. Nullam ex nisi, fringilla eget orci sed, porta porttitor tellus. Donec nec turpis feugiat, commodo eros in, sodales lacus. Maecenas fermentum lacus posuere mauris placerat tempus. Mauris a lectus tincidunt, aliquet nunc. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra58 = () => {
  if (totalVanstraHPToLose == 58)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam feugiat erat libero, et auctor lorem maximus et. Nam vel massa sed eros luctus finibus nec vitae augue. In pellentesque tortor vel pulvinar efficitur. Aenean non nunc volutpat, semper lacus quis, dignissim erat. Phasellus dignissim, leo et finibus maximus, nunc est dignissim augue, quis placerat urna ligula sit amet. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra60 = () => {
  if (totalVanstraHPToLose == 60)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ut sapien ac lacus porttitor aliquam at at nulla. Vivamus pharetra pulvinar elementum. Nullam imperdiet augue vel eros imperdiet eleifend. Suspendisse rutrum, tortor id volutpat sagittis, elit urna luctus odio, ut congue massa felis eu ligula. Maecenas tempor, urna in eleifend eleifend, eros ante vehicula odio, vitae maximus ipsum sapien sed.')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra62 = () => {
  if (totalVanstraHPToLose == 62)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc viverra finibus sapien, nec aliquam sem ornare elementum. Mauris a ornare nunc. Vestibulum placerat massa sit amet nisl faucibus, in euismod turpis sollicitudin. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean consectetur vel quam dapibus interdum. Maecenas lacinia dolor justo, at vestibulum ex sollicitudin eget. Nunc in velit. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra64 = () => {
  if (totalVanstraHPToLose == 64)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eu elementum odio. Nulla imperdiet sit amet risus nec pharetra. Duis auctor, justo et sodales posuere, risus sapien maximus enim, at convallis lorem ex eu orci. Donec imperdiet dictum ex, semper fermentum diam auctor sit amet. In suscipit nec odio vitae viverra. Nullam vitae hendrerit lectus, at accumsan mauris. Suspendisse facilisis quam eu imperdiet interdum. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra66 = () => {
  if (totalVanstraHPToLose == 66)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec commodo rutrum ultrices. Nullam dapibus nisi ut nisl placerat malesuada. Proin luctus dignissim dui, vitae lacinia velit gravida ac. Proin et nisi ac mi ultricies blandit ac ac sem. Nullam id mattis libero. Sed euismod metus ut odio tincidunt, sed sodales metus blandit. Phasellus aliquam elit in lacinia ornare. Nullam suscipit ipsum ac auctor convallis. Donec tempor. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra68 = () => {
  if (totalVanstraHPToLose == 68)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam ac dolor lobortis ante ornare scelerisque. Ut finibus luctus purus sit amet accumsan. Duis vel suscipit erat, nec molestie enim. Nullam bibendum odio nunc. Vivamus mollis fermentum ex, in dictum eros blandit nec. Sed sollicitudin quis tortor ac pharetra. Sed consectetur, turpis eu eleifend rutrum, nibh urna condimentum leo, eget interdum urna est nec sapien. Interdum et malesuada fames. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra70 = () => {
  if (totalVanstraHPToLose == 70)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse pharetra purus elementum auctor varius. Morbi elementum mi nec iaculis pretium. Cras nec porta turpis. Nullam vehicula urna vitae volutpat sollicitudin. Aliquam erat volutpat. In vehicula ex in augue scelerisque bibendum. Suspendisse cursus neque at mauris feugiat mattis. Ut at congue justo. Phasellus elementum aliquet gravida. Aliquam rhoncus vulputate est eget efficitur. Cras tristique elit non tellus consequat iaculis. Nunc sit. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra72 = () => {
  if (totalVanstraHPToLose == 72)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc sodales, elit sed posuere laoreet, ante mi maximus velit, vel accumsan sem metus vel justo. Curabitur nec tincidunt tellus, at laoreet felis. Fusce eu luctus felis. Morbi varius, turpis eu aliquam auctor, magna ante interdum nulla, quis maximus magna felis nec nisl. Vivamus vitae ullamcorper dolor. Donec feugiat in dolor in maximus. Integer viverra dui sit amet nulla tristique, sit amet suscipit leo. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra74 = () => {
  if (totalVanstraHPToLose == 74)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi quis magna a justo bibendum dictum sit amet sit amet ex. Aenean quis hendrerit urna, ut ullamcorper nisi. Aenean a nunc consectetur, pharetra lectus non, rhoncus sapien. Sed quis nulla gravida, interdum turpis a, faucibus est. Curabitur a odio vitae ex tristique luctus vitae a sem. Nulla congue vel lacus eget varius. Aliquam fermentum nibh quis diam dictum, vel porta justo rhoncus. Morbi at rhoncus. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra76 = () => {
  if (totalVanstraHPToLose == 76)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque nec euismod est. Cras tincidunt tempus blandit. Vestibulum vel tortor sed ligula vestibulum aliquet sit amet vel tellus. Mauris vitae ultricies nibh. Integer eu augue non nulla consectetur cursus. Fusce diam purus, faucibus non interdum sed, varius eget tellus. Suspendisse vehicula justo diam, ac fringilla eros sagittis sit amet. Suspendisse non justo lacinia, tempor libero pulvinar, efficitur arcu. Nunc vitae enim vestibulum massa interdum volutpat sit amet. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra78 = () => {
  if (totalVanstraHPToLose == 78)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec augue arcu, fringilla vitae tempus vel, ultricies commodo turpis. Pellentesque ut risus luctus, accumsan dolor eget, luctus felis. Suspendisse ac egestas nunc. Sed viverra felis nec lectus tempor feugiat. Nunc tincidunt finibus turpis non luctus. Nullam orci nisl, porttitor ut neque in, malesuada porta nisi. Phasellus sollicitudin magna faucibus est lobortis, ornare mollis lacus sodales. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra80 = () => {
  if (totalVanstraHPToLose == 80)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas congue dignissim cursus. Vivamus id nulla ut risus pellentesque semper. Pellentesque lobortis augue eget ultrices molestie. Nunc euismod massa a lectus varius sollicitudin. Sed dictum quis est placerat porta. Ut malesuada feugiat nisi et accumsan. Morbi et pulvinar nunc. Proin fringilla condimentum metus, id blandit mauris egestas in. Fusce tincidunt, nisi eget ornare fermentum, elit erat dictum nulla, tristique iaculis leo massa in orci. Ut aliquam efficitur lacus, in commodo nibh.')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra82 = () => {
  if (totalVanstraHPToLose == 82)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec auctor felis ligula, sit amet pulvinar arcu porta quis. Mauris ultrices tristique neque, id ullamcorper nisi pharetra sit amet. Nam commodo leo sit amet sollicitudin vehicula. Morbi congue tellus risus, eu dapibus ex consequat id. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Pellentesque vestibulum arcu diam, non ornare dui volutpat sollicitudin. Nunc vitae massa in leo volutpat fermentum nec eu lectus. Sed sit amet finibus dui, sed. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra84 = () => {
  if (totalVanstraHPToLose == 84)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus dictum velit vitae nunc ultrices, non sagittis eros euismod. Donec mattis leo id tempor tristique. In dignissim tempus augue, et posuere eros tempus sed. Suspendisse in ex felis. Ut faucibus blandit imperdiet. Sed convallis quam quis augue viverra rutrum. Ut sapien orci, scelerisque blandit nulla sit amet, malesuada sollicitudin justo. Proin et nulla consequat, fermentum eros non, rutrum orci. Suspendisse porttitor viverra tortor sed consequat. Etiam et augue ac metus condimentum finibus. Nunc vel dictum. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra86 = () => {
  if (totalVanstraHPToLose == 86)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. In a rutrum lorem, vel congue libero. Maecenas egestas tincidunt mauris, ut interdum turpis eleifend id. Mauris consectetur metus id eros consectetur gravida. Vivamus eget velit ipsum. Nunc porta tortor eu est imperdiet fringilla. Curabitur vel nibh ac odio imperdiet ultricies. Donec tempus ante non libero euismod dapibus. Aenean faucibus consectetur bibendum. Morbi sollicitudin, enim id congue laoreet, elit dui volutpat metus, non egestas ante tortor sit amet ex. Mauris sagittis pulvinar finibus. Integer non vehicula lectus, ut. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra88 = () => {
  if (totalVanstraHPToLose == 88)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla arcu odio, vulputate eu tortor ac, convallis convallis ipsum. Proin imperdiet luctus odio id vehicula. Sed congue posuere tristique. Vivamus accumsan luctus tellus. Mauris porttitor leo et metus convallis elementum. Suspendisse in urna pharetra, eleifend arcu et, porttitor lectus. Vivamus eros tellus, volutpat in est accumsan, bibendum congue est. Phasellus dignissim consequat sem, in rutrum lorem interdum nec. Phasellus facilisis lectus eu eros condimentum, vel luctus justo eleifend. Fusce venenatis ipsum ut ante tincidunt commodo. Suspendisse potenti. Sed volutpat. .')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanstra90 = () => {
  if (totalVanstraHPToLose == 90)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam eu dignissim neque. Quisque a commodo diam. Cras in accumsan nisl. Maecenas vitae scelerisque arcu, at pretium ipsum. Nam tincidunt ullamcorper congue. Donec scelerisque, augue nec hendrerit vehicula, erat dui pellentesque odio, et viverra dolor felis nec sem. Praesent a lorem vel tellus feugiat ultricies. Etiam lacinia, sapien quis vulputate tincidunt, nisi lacus ornare augue, elementum efficitur elit diam in nibh. Suspendisse ullamcorper mollis purus, at tincidunt odio porta rhoncus. Quisque efficitur nisl nibh, id auctor libero viverra ac. In hac. ')}}>
Copy {totalVanstraHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

  //Vi - min - it goes in its boxes precious//

  const ViTimerMin = () => {
    if (totalViLoops == 1)
      return(<Container>
  <DelayComponentViMinLoop />
  <DelayComponentViMinLoopFinal />
  <YayBattleEndViMin />
  </Container>
  )
  };

  const ViTimerMin2 = () => {
    if (totalViLoops == 2)
      return(<Container>
  <DelayComponentViMinLoop />
  <DelayComponentViMinLoop2 />
  <DelayComponentViMinLoopFinal />
  <YayBattleEndViMin />
  </Container>
  )
  };

  const ViTimerMin3 = () => {
    if (totalViLoops == 3)
      return(<Container>
  <DelayComponentViMinLoop />
  <DelayComponentViMinLoop2 />
  <DelayComponentViMinLoop3 />
  <DelayComponentViMinLoopFinal />
  <YayBattleEndViMin />
  </Container>
  )
  };

  const ViTimerMin4 = () => {
    if (totalViLoops == 4)
      return(<Container>
  <DelayComponentViMinLoop />
  <DelayComponentViMinLoop2 />
  <DelayComponentViMinLoop3 />
  <DelayComponentViMinLoop4 />
  <DelayComponentViMinLoopFinal />
  <YayBattleEndViMin />
  </Container>
  )
  };

//Vi - it goes in its boxes precious//

const ViTimer4 = () => {
  if (totalVi75Loops == 4)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer5 = () => {
  if (totalVi75Loops == 5)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoopFinal />
<YayBattleEndVi /></Container>
)
};

const ViTimer6 = () => {
  if (totalVi75Loops == 6)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};


const ViTimer7 = () => {
  if (totalVi75Loops == 7)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};


const ViTimer8 = () => {
  if (totalVi75Loops == 8)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer9 = () => {
  if (totalVi75Loops == 9)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer10 = () => {
  if (totalVi75Loops == 10)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer11 = () => {
  if (totalVi75Loops == 11)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer12 = () => {
  if (totalVi75Loops == 12)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer13 = () => {
  if (totalVi75Loops == 13)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer14 = () => {
  if (totalVi75Loops == 14)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer15 = () => {
  if (totalVi75Loops == 15)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer16 = () => {
  if (totalVi75Loops == 16)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer17 = () => {
  if (totalVi75Loops == 17)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer18 = () => {
  if (totalVi75Loops == 18)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoop18 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer19 = () => {
  if (totalVi75Loops == 19)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoop18 />
<DelayComponentViLoop19 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer20 = () => {
  if (totalVi75Loops == 20)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoop18 />
<DelayComponentViLoop19 />
<DelayComponentViLoop20 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer21 = () => {
  if (totalVi75Loops == 21)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoop18 />
<DelayComponentViLoop19 />
<DelayComponentViLoop20 />
<DelayComponentViLoop21 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer22 = () => {
  if (totalVi75Loops == 22)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoop18 />
<DelayComponentViLoop19 />
<DelayComponentViLoop20 />
<DelayComponentViLoop21 />
<DelayComponentViLoop22 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer23 = () => {
  if (totalVi75Loops == 23)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoop18 />
<DelayComponentViLoop19 />
<DelayComponentViLoop20 />
<DelayComponentViLoop21 />
<DelayComponentViLoop22 />
<DelayComponentViLoop23 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer24 = () => {
  if (totalVi75Loops == 24)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoop18 />
<DelayComponentViLoop19 />
<DelayComponentViLoop20 />
<DelayComponentViLoop21 />
<DelayComponentViLoop22 />
<DelayComponentViLoop23 />
<DelayComponentViLoop24 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer25 = () => {
  if (totalVi75Loops == 25)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoop18 />
<DelayComponentViLoop19 />
<DelayComponentViLoop20 />
<DelayComponentViLoop21 />
<DelayComponentViLoop22 />
<DelayComponentViLoop23 />
<DelayComponentViLoop24 />
<DelayComponentViLoop25 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer26 = () => {
  if (totalVi75Loops == 26)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoop18 />
<DelayComponentViLoop19 />
<DelayComponentViLoop20 />
<DelayComponentViLoop21 />
<DelayComponentViLoop22 />
<DelayComponentViLoop23 />
<DelayComponentViLoop24 />
<DelayComponentViLoop25 />
<DelayComponentViLoop26 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer27 = () => {
  if (totalVi75Loops == 27)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoop18 />
<DelayComponentViLoop19 />
<DelayComponentViLoop20 />
<DelayComponentViLoop21 />
<DelayComponentViLoop22 />
<DelayComponentViLoop23 />
<DelayComponentViLoop24 />
<DelayComponentViLoop25 />
<DelayComponentViLoop26 />
<DelayComponentViLoop27 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer28 = () => {
  if (totalVi75Loops == 28)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoop18 />
<DelayComponentViLoop19 />
<DelayComponentViLoop20 />
<DelayComponentViLoop21 />
<DelayComponentViLoop22 />
<DelayComponentViLoop23 />
<DelayComponentViLoop24 />
<DelayComponentViLoop25 />
<DelayComponentViLoop26 />
<DelayComponentViLoop27 />
<DelayComponentViLoop28 />
<DelayComponentViLoop29 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer29 = () => {
  if (totalVi75Loops == 29)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoop18 />
<DelayComponentViLoop19 />
<DelayComponentViLoop20 />
<DelayComponentViLoop21 />
<DelayComponentViLoop22 />
<DelayComponentViLoop23 />
<DelayComponentViLoop24 />
<DelayComponentViLoop25 />
<DelayComponentViLoop26 />
<DelayComponentViLoop27 />
<DelayComponentViLoop28 />
<DelayComponentViLoop29 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};

const ViTimer30 = () => {
  if (totalVi75Loops == 30)
	return(<Container>
<DelayComponentViLoop />
<DelayComponentViLoop2 />
<DelayComponentViLoop3 />
<DelayComponentViLoop4 />
<DelayComponentViLoop5 />
<DelayComponentViLoop6 />
<DelayComponentViLoop7 />
<DelayComponentViLoop8 />
<DelayComponentViLoop9 />
<DelayComponentViLoop10 />
<DelayComponentViLoop11 />
<DelayComponentViLoop12 />
<DelayComponentViLoop13 />
<DelayComponentViLoop14 />
<DelayComponentViLoop15 />
<DelayComponentViLoop16 />
<DelayComponentViLoop17 />
<DelayComponentViLoop18 />
<DelayComponentViLoop19 />
<DelayComponentViLoop20 />
<DelayComponentViLoop21 />
<DelayComponentViLoop22 />
<DelayComponentViLoop23 />
<DelayComponentViLoop24 />
<DelayComponentViLoop25 />
<DelayComponentViLoop26 />
<DelayComponentViLoop27 />
<DelayComponentViLoop28 />
<DelayComponentViLoop29 />
<DelayComponentViLoopFinal />
<YayBattleEndVi />
</Container>
)
};


const Vi4 = () => {
  if (totalViBackTo100 == 4)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi5 = () => {
  if (totalViBackTo100 == 5)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi6 = () => {
  if (totalViBackTo100 == 6)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi7 = () => {
  if (totalViBackTo100 == 7)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi8 = () => {
  if (totalViBackTo100 == 8)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi9 = () => {
  if (totalViBackTo100 == 9)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi10 = () => {
  if (totalViBackTo100 == 10)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi11 = () => {
  if (totalViBackTo100 == 11)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vi12 = () => {
  if (totalViBackTo100 == 12)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vi13 = () => {
  if (totalViBackTo100 == 13)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc ex sodales.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vi14 = () => {
  if (totalViBackTo100 == 14)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at ex sodales.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vi15 = () => {
  if (totalViBackTo100 == 15)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vi16 = () => {
  if (totalViBackTo100 == 16)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales consequat.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}


const Vi17 = () => {
  if (totalViBackTo100 == 17)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus orci. ')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vi18 = () => {
  if (totalViBackTo100 == 18)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in orci. ')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vi19 = () => {
  if (totalViBackTo100 == 19)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius. ')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vi20 = () => {
  if (totalViBackTo100 == 20)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque. ')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vi21 = () => {
  if (totalViBackTo100 == 21)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus.')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vi22 = () => {
  if (totalViBackTo100 == 22)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus et. ')}}>
Copy {totalViBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vi26 = () => {
  if (totalViHPToLose == 26)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam vel ante quam. Nulla egestas auctor enim non rhoncus. Maecenas feugiat dapibus lacus nec gravida. Quisque dictum.')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi28 = () => {
  if (totalViHPToLose == 28)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam non purus feugiat, gravida dolor eget, porta mi. Aliquam iaculis elit diam. Ut id blandit dui. Nulla et dolor.')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi30 = () => {
  if (totalViHPToLose == 30)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rhoncus euismod lacus ut lobortis. Maecenas tincidunt lacus quis interdum faucibus. Aliquam erat volutpat. Vestibulum semper est in condimentum mattis. Suspendisse.')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi32 = () => {
  if (totalViHPToLose == 32)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec faucibus risus justo, ac consectetur orci maximus nec. Proin placerat, lectus nec tempus cursus, augue nibh eleifend erat, at porttitor nulla arcu in.')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi34 = () => {
  if (totalViHPToLose == 34)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus diam tellus, volutpat vitae dapibus vel, convallis auctor tellus. Cras fringilla tincidunt lorem, quis sagittis odio accumsan at. Sed nec dictum diam. Cras ac pulvinar.')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi36 = () => {
  if (totalViHPToLose == 36)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus mollis egestas ex. Vivamus tempus neque odio, nec scelerisque ipsum vehicula sit amet. Duis nisl dolor, posuere sed ante vel, euismod faucibus nisi. Donec nulla leo, aliquet.')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi38 = () => {
  if (totalViHPToLose == 38)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque feugiat aliquam ipsum ac auctor. Phasellus a nisi auctor, tempus felis eget, porta felis. Maecenas et tempor nisi. Aenean metus arcu, posuere sit amet nunc vel, cursus porttitor nisl.')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi40 = () => {
  if (totalViHPToLose == 40)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus at est et ipsum suscipit lacinia nec sit amet turpis. Vestibulum nec ex nibh. Etiam consequat et justo sit amet commodo. Suspendisse mattis semper arcu eget fermentum. Donec eu nisi elementum.')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi42 = () => {
  if (totalViHPToLose == 42)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ac aliquam nunc. Sed vitae tellus a tellus dictum condimentum. Nunc volutpat feugiat justo. Fusce vulputate ligula nisl, sed ullamcorper libero imperdiet sit amet. In fermentum sed metus nec pellentesque. Duis eget tellus. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi44 = () => {
  if (totalViHPToLose == 44)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus vehicula volutpat ligula eu efficitur. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris mollis et odio eu placerat. Phasellus mollis eleifend orci, eget pulvinar sem viverra eu. Nam turpis. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi46 = () => {
  if (totalViHPToLose == 46)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer aliquam mauris ac dignissim hendrerit. Suspendisse leo nulla, hendrerit ultrices diam interdum, consequat mollis sapien. Donec ac placerat leo. In ante libero, facilisis sit amet quam in, iaculis commodo nisl. Aliquam tincidunt nunc massa, sit amet viverra.')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi48 = () => {
  if (totalViHPToLose == 48)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis eu ligula ac ipsum tempus tristique ac at urna. Phasellus accumsan erat ac dui elementum fringilla. Phasellus sagittis et mi ac malesuada. Nam eleifend mi in velit auctor, vel mollis massa volutpat. Ut tempus lorem diam, a sollicitudin ex.')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi50 = () => {
  if (totalViHPToLose == 50)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam consequat blandit eros, pellentesque vulputate tortor imperdiet et. In hac habitasse platea dictumst. Aenean non dapibus diam, vitae suscipit augue. Phasellus ut aliquam magna, nec efficitur lacus. Pellentesque lacus sapien, vulputate in blandit at, venenatis vestibulum magna. Nullam quis facilisis dui. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi52 = () => {
  if (totalViHPToLose == 52)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eros odio, pellentesque quis tellus at, consectetur lobortis sem. Etiam turpis libero, viverra at malesuada ac, fringilla consectetur orci. Etiam sed convallis magna. Morbi feugiat rutrum metus vitae placerat. Cras fermentum convallis posuere. Vivamus hendrerit neque id pharetra consectetur. Etiam fringilla augue et. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi54 = () => {
  if (totalViHPToLose == 54)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec id posuere est, a ultrices nisi. In porttitor ligula vel arcu dapibus, vel interdum magna ultricies. Aenean odio ante, ultrices vitae fermentum sed, aliquam eu tellus. Vestibulum mattis dignissim sollicitudin. Integer mollis, lorem et convallis elementum, lorem nisi vehicula dolor, congue vulputate metus eros id. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi56 = () => {
  if (totalViHPToLose == 56)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce blandit viverra neque, iaculis blandit urna vulputate et. Etiam eu imperdiet nulla, ut malesuada mi. Nullam ex nisi, fringilla eget orci sed, porta porttitor tellus. Donec nec turpis feugiat, commodo eros in, sodales lacus. Maecenas fermentum lacus posuere mauris placerat tempus. Mauris a lectus tincidunt, aliquet nunc. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi58 = () => {
  if (totalViHPToLose == 58)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam feugiat erat libero, et auctor lorem maximus et. Nam vel massa sed eros luctus finibus nec vitae augue. In pellentesque tortor vel pulvinar efficitur. Aenean non nunc volutpat, semper lacus quis, dignissim erat. Phasellus dignissim, leo et finibus maximus, nunc est dignissim augue, quis placerat urna ligula sit amet. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi60 = () => {
  if (totalViHPToLose == 60)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ut sapien ac lacus porttitor aliquam at at nulla. Vivamus pharetra pulvinar elementum. Nullam imperdiet augue vel eros imperdiet eleifend. Suspendisse rutrum, tortor id volutpat sagittis, elit urna luctus odio, ut congue massa felis eu ligula. Maecenas tempor, urna in eleifend eleifend, eros ante vehicula odio, vitae maximus ipsum sapien sed.')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi62 = () => {
  if (totalViHPToLose == 62)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc viverra finibus sapien, nec aliquam sem ornare elementum. Mauris a ornare nunc. Vestibulum placerat massa sit amet nisl faucibus, in euismod turpis sollicitudin. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean consectetur vel quam dapibus interdum. Maecenas lacinia dolor justo, at vestibulum ex sollicitudin eget. Nunc in velit. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi64 = () => {
  if (totalViHPToLose == 64)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eu elementum odio. Nulla imperdiet sit amet risus nec pharetra. Duis auctor, justo et sodales posuere, risus sapien maximus enim, at convallis lorem ex eu orci. Donec imperdiet dictum ex, semper fermentum diam auctor sit amet. In suscipit nec odio vitae viverra. Nullam vitae hendrerit lectus, at accumsan mauris. Suspendisse facilisis quam eu imperdiet interdum. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi66 = () => {
  if (totalViHPToLose == 66)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec commodo rutrum ultrices. Nullam dapibus nisi ut nisl placerat malesuada. Proin luctus dignissim dui, vitae lacinia velit gravida ac. Proin et nisi ac mi ultricies blandit ac ac sem. Nullam id mattis libero. Sed euismod metus ut odio tincidunt, sed sodales metus blandit. Phasellus aliquam elit in lacinia ornare. Nullam suscipit ipsum ac auctor convallis. Donec tempor. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi68 = () => {
  if (totalViHPToLose == 68)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam ac dolor lobortis ante ornare scelerisque. Ut finibus luctus purus sit amet accumsan. Duis vel suscipit erat, nec molestie enim. Nullam bibendum odio nunc. Vivamus mollis fermentum ex, in dictum eros blandit nec. Sed sollicitudin quis tortor ac pharetra. Sed consectetur, turpis eu eleifend rutrum, nibh urna condimentum leo, eget interdum urna est nec sapien. Interdum et malesuada fames. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi70 = () => {
  if (totalViHPToLose == 70)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse pharetra purus elementum auctor varius. Morbi elementum mi nec iaculis pretium. Cras nec porta turpis. Nullam vehicula urna vitae volutpat sollicitudin. Aliquam erat volutpat. In vehicula ex in augue scelerisque bibendum. Suspendisse cursus neque at mauris feugiat mattis. Ut at congue justo. Phasellus elementum aliquet gravida. Aliquam rhoncus vulputate est eget efficitur. Cras tristique elit non tellus consequat iaculis. Nunc sit. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi72 = () => {
  if (totalViHPToLose == 72)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc sodales, elit sed posuere laoreet, ante mi maximus velit, vel accumsan sem metus vel justo. Curabitur nec tincidunt tellus, at laoreet felis. Fusce eu luctus felis. Morbi varius, turpis eu aliquam auctor, magna ante interdum nulla, quis maximus magna felis nec nisl. Vivamus vitae ullamcorper dolor. Donec feugiat in dolor in maximus. Integer viverra dui sit amet nulla tristique, sit amet suscipit leo. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi74 = () => {
  if (totalViHPToLose == 74)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi quis magna a justo bibendum dictum sit amet sit amet ex. Aenean quis hendrerit urna, ut ullamcorper nisi. Aenean a nunc consectetur, pharetra lectus non, rhoncus sapien. Sed quis nulla gravida, interdum turpis a, faucibus est. Curabitur a odio vitae ex tristique luctus vitae a sem. Nulla congue vel lacus eget varius. Aliquam fermentum nibh quis diam dictum, vel porta justo rhoncus. Morbi at rhoncus. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi76 = () => {
  if (totalViHPToLose == 76)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque nec euismod est. Cras tincidunt tempus blandit. Vestibulum vel tortor sed ligula vestibulum aliquet sit amet vel tellus. Mauris vitae ultricies nibh. Integer eu augue non nulla consectetur cursus. Fusce diam purus, faucibus non interdum sed, varius eget tellus. Suspendisse vehicula justo diam, ac fringilla eros sagittis sit amet. Suspendisse non justo lacinia, tempor libero pulvinar, efficitur arcu. Nunc vitae enim vestibulum massa interdum volutpat sit amet. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi78 = () => {
  if (totalViHPToLose == 78)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec augue arcu, fringilla vitae tempus vel, ultricies commodo turpis. Pellentesque ut risus luctus, accumsan dolor eget, luctus felis. Suspendisse ac egestas nunc. Sed viverra felis nec lectus tempor feugiat. Nunc tincidunt finibus turpis non luctus. Nullam orci nisl, porttitor ut neque in, malesuada porta nisi. Phasellus sollicitudin magna faucibus est lobortis, ornare mollis lacus sodales. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi80 = () => {
  if (totalViHPToLose == 80)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas congue dignissim cursus. Vivamus id nulla ut risus pellentesque semper. Pellentesque lobortis augue eget ultrices molestie. Nunc euismod massa a lectus varius sollicitudin. Sed dictum quis est placerat porta. Ut malesuada feugiat nisi et accumsan. Morbi et pulvinar nunc. Proin fringilla condimentum metus, id blandit mauris egestas in. Fusce tincidunt, nisi eget ornare fermentum, elit erat dictum nulla, tristique iaculis leo massa in orci. Ut aliquam efficitur lacus, in commodo nibh.')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi82 = () => {
  if (totalViHPToLose == 82)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec auctor felis ligula, sit amet pulvinar arcu porta quis. Mauris ultrices tristique neque, id ullamcorper nisi pharetra sit amet. Nam commodo leo sit amet sollicitudin vehicula. Morbi congue tellus risus, eu dapibus ex consequat id. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Pellentesque vestibulum arcu diam, non ornare dui volutpat sollicitudin. Nunc vitae massa in leo volutpat fermentum nec eu lectus. Sed sit amet finibus dui, sed. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi84 = () => {
  if (totalViHPToLose == 84)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus dictum velit vitae nunc ultrices, non sagittis eros euismod. Donec mattis leo id tempor tristique. In dignissim tempus augue, et posuere eros tempus sed. Suspendisse in ex felis. Ut faucibus blandit imperdiet. Sed convallis quam quis augue viverra rutrum. Ut sapien orci, scelerisque blandit nulla sit amet, malesuada sollicitudin justo. Proin et nulla consequat, fermentum eros non, rutrum orci. Suspendisse porttitor viverra tortor sed consequat. Etiam et augue ac metus condimentum finibus. Nunc vel dictum. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi86 = () => {
  if (totalViHPToLose == 86)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. In a rutrum lorem, vel congue libero. Maecenas egestas tincidunt mauris, ut interdum turpis eleifend id. Mauris consectetur metus id eros consectetur gravida. Vivamus eget velit ipsum. Nunc porta tortor eu est imperdiet fringilla. Curabitur vel nibh ac odio imperdiet ultricies. Donec tempus ante non libero euismod dapibus. Aenean faucibus consectetur bibendum. Morbi sollicitudin, enim id congue laoreet, elit dui volutpat metus, non egestas ante tortor sit amet ex. Mauris sagittis pulvinar finibus. Integer non vehicula lectus, ut. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi88 = () => {
  if (totalViHPToLose == 88)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla arcu odio, vulputate eu tortor ac, convallis convallis ipsum. Proin imperdiet luctus odio id vehicula. Sed congue posuere tristique. Vivamus accumsan luctus tellus. Mauris porttitor leo et metus convallis elementum. Suspendisse in urna pharetra, eleifend arcu et, porttitor lectus. Vivamus eros tellus, volutpat in est accumsan, bibendum congue est. Phasellus dignissim consequat sem, in rutrum lorem interdum nec. Phasellus facilisis lectus eu eros condimentum, vel luctus justo eleifend. Fusce venenatis ipsum ut ante tincidunt commodo. Suspendisse potenti. Sed volutpat. .')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vi90 = () => {
  if (totalViHPToLose == 90)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam eu dignissim neque. Quisque a commodo diam. Cras in accumsan nisl. Maecenas vitae scelerisque arcu, at pretium ipsum. Nam tincidunt ullamcorper congue. Donec scelerisque, augue nec hendrerit vehicula, erat dui pellentesque odio, et viverra dolor felis nec sem. Praesent a lorem vel tellus feugiat ultricies. Etiam lacinia, sapien quis vulputate tincidunt, nisi lacus ornare augue, elementum efficitur elit diam in nibh. Suspendisse ullamcorper mollis purus, at tincidunt odio porta rhoncus. Quisque efficitur nisl nibh, id auctor libero viverra ac. In hac. ')}}>
Copy {totalViHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

  //VoidWignow - min - it goes in its boxes precious//

  const VoidWignowTimerMin = () => {
    if (totalVoidWignowLoops == 1)
      return(<Container>
  <DelayComponentVoidWignowMinLoop />
  <DelayComponentVoidWignowMinLoopFinal />
  <YayBattleEndVoidWignowMin />
  </Container>
  )
  };

  const VoidWignowTimerMin2 = () => {
    if (totalVoidWignowLoops == 2)
      return(<Container>
  <DelayComponentVoidWignowMinLoop />
  <DelayComponentVoidWignowMinLoop2 />
  <DelayComponentVoidWignowMinLoopFinal />
  <YayBattleEndVoidWignowMin />
  </Container>
  )
  };

  const VoidWignowTimerMin3 = () => {
    if (totalVoidWignowLoops == 3)
      return(<Container>
  <DelayComponentVoidWignowMinLoop />
  <DelayComponentVoidWignowMinLoop2 />
  <DelayComponentVoidWignowMinLoop3 />
  <DelayComponentVoidWignowMinLoopFinal />
  <YayBattleEndVoidWignowMin />
  </Container>
  )
  };




//void wignow - it goes in its boxes precious//

const VoidWignowTimer4 = () => {
  if (totalVoidWignow75Loops == 4)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer5 = () => {
  if (totalVoidWignow75Loops == 5)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow /></Container>
)
};

const VoidWignowTimer6 = () => {
  if (totalVoidWignow75Loops == 6)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};


const VoidWignowTimer7 = () => {
  if (totalVoidWignow75Loops == 7)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};


const VoidWignowTimer8 = () => {
  if (totalVoidWignow75Loops == 8)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer9 = () => {
  if (totalVoidWignow75Loops == 9)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer10 = () => {
  if (totalVoidWignow75Loops == 10)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55Loop10 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer11 = () => {
  if (totalVoidWignow75Loops == 11)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55Loop10 />
<DelayComponent55Loop11 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer12 = () => {
  if (totalVoidWignow75Loops == 12)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55Loop10 />
<DelayComponent55Loop11 />
<DelayComponent55Loop12 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer13 = () => {
  if (totalVoidWignow75Loops == 13)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55Loop10 />
<DelayComponent55Loop11 />
<DelayComponent55Loop12 />
<DelayComponent55Loop13 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer14 = () => {
  if (totalVoidWignow75Loops == 14)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55Loop10 />
<DelayComponent55Loop11 />
<DelayComponent55Loop12 />
<DelayComponent55Loop13 />
<DelayComponent55Loop14 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer15 = () => {
  if (totalVoidWignow75Loops == 15)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55Loop10 />
<DelayComponent55Loop11 />
<DelayComponent55Loop12 />
<DelayComponent55Loop13 />
<DelayComponent55Loop14 />
<DelayComponent55Loop15 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer16 = () => {
  if (totalVoidWignow75Loops == 16)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55Loop10 />
<DelayComponent55Loop11 />
<DelayComponent55Loop12 />
<DelayComponent55Loop13 />
<DelayComponent55Loop14 />
<DelayComponent55Loop15 />
<DelayComponent55Loop16 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer17 = () => {
  if (totalVoidWignow75Loops == 17)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55Loop10 />
<DelayComponent55Loop11 />
<DelayComponent55Loop12 />
<DelayComponent55Loop13 />
<DelayComponent55Loop14 />
<DelayComponent55Loop15 />
<DelayComponent55Loop16 />
<DelayComponent55Loop17 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer18 = () => {
  if (totalVoidWignow75Loops == 18)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55Loop10 />
<DelayComponent55Loop11 />
<DelayComponent55Loop12 />
<DelayComponent55Loop13 />
<DelayComponent55Loop14 />
<DelayComponent55Loop15 />
<DelayComponent55Loop16 />
<DelayComponent55Loop17 />
<DelayComponent55Loop18 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer19 = () => {
  if (totalVoidWignow75Loops == 19)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55Loop10 />
<DelayComponent55Loop11 />
<DelayComponent55Loop12 />
<DelayComponent55Loop13 />
<DelayComponent55Loop14 />
<DelayComponent55Loop15 />
<DelayComponent55Loop16 />
<DelayComponent55Loop17 />
<DelayComponent55Loop18 />
<DelayComponent55Loop19 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer20 = () => {
  if (totalVoidWignow75Loops == 20)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55Loop10 />
<DelayComponent55Loop11 />
<DelayComponent55Loop12 />
<DelayComponent55Loop13 />
<DelayComponent55Loop14 />
<DelayComponent55Loop15 />
<DelayComponent55Loop16 />
<DelayComponent55Loop17 />
<DelayComponent55Loop18 />
<DelayComponent55Loop19 />
<DelayComponent55Loop20 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer21 = () => {
  if (totalVoidWignow75Loops == 21)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55Loop10 />
<DelayComponent55Loop11 />
<DelayComponent55Loop12 />
<DelayComponent55Loop13 />
<DelayComponent55Loop14 />
<DelayComponent55Loop15 />
<DelayComponent55Loop16 />
<DelayComponent55Loop17 />
<DelayComponent55Loop18 />
<DelayComponent55Loop19 />
<DelayComponent55Loop20 />
<DelayComponent55Loop21 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignowTimer22 = () => {
  if (totalVoidWignow75Loops == 22)
    return(<Container>
<DelayComponent55Loop />
<DelayComponent55Loop2 />
<DelayComponent55Loop3 />
<DelayComponent55Loop4 />
<DelayComponent55Loop5 />
<DelayComponent55Loop6 />
<DelayComponent55Loop7 />
<DelayComponent55Loop8 />
<DelayComponent55Loop9 />
<DelayComponent55Loop10 />
<DelayComponent55Loop11 />
<DelayComponent55Loop12 />
<DelayComponent55Loop13 />
<DelayComponent55Loop14 />
<DelayComponent55Loop15 />
<DelayComponent55Loop16 />
<DelayComponent55Loop17 />
<DelayComponent55Loop18 />
<DelayComponent55Loop19 />
<DelayComponent55Loop20 />
<DelayComponent55Loop21 />
<DelayComponent55Loop22 />
<DelayComponent55LoopFinal />
<YayBattleEndVoidWignow />
</Container>
)
};

const VoidWignow4 = () => {
  if (totalVoidWignowBackTo100 == 4)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow5 = () => {
  if (totalVoidWignowBackTo100 == 5)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow6 = () => {
  if (totalVoidWignowBackTo100 == 6)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow7 = () => {
  if (totalVoidWignowBackTo100 == 7)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow8 = () => {
  if (totalVoidWignowBackTo100 == 8)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow9 = () => {
  if (totalVoidWignowBackTo100 == 9)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow10 = () => {
  if (totalVoidWignowBackTo100 == 10)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow11 = () => {
  if (totalVoidWignowBackTo100 == 11)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VoidWignow12 = () => {
  if (totalVoidWignowBackTo100 == 12)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VoidWignow13 = () => {
  if (totalVoidWignowBackTo100 == 13)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc ex sodales.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VoidWignow14 = () => {
  if (totalVoidWignowBackTo100 == 14)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at ex sodales.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VoidWignow15 = () => {
  if (totalVoidWignowBackTo100 == 15)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VoidWignow16 = () => {
  if (totalVoidWignowBackTo100 == 16)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales consequat.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}


const VoidWignow17 = () => {
  if (totalVoidWignowBackTo100 == 17)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus orci. ')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VoidWignow18 = () => {
  if (totalVoidWignowBackTo100 == 18)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in orci. ')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VoidWignow19 = () => {
  if (totalVoidWignowBackTo100 == 19)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius. ')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VoidWignow20 = () => {
  if (totalVoidWignowBackTo100 == 20)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque. ')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VoidWignow21 = () => {
  if (totalVoidWignowBackTo100 == 21)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus.')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VoidWignow22 = () => {
  if (totalVoidWignowBackTo100 == 22)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus et. ')}}>
Copy {totalVoidWignowBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}



const VoidWignow26 = () => {
  if (totalVoidWignowHPToLose == 26)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam vel ante quam. Nulla egestas auctor enim non rhoncus. Maecenas feugiat dapibus lacus nec graVoidWignowda. Quisque dictum.')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow28 = () => {
  if (totalVoidWignowHPToLose == 28)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam non purus feugiat, graVoidWignowda dolor eget, porta mi. Aliquam iaculis elit diam. Ut id blandit dui. Nulla et dolor.')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow30 = () => {
  if (totalVoidWignowHPToLose == 30)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rhoncus euismod lacus ut lobortis. Maecenas tincidunt lacus quis interdum faucibus. Aliquam erat volutpat. Vestibulum semper est in condimentum mattis. Suspendisse.')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow32 = () => {
  if (totalVoidWignowHPToLose == 32)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec faucibus risus justo, ac consectetur orci maximus nec. Proin placerat, lectus nec tempus cursus, augue nibh eleifend erat, at porttitor nulla arcu in.')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow34 = () => {
  if (totalVoidWignowHPToLose == 34)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus diam tellus, volutpat VoidWignowtae dapibus vel, convallis auctor tellus. Cras fringilla tincidunt lorem, quis sagittis odio accumsan at. Sed nec dictum diam. Cras ac pulVoidWignownar.')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow36 = () => {
  if (totalVoidWignowHPToLose == 36)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus mollis egestas ex. VoidWignowvamus tempus neque odio, nec scelerisque ipsum vehicula sit amet. Duis nisl dolor, posuere sed ante vel, euismod faucibus nisi. Donec nulla leo, aliquet.')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow38 = () => {
  if (totalVoidWignowHPToLose == 38)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque feugiat aliquam ipsum ac auctor. Phasellus a nisi auctor, tempus felis eget, porta felis. Maecenas et tempor nisi. Aenean metus arcu, posuere sit amet nunc vel, cursus porttitor nisl.')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow40 = () => {
  if (totalVoidWignowHPToLose == 40)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. VoidWignowvamus at est et ipsum suscipit lacinia nec sit amet turpis. Vestibulum nec ex nibh. Etiam consequat et justo sit amet commodo. Suspendisse mattis semper arcu eget fermentum. Donec eu nisi elementum.')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow42 = () => {
  if (totalVoidWignowHPToLose == 42)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ac aliquam nunc. Sed VoidWignowtae tellus a tellus dictum condimentum. Nunc volutpat feugiat justo. Fusce vulputate ligula nisl, sed ullamcorper libero imperdiet sit amet. In fermentum sed metus nec pellentesque. Duis eget tellus. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow44 = () => {
  if (totalVoidWignowHPToLose == 44)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus vehicula volutpat ligula eu efficitur. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris mollis et odio eu placerat. Phasellus mollis eleifend orci, eget pulVoidWignownar sem VoidWignowverra eu. Nam turpis. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow46 = () => {
  if (totalVoidWignowHPToLose == 46)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer aliquam mauris ac dignissim hendrerit. Suspendisse leo nulla, hendrerit ultrices diam interdum, consequat mollis sapien. Donec ac placerat leo. In ante libero, facilisis sit amet quam in, iaculis commodo nisl. Aliquam tincidunt nunc massa, sit amet VoidWignowverra.')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow48 = () => {
  if (totalVoidWignowHPToLose == 48)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis eu ligula ac ipsum tempus tristique ac at urna. Phasellus accumsan erat ac dui elementum fringilla. Phasellus sagittis et mi ac malesuada. Nam eleifend mi in velit auctor, vel mollis massa volutpat. Ut tempus lorem diam, a sollicitudin ex.')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow50 = () => {
  if (totalVoidWignowHPToLose == 50)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam consequat blandit eros, pellentesque vulputate tortor imperdiet et. In hac habitasse platea dictumst. Aenean non dapibus diam, VoidWignowtae suscipit augue. Phasellus ut aliquam magna, nec efficitur lacus. Pellentesque lacus sapien, vulputate in blandit at, venenatis vestibulum magna. Nullam quis facilisis dui. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow52 = () => {
  if (totalVoidWignowHPToLose == 52)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eros odio, pellentesque quis tellus at, consectetur lobortis sem. Etiam turpis libero, VoidWignowverra at malesuada ac, fringilla consectetur orci. Etiam sed convallis magna. Morbi feugiat rutrum metus VoidWignowtae placerat. Cras fermentum convallis posuere. VoidWignowvamus hendrerit neque id pharetra consectetur. Etiam fringilla augue et. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow54 = () => {
  if (totalVoidWignowHPToLose == 54)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec id posuere est, a ultrices nisi. In porttitor ligula vel arcu dapibus, vel interdum magna ultricies. Aenean odio ante, ultrices VoidWignowtae fermentum sed, aliquam eu tellus. Vestibulum mattis dignissim sollicitudin. Integer mollis, lorem et convallis elementum, lorem nisi vehicula dolor, congue vulputate metus eros id. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow56 = () => {
  if (totalVoidWignowHPToLose == 56)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce blandit VoidWignowverra neque, iaculis blandit urna vulputate et. Etiam eu imperdiet nulla, ut malesuada mi. Nullam ex nisi, fringilla eget orci sed, porta porttitor tellus. Donec nec turpis feugiat, commodo eros in, sodales lacus. Maecenas fermentum lacus posuere mauris placerat tempus. Mauris a lectus tincidunt, aliquet nunc. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow58 = () => {
  if (totalVoidWignowHPToLose == 58)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam feugiat erat libero, et auctor lorem maximus et. Nam vel massa sed eros luctus finibus nec VoidWignowtae augue. In pellentesque tortor vel pulVoidWignownar efficitur. Aenean non nunc volutpat, semper lacus quis, dignissim erat. Phasellus dignissim, leo et finibus maximus, nunc est dignissim augue, quis placerat urna ligula sit amet. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow60 = () => {
  if (totalVoidWignowHPToLose == 60)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ut sapien ac lacus porttitor aliquam at at nulla. VoidWignowvamus pharetra pulVoidWignownar elementum. Nullam imperdiet augue vel eros imperdiet eleifend. Suspendisse rutrum, tortor id volutpat sagittis, elit urna luctus odio, ut congue massa felis eu ligula. Maecenas tempor, urna in eleifend eleifend, eros ante vehicula odio, VoidWignowtae maximus ipsum sapien sed.')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow62 = () => {
  if (totalVoidWignowHPToLose == 62)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc VoidWignowverra finibus sapien, nec aliquam sem ornare elementum. Mauris a ornare nunc. Vestibulum placerat massa sit amet nisl faucibus, in euismod turpis sollicitudin. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean consectetur vel quam dapibus interdum. Maecenas lacinia dolor justo, at vestibulum ex sollicitudin eget. Nunc in velit. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow64 = () => {
  if (totalVoidWignowHPToLose == 64)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eu elementum odio. Nulla imperdiet sit amet risus nec pharetra. Duis auctor, justo et sodales posuere, risus sapien maximus enim, at convallis lorem ex eu orci. Donec imperdiet dictum ex, semper fermentum diam auctor sit amet. In suscipit nec odio VoidWignowtae VoidWignowverra. Nullam VoidWignowtae hendrerit lectus, at accumsan mauris. Suspendisse facilisis quam eu imperdiet interdum. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow66 = () => {
  if (totalVoidWignowHPToLose == 66)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec commodo rutrum ultrices. Nullam dapibus nisi ut nisl placerat malesuada. Proin luctus dignissim dui, VoidWignowtae lacinia velit graVoidWignowda ac. Proin et nisi ac mi ultricies blandit ac ac sem. Nullam id mattis libero. Sed euismod metus ut odio tincidunt, sed sodales metus blandit. Phasellus aliquam elit in lacinia ornare. Nullam suscipit ipsum ac auctor convallis. Donec tempor. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow68 = () => {
  if (totalVoidWignowHPToLose == 68)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam ac dolor lobortis ante ornare scelerisque. Ut finibus luctus purus sit amet accumsan. Duis vel suscipit erat, nec molestie enim. Nullam bibendum odio nunc. VoidWignowvamus mollis fermentum ex, in dictum eros blandit nec. Sed sollicitudin quis tortor ac pharetra. Sed consectetur, turpis eu eleifend rutrum, nibh urna condimentum leo, eget interdum urna est nec sapien. Interdum et malesuada fames. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow70 = () => {
  if (totalVoidWignowHPToLose == 70)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse pharetra purus elementum auctor varius. Morbi elementum mi nec iaculis pretium. Cras nec porta turpis. Nullam vehicula urna VoidWignowtae volutpat sollicitudin. Aliquam erat volutpat. In vehicula ex in augue scelerisque bibendum. Suspendisse cursus neque at mauris feugiat mattis. Ut at congue justo. Phasellus elementum aliquet graVoidWignowda. Aliquam rhoncus vulputate est eget efficitur. Cras tristique elit non tellus consequat iaculis. Nunc sit. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow72 = () => {
  if (totalVoidWignowHPToLose == 72)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc sodales, elit sed posuere laoreet, ante mi maximus velit, vel accumsan sem metus vel justo. Curabitur nec tincidunt tellus, at laoreet felis. Fusce eu luctus felis. Morbi varius, turpis eu aliquam auctor, magna ante interdum nulla, quis maximus magna felis nec nisl. VoidWignowvamus VoidWignowtae ullamcorper dolor. Donec feugiat in dolor in maximus. Integer VoidWignowverra dui sit amet nulla tristique, sit amet suscipit leo. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow74 = () => {
  if (totalVoidWignowHPToLose == 74)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi quis magna a justo bibendum dictum sit amet sit amet ex. Aenean quis hendrerit urna, ut ullamcorper nisi. Aenean a nunc consectetur, pharetra lectus non, rhoncus sapien. Sed quis nulla graVoidWignowda, interdum turpis a, faucibus est. Curabitur a odio VoidWignowtae ex tristique luctus VoidWignowtae a sem. Nulla congue vel lacus eget varius. Aliquam fermentum nibh quis diam dictum, vel porta justo rhoncus. Morbi at rhoncus. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow76 = () => {
  if (totalVoidWignowHPToLose == 76)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque nec euismod est. Cras tincidunt tempus blandit. Vestibulum vel tortor sed ligula vestibulum aliquet sit amet vel tellus. Mauris VoidWignowtae ultricies nibh. Integer eu augue non nulla consectetur cursus. Fusce diam purus, faucibus non interdum sed, varius eget tellus. Suspendisse vehicula justo diam, ac fringilla eros sagittis sit amet. Suspendisse non justo lacinia, tempor libero pulVoidWignownar, efficitur arcu. Nunc VoidWignowtae enim vestibulum massa interdum volutpat sit amet. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow78 = () => {
  if (totalVoidWignowHPToLose == 78)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec augue arcu, fringilla VoidWignowtae tempus vel, ultricies commodo turpis. Pellentesque ut risus luctus, accumsan dolor eget, luctus felis. Suspendisse ac egestas nunc. Sed VoidWignowverra felis nec lectus tempor feugiat. Nunc tincidunt finibus turpis non luctus. Nullam orci nisl, porttitor ut neque in, malesuada porta nisi. Phasellus sollicitudin magna faucibus est lobortis, ornare mollis lacus sodales. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow80 = () => {
  if (totalVoidWignowHPToLose == 80)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas congue dignissim cursus. VoidWignowvamus id nulla ut risus pellentesque semper. Pellentesque lobortis augue eget ultrices molestie. Nunc euismod massa a lectus varius sollicitudin. Sed dictum quis est placerat porta. Ut malesuada feugiat nisi et accumsan. Morbi et pulVoidWignownar nunc. Proin fringilla condimentum metus, id blandit mauris egestas in. Fusce tincidunt, nisi eget ornare fermentum, elit erat dictum nulla, tristique iaculis leo massa in orci. Ut aliquam efficitur lacus, in commodo nibh.')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow82 = () => {
  if (totalVoidWignowHPToLose == 82)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec auctor felis ligula, sit amet pulVoidWignownar arcu porta quis. Mauris ultrices tristique neque, id ullamcorper nisi pharetra sit amet. Nam commodo leo sit amet sollicitudin vehicula. Morbi congue tellus risus, eu dapibus ex consequat id. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Pellentesque vestibulum arcu diam, non ornare dui volutpat sollicitudin. Nunc VoidWignowtae massa in leo volutpat fermentum nec eu lectus. Sed sit amet finibus dui, sed. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow84 = () => {
  if (totalVoidWignowHPToLose == 84)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus dictum velit VoidWignowtae nunc ultrices, non sagittis eros euismod. Donec mattis leo id tempor tristique. In dignissim tempus augue, et posuere eros tempus sed. Suspendisse in ex felis. Ut faucibus blandit imperdiet. Sed convallis quam quis augue VoidWignowverra rutrum. Ut sapien orci, scelerisque blandit nulla sit amet, malesuada sollicitudin justo. Proin et nulla consequat, fermentum eros non, rutrum orci. Suspendisse porttitor VoidWignowverra tortor sed consequat. Etiam et augue ac metus condimentum finibus. Nunc vel dictum. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow86 = () => {
  if (totalVoidWignowHPToLose == 86)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. In a rutrum lorem, vel congue libero. Maecenas egestas tincidunt mauris, ut interdum turpis eleifend id. Mauris consectetur metus id eros consectetur graVoidWignowda. VoidWignowvamus eget velit ipsum. Nunc porta tortor eu est imperdiet fringilla. Curabitur vel nibh ac odio imperdiet ultricies. Donec tempus ante non libero euismod dapibus. Aenean faucibus consectetur bibendum. Morbi sollicitudin, enim id congue laoreet, elit dui volutpat metus, non egestas ante tortor sit amet ex. Mauris sagittis pulVoidWignownar finibus. Integer non vehicula lectus, ut. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow88 = () => {
  if (totalVoidWignowHPToLose == 88)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla arcu odio, vulputate eu tortor ac, convallis convallis ipsum. Proin imperdiet luctus odio id vehicula. Sed congue posuere tristique. VoidWignowvamus accumsan luctus tellus. Mauris porttitor leo et metus convallis elementum. Suspendisse in urna pharetra, eleifend arcu et, porttitor lectus. VoidWignowvamus eros tellus, volutpat in est accumsan, bibendum congue est. Phasellus dignissim consequat sem, in rutrum lorem interdum nec. Phasellus facilisis lectus eu eros condimentum, vel luctus justo eleifend. Fusce venenatis ipsum ut ante tincidunt commodo. Suspendisse potenti. Sed volutpat. .')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VoidWignow90 = () => {
  if (totalVoidWignowHPToLose == 90)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam eu dignissim neque. Quisque a commodo diam. Cras in accumsan nisl. Maecenas VoidWignowtae scelerisque arcu, at pretium ipsum. Nam tincidunt ullamcorper congue. Donec scelerisque, augue nec hendrerit vehicula, erat dui pellentesque odio, et VoidWignowverra dolor felis nec sem. Praesent a lorem vel tellus feugiat ultricies. Etiam lacinia, sapien quis vulputate tincidunt, nisi lacus ornare augue, elementum efficitur elit diam in nibh. Suspendisse ullamcorper mollis purus, at tincidunt odio porta rhoncus. Quisque efficitur nisl nibh, id auctor libero VoidWignowverra ac. In hac. ')}}>
Copy {totalVoidWignowHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

//VanspiProfB - min - timers//

const DelayComponentVanspiProfBMinLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' mt='25px' fontSize='md'>
      	<b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentVanspiProfBMinLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTimeMin2_5SecPerHP10MinTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalVanspiMins10} minutes and {totalVanspiSecs10} seconds </Text>)
  return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'>
      	<b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
  
  const DelayComponentVanspiProfBMinLoop3 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP10MinTimeVal3)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 3: </b>{totalVanspiMins10} minutes and {totalVanspiSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP10MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentVanspiProfBMinLoop4 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP10MinTimeVal4)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 4: </b>{totalVanspiMins10} minutes and {totalVanspiSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP10MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentVanspiProfBMinLoop5 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP10MinTimeVal5)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 5: </b>{totalVanspiMins10} minutes and {totalVanspiSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP10MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentVanspiProfBMinLoop6 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP10MinTimeVal6)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 6: </b>{totalVanspiMins10} minutes and {totalVanspiSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP10MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentVanspiProfBMinLoop7 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP10MinTimeVal7)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 7: </b>{totalVanspiMins10} minutes and {totalVanspiSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP10MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };


  const DelayComponentVanspiProfBMinLoop8 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP10MinTimeVal8)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 8: </b>{totalVanspiMins10} minutes and {totalVanspiSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP10MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentVanspiProfBMinLoop9 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP10MinTimeVal9)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 9: </b>{totalVanspiMins10} minutes and {totalVanspiSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP10MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
    
  const DelayComponentVanspiProfBMinLoopFinal = () => {
      const [show, setShow] = React.useState(false)
    
      React.useEffect(() => {
        const timeout = setTimeout(() => {
          setShow(true)
        }, totalWhenToStartFinalVanspiProfBLoopMin)
        return () => clearTimeout(timeout)
      }, [show])
      if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
        <b>Final Loop: </b>{totalVanspiFinalMins} minutes and {totalVanspiFinalSecs} seconds </Text>)
      return (   <Timer initialTime={totalFinalLoopSecsVanspiProfBMin}
      direction="backward"
          timeToUpdate={10}>
        {({ start, resume, pause, stop, reset, timerState }) => (
          <React.Fragment>
            <div>
            <Text mb='8px' fontSize='md'>
              <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
            </div>
          </React.Fragment>
        )}
      </Timer>
    )
    };

//VanspiProfB - timers//

const DelayComponentVanspiProfBLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, 0)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' mt='25px' fontSize='md'>
 		 <b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};


const DelayComponentVanspiProfBLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal2)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 2: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'>
 		 <b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop3 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal3)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 3: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop4 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal4)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 4: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 4: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop5 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal5)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 5: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop6 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal6)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 6: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop7 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal7)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 7: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop8 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal8)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 8: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentVanspiProfBLoop9 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal9)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 9: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentVanspiProfBLoop10 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal10)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 10: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 10: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentVanspiProfBLoop11 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal11)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 11: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 11: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentVanspiProfBLoop12 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal12)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 12: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 12: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentVanspiProfBLoop13 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal13)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 13: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 13: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentVanspiProfBLoop14 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal14)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 14: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 14: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};
const DelayComponentVanspiProfBLoop15 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal15)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 15: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 15: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop16 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal16)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 16: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 16: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop17 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal17)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 17: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 17: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop18 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal18)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 18: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 18: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop19 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal19)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 19: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 19: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop20 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal20)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 20: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 20: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop21 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal21)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 21: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 21: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop22 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal22)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 22: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 22: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop23 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal23)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 23: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 23: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop24 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal24)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 24: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 24: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop25 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal25)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 25: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 25: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop26 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal26)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 26: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 26: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop27 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal27)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 27: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 27: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop28 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal28)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 28: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 28: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop29 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal29)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 33: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 33: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop30 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal30)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 30: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 30: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop31 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal31)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 31: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 31: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop32 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal32)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 32: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 32: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop33 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal33)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 33: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 33: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop34 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal34)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 34: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 34: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop35 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal35)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 35: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 35: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop36 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal36)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 36: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 36: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop37 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal37)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 37: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 37: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop38 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal38)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 38: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 38: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop39 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal39)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 39: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 39: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop40 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal40)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 40: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 40: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop41 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal41)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 41: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 41: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop42 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal42)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 42: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 42: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop43 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal43)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 43: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 43: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop44 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal44)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 44: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 44: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop45 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal45)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 45: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 45: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop46 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal46)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 46: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 46: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop47 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal47)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 47: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 47: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop48 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal48)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 48: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 48: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop49 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal49)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 49: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 49: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop50 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal50)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 50: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 50: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop51 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal51)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 51: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 51: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop52 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal52)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 52: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 52: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop53 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal53)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 53: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 53: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop54 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal54)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 54: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 54: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop55 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal55)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 55: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 55: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop56 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal56)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 56: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 56: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop57 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal57)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 57: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 57: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop58 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal58)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 58: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 58: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop59 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal59)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 59: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 59: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop60 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTime2_5SecPerHP10MinTimeVal60)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 60: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP10MinTimeVal2}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'><b>Loop 60: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

const DelayComponentVanspiProfBLoop4x = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, (((Math.ceil((600/5)*.9))*5)*1000))
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (
    <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
    }} >
        <Text mt='15px' pt='10px'  fontSize='md' style={{color: '#7a7a7a'}}>
        At ~1 min remaining:<br/>
  the timer will flash 1x, then show the 4x reward multiplier</Text>
      </Container>
    )
return (   <Timer initialTime={totalFinalLoopSecsVoidWignow}
direction="backward"
    timeToUpdate={10}>
  {({ start, resume, pause, stop, reset, timerState }) => (
    <React.Fragment>
      <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
    }} >
        <Text mt='15px' pt='25px' fontSize='md'><span>When you see the </span><span style={{color: '#B794F4'}}><b>x4 multiplier</b></span><span>, <b><i>type</i></b> at least 1 word</span></Text>
      </Container>
    </React.Fragment>
  )}
</Timer>
)
};

const DelayComponentVanspiProfBLoopFinal = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalWhenToStartFinalVanspiProfBLoop)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Final Loop: </b>0 minutes and {totalLeftoverVanspiProfBTime} seconds </Text>)
  return (   <Timer initialTime={totalFinalLoopSecsVanspiProfB}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
   	 <div>
   	 <Text mb='8px' fontSize='md'>
 		 <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
   	 </div>
      </React.Fragment>
    )}
  </Timer>
)
};

  //VanspiProfB - min - it goes in its boxes precious//

  const VanspiProfBTimerMin = () => {
    if (totalVanspiLoops == 1)
      return(<Container>
  <DelayComponentVanspiProfBMinLoop />
  <DelayComponentVanspiProfBMinLoopFinal />
  <YayBattleEndVanspiProfBMin />
  </Container>
  )
  };

  const VanspiProfBTimerMin2 = () => {
    if (totalVanspiLoops == 2)
      return(<Container>
  <DelayComponentVanspiProfBMinLoop />
  <DelayComponentVanspiProfBMinLoop2 />
  <DelayComponentVanspiProfBMinLoopFinal />
  <YayBattleEndVanspiProfBMin />
  </Container>
  )
  };

  const VanspiProfBTimerMin3 = () => {
    if (totalVanspiLoops == 3)
      return(<Container>
  <DelayComponentVanspiProfBMinLoop />
  <DelayComponentVanspiProfBMinLoop2 />
  <DelayComponentVanspiProfBMinLoop3 />
  <DelayComponentVanspiProfBMinLoopFinal />
  <YayBattleEndVanspiProfBMin />
  </Container>
  )
  };

  const VanspiProfBTimerMin4 = () => {
    if (totalVanspiLoops == 4)
      return(<Container>
  <DelayComponentVanspiProfBMinLoop />
  <DelayComponentVanspiProfBMinLoop2 />
  <DelayComponentVanspiProfBMinLoop3 />
  <DelayComponentVanspiProfBMinLoop4 />
  <DelayComponentVanspiProfBMinLoopFinal />
  <YayBattleEndVanspiProfBMin />
  </Container>
  )
  };

  const VanspiProfBTimerMin5 = () => {
    if (totalVanspiLoops == 5)
      return(<Container>
  <DelayComponentVanspiProfBMinLoop />
  <DelayComponentVanspiProfBMinLoop2 />
  <DelayComponentVanspiProfBMinLoop3 />
  <DelayComponentVanspiProfBMinLoop4 />
  <DelayComponentVanspiProfBMinLoop5 />
  <DelayComponentVanspiProfBMinLoopFinal />
  <YayBattleEndVanspiProfBMin />
  </Container>
  )
  };

  const VanspiProfBTimerMin6 = () => {
    if (totalVanspiLoops == 6)
      return(<Container>
  <DelayComponentVanspiProfBMinLoop />
  <DelayComponentVanspiProfBMinLoop2 />
  <DelayComponentVanspiProfBMinLoop3 />
  <DelayComponentVanspiProfBMinLoop4 />
  <DelayComponentVanspiProfBMinLoop5 />
  <DelayComponentVanspiProfBMinLoop6 />
  <DelayComponentVanspiProfBMinLoopFinal />
  <YayBattleEndVanspiProfBMin />
  </Container>
  )
  };

  const VanspiProfBTimerMin7 = () => {
    if (totalVanspiLoops == 7)
      return(<Container>
  <DelayComponentVanspiProfBMinLoop />
  <DelayComponentVanspiProfBMinLoop2 />
  <DelayComponentVanspiProfBMinLoop3 />
  <DelayComponentVanspiProfBMinLoop4 />
  <DelayComponentVanspiProfBMinLoop5 />
  <DelayComponentVanspiProfBMinLoop6 />
  <DelayComponentVanspiProfBMinLoop7 />
  <DelayComponentVanspiProfBMinLoopFinal />
  <YayBattleEndVanspiProfBMin />
  </Container>
  )
  };

  const VanspiProfBTimerMin8 = () => {
    if (totalVanspiLoops == 8)
      return(<Container>
  <DelayComponentVanspiProfBMinLoop />
  <DelayComponentVanspiProfBMinLoop2 />
  <DelayComponentVanspiProfBMinLoop3 />
  <DelayComponentVanspiProfBMinLoop4 />
  <DelayComponentVanspiProfBMinLoop5 />
  <DelayComponentVanspiProfBMinLoop6 />
  <DelayComponentVanspiProfBMinLoop7 />
  <DelayComponentVanspiProfBMinLoop8 />
  <DelayComponentVanspiProfBMinLoopFinal />
  <YayBattleEndVanspiProfBMin />
  </Container>
  )
  };

  const VanspiProfBTimerMin9 = () => {
    if (totalVanspiLoops == 9)
      return(<Container>
  <DelayComponentVanspiProfBMinLoop />
  <DelayComponentVanspiProfBMinLoop2 />
  <DelayComponentVanspiProfBMinLoop3 />
  <DelayComponentVanspiProfBMinLoop4 />
  <DelayComponentVanspiProfBMinLoop5 />
  <DelayComponentVanspiProfBMinLoop6 />
  <DelayComponentVanspiProfBMinLoop7 />
  <DelayComponentVanspiProfBMinLoop8 />
  <DelayComponentVanspiProfBMinLoop9 />
  <DelayComponentVanspiProfBMinLoopFinal />
  <YayBattleEndVanspiProfBMin />
  </Container>
  )
  };

//vanspiprofb boxes precious//

const VanspiProfBTimer4 = () => {
  if (totalVanspiProfB75Loops == 4)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer5 = () => {
  if (totalVanspiProfB75Loops == 5)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB /></Container>
)
};

const VanspiProfBTimer6 = () => {
  if (totalVanspiProfB75Loops == 6)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};


const VanspiProfBTimer7 = () => {
  if (totalVanspiProfB75Loops == 7)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};


const VanspiProfBTimer8 = () => {
  if (totalVanspiProfB75Loops == 8)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer9 = () => {
  if (totalVanspiProfB75Loops == 9)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer10 = () => {
  if (totalVanspiProfB75Loops == 10)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer11 = () => {
  if (totalVanspiProfB75Loops == 11)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer12 = () => {
  if (totalVanspiProfB75Loops == 12)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer13 = () => {
  if (totalVanspiProfB75Loops == 13)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer14 = () => {
  if (totalVanspiProfB75Loops == 14)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer15 = () => {
  if (totalVanspiProfB75Loops == 15)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer16 = () => {
  if (totalVanspiProfB75Loops == 16)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer17 = () => {
  if (totalVanspiProfB75Loops == 17)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer18 = () => {
  if (totalVanspiProfB75Loops == 18)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer19 = () => {
  if (totalVanspiProfB75Loops == 19)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer20 = () => {
  if (totalVanspiProfB75Loops == 20)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer21 = () => {
  if (totalVanspiProfB75Loops == 21)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer22 = () => {
  if (totalVanspiProfB75Loops == 22)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer23 = () => {
  if (totalVanspiProfB75Loops == 23)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer24 = () => {
  if (totalVanspiProfB75Loops == 24)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer25 = () => {
  if (totalVanspiProfB75Loops == 25)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer26 = () => {
  if (totalVanspiProfB75Loops == 26)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer27 = () => {
  if (totalVanspiProfB75Loops == 27)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer28 = () => {
  if (totalVanspiProfB75Loops == 28)
    return(<Container>
<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer29 = () => {
  if (totalVanspiProfB75Loops == 29)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer30 = () => {
  if (totalVanspiProfB75Loops == 30)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer31 = () => {
  if (totalVanspiProfB75Loops == 31)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer32 = () => {
  if (totalVanspiProfB75Loops == 32)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer33 = () => {
  if (totalVanspiProfB75Loops == 33)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer34 = () => {
  if (totalVanspiProfB75Loops == 34)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer35 = () => {
  if (totalVanspiProfB75Loops == 35)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer36 = () => {
  if (totalVanspiProfB75Loops == 36)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer37 = () => {
  if (totalVanspiProfB75Loops == 37)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer38 = () => {
  if (totalVanspiProfB75Loops == 38)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer39 = () => {
  if (totalVanspiProfB75Loops == 39)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer40 = () => {
  if (totalVanspiProfB75Loops == 40)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer41 = () => {
  if (totalVanspiProfB75Loops == 41)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer42 = () => {
  if (totalVanspiProfB75Loops == 42)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer43 = () => {
  if (totalVanspiProfB75Loops == 43)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer44 = () => {
  if (totalVanspiProfB75Loops == 44)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer45 = () => {
  if (totalVanspiProfB75Loops == 45)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer46 = () => {
  if (totalVanspiProfB75Loops == 46)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer47 = () => {
  if (totalVanspiProfB75Loops == 47)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer48 = () => {
  if (totalVanspiProfB75Loops == 48)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoop48 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer49 = () => {
  if (totalVanspiProfB75Loops == 49)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoop48 />
<DelayComponentVanspiProfBLoop49 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer50 = () => {
  if (totalVanspiProfB75Loops == 50)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoop48 />
<DelayComponentVanspiProfBLoop49 />
<DelayComponentVanspiProfBLoop50 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer51 = () => {
  if (totalVanspiProfB75Loops == 51)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoop48 />
<DelayComponentVanspiProfBLoop49 />
<DelayComponentVanspiProfBLoop50 />
<DelayComponentVanspiProfBLoop51 />

<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer52 = () => {
  if (totalVanspiProfB75Loops == 52)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoop48 />
<DelayComponentVanspiProfBLoop49 />
<DelayComponentVanspiProfBLoop50 />
<DelayComponentVanspiProfBLoop51 />
<DelayComponentVanspiProfBLoop52 />

<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer53 = () => {
  if (totalVanspiProfB75Loops == 53)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoop48 />
<DelayComponentVanspiProfBLoop49 />
<DelayComponentVanspiProfBLoop50 />
<DelayComponentVanspiProfBLoop51 />
<DelayComponentVanspiProfBLoop52 />
<DelayComponentVanspiProfBLoop53 />

<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer54 = () => {
  if (totalVanspiProfB75Loops == 54)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoop48 />
<DelayComponentVanspiProfBLoop49 />
<DelayComponentVanspiProfBLoop50 />
<DelayComponentVanspiProfBLoop51 />
<DelayComponentVanspiProfBLoop52 />
<DelayComponentVanspiProfBLoop53 />
<DelayComponentVanspiProfBLoop54 />

<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer55 = () => {
  if (totalVanspiProfB75Loops == 55)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoop48 />
<DelayComponentVanspiProfBLoop49 />
<DelayComponentVanspiProfBLoop50 />
<DelayComponentVanspiProfBLoop51 />
<DelayComponentVanspiProfBLoop52 />
<DelayComponentVanspiProfBLoop53 />
<DelayComponentVanspiProfBLoop54 />
<DelayComponentVanspiProfBLoop55 />

<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer56 = () => {
  if (totalVanspiProfB75Loops == 56)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoop48 />
<DelayComponentVanspiProfBLoop49 />
<DelayComponentVanspiProfBLoop50 />
<DelayComponentVanspiProfBLoop51 />
<DelayComponentVanspiProfBLoop52 />
<DelayComponentVanspiProfBLoop53 />
<DelayComponentVanspiProfBLoop54 />
<DelayComponentVanspiProfBLoop55 />
<DelayComponentVanspiProfBLoop56 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer57 = () => {
  if (totalVanspiProfB75Loops == 57)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoop48 />
<DelayComponentVanspiProfBLoop49 />
<DelayComponentVanspiProfBLoop50 />
<DelayComponentVanspiProfBLoop51 />
<DelayComponentVanspiProfBLoop52 />
<DelayComponentVanspiProfBLoop53 />
<DelayComponentVanspiProfBLoop54 />
<DelayComponentVanspiProfBLoop55 />
<DelayComponentVanspiProfBLoop56 />
<DelayComponentVanspiProfBLoop57 />

<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer58 = () => {
  if (totalVanspiProfB75Loops == 58)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoop48 />
<DelayComponentVanspiProfBLoop49 />
<DelayComponentVanspiProfBLoop50 />
<DelayComponentVanspiProfBLoop51 />
<DelayComponentVanspiProfBLoop52 />
<DelayComponentVanspiProfBLoop53 />
<DelayComponentVanspiProfBLoop54 />
<DelayComponentVanspiProfBLoop55 />
<DelayComponentVanspiProfBLoop56 />
<DelayComponentVanspiProfBLoop57 />
<DelayComponentVanspiProfBLoop58 />

<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer59 = () => {
  if (totalVanspiProfB75Loops == 59)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoop48 />
<DelayComponentVanspiProfBLoop49 />
<DelayComponentVanspiProfBLoop50 />
<DelayComponentVanspiProfBLoop51 />
<DelayComponentVanspiProfBLoop52 />
<DelayComponentVanspiProfBLoop53 />
<DelayComponentVanspiProfBLoop54 />
<DelayComponentVanspiProfBLoop55 />
<DelayComponentVanspiProfBLoop56 />
<DelayComponentVanspiProfBLoop57 />
<DelayComponentVanspiProfBLoop58 />
<DelayComponentVanspiProfBLoop59 />
<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};

const VanspiProfBTimer60 = () => {
  if (totalVanspiProfB75Loops == 60)
    return(<Container>

<DelayComponentVanspiProfBLoop />
<DelayComponentVanspiProfBLoop2 />
<DelayComponentVanspiProfBLoop3 />
<DelayComponentVanspiProfBLoop4 />
<DelayComponentVanspiProfBLoop5 />
<DelayComponentVanspiProfBLoop6 />
<DelayComponentVanspiProfBLoop7 />
<DelayComponentVanspiProfBLoop8 />
<DelayComponentVanspiProfBLoop9 />
<DelayComponentVanspiProfBLoop10 />
<DelayComponentVanspiProfBLoop11 />
<DelayComponentVanspiProfBLoop12 />
<DelayComponentVanspiProfBLoop13 />
<DelayComponentVanspiProfBLoop14 />
<DelayComponentVanspiProfBLoop15 />
<DelayComponentVanspiProfBLoop16 />
<DelayComponentVanspiProfBLoop17 />
<DelayComponentVanspiProfBLoop18 />
<DelayComponentVanspiProfBLoop19 />
<DelayComponentVanspiProfBLoop20 />
<DelayComponentVanspiProfBLoop21 />
<DelayComponentVanspiProfBLoop22 />
<DelayComponentVanspiProfBLoop23 />
<DelayComponentVanspiProfBLoop24 />
<DelayComponentVanspiProfBLoop25 />
<DelayComponentVanspiProfBLoop26 />
<DelayComponentVanspiProfBLoop27 />
<DelayComponentVanspiProfBLoop28 />
<DelayComponentVanspiProfBLoop29 />
<DelayComponentVanspiProfBLoop30 />
<DelayComponentVanspiProfBLoop31 />
<DelayComponentVanspiProfBLoop32 />
<DelayComponentVanspiProfBLoop33 />
<DelayComponentVanspiProfBLoop34 />
<DelayComponentVanspiProfBLoop35 />
<DelayComponentVanspiProfBLoop36 />
<DelayComponentVanspiProfBLoop37 />
<DelayComponentVanspiProfBLoop38 />
<DelayComponentVanspiProfBLoop39 />
<DelayComponentVanspiProfBLoop40 />
<DelayComponentVanspiProfBLoop41 />
<DelayComponentVanspiProfBLoop42 />
<DelayComponentVanspiProfBLoop43 />
<DelayComponentVanspiProfBLoop44 />
<DelayComponentVanspiProfBLoop45 />
<DelayComponentVanspiProfBLoop46 />
<DelayComponentVanspiProfBLoop47 />
<DelayComponentVanspiProfBLoop48 />
<DelayComponentVanspiProfBLoop49 />
<DelayComponentVanspiProfBLoop50 />
<DelayComponentVanspiProfBLoop51 />
<DelayComponentVanspiProfBLoop52 />
<DelayComponentVanspiProfBLoop53 />
<DelayComponentVanspiProfBLoop54 />
<DelayComponentVanspiProfBLoop55 />
<DelayComponentVanspiProfBLoop56 />
<DelayComponentVanspiProfBLoop57 />
<DelayComponentVanspiProfBLoop58 />
<DelayComponentVanspiProfBLoop59 />
<DelayComponentVanspiProfBLoop60 />

<DelayComponentVanspiProfBLoopFinal />
<YayBattleEndVanspiProfB />
</Container>
)
};



const VanspiProfB4 = () => {
  if (totalVanspiBackTo100 == 4)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB5 = () => {
  if (totalVanspiBackTo100 == 5)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB6 = () => {
  if (totalVanspiBackTo100 == 6)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB7 = () => {
  if (totalVanspiBackTo100 == 7)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB8 = () => {
  if (totalVanspiBackTo100 == 8)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB9 = () => {
  if (totalVanspiBackTo100 == 9)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB10 = () => {
  if (totalVanspiBackTo100 == 10)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB11 = () => {
  if (totalVanspiBackTo100 == 11)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VanspiProfB12 = () => {
  if (totalVanspiBackTo100 == 12)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VanspiProfB13 = () => {
  if (totalVanspiBackTo100 == 13)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc ex sodales.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VanspiProfB14 = () => {
  if (totalVanspiBackTo100 == 14)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at ex sodales.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VanspiProfB15 = () => {
  if (totalVanspiBackTo100 == 15)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VanspiProfB16 = () => {
  if (totalVanspiBackTo100 == 16)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales consequat.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}


const VanspiProfB17 = () => {
  if (totalVanspiBackTo100 == 17)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus orci. ')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VanspiProfB18 = () => {
  if (totalVanspiBackTo100 == 18)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in orci. ')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VanspiProfB19 = () => {
  if (totalVanspiBackTo100 == 19)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius. ')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VanspiProfB20 = () => {
  if (totalVanspiBackTo100 == 20)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque. ')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VanspiProfB21 = () => {
  if (totalVanspiBackTo100 == 21)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus.')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VanspiProfB22 = () => {
  if (totalVanspiBackTo100 == 22)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus et. ')}}>
Copy {totalVanspiBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const VanspiProfB26 = () => {
  if (totalVanspiHPToLose == 26)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam vel ante quam. Nulla egestas auctor enim non rhoncus. Maecenas feugiat dapibus lacus nec graVanspiProfBda. Quisque dictum.')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB28 = () => {
  if (totalVanspiHPToLose == 28)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam non purus feugiat, graVanspiProfBda dolor eget, porta mi. Aliquam iaculis elit diam. Ut id blandit dui. Nulla et dolor.')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB30 = () => {
  if (totalVanspiHPToLose == 30)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rhoncus euismod lacus ut lobortis. Maecenas tincidunt lacus quis interdum faucibus. Aliquam erat volutpat. Vestibulum semper est in condimentum mattis. Suspendisse.')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB32 = () => {
  if (totalVanspiHPToLose == 32)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec faucibus risus justo, ac consectetur orci maximus nec. Proin placerat, lectus nec tempus cursus, augue nibh eleifend erat, at porttitor nulla arcu in.')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB34 = () => {
  if (totalVanspiHPToLose == 34)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus diam tellus, volutpat VanspiProfBtae dapibus vel, convallis auctor tellus. Cras fringilla tincidunt lorem, quis sagittis odio accumsan at. Sed nec dictum diam. Cras ac pulVanspiProfBnar.')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB36 = () => {
  if (totalVanspiHPToLose == 36)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus mollis egestas ex. VanspiProfBvamus tempus neque odio, nec scelerisque ipsum vehicula sit amet. Duis nisl dolor, posuere sed ante vel, euismod faucibus nisi. Donec nulla leo, aliquet.')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB38 = () => {
  if (totalVanspiHPToLose == 38)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque feugiat aliquam ipsum ac auctor. Phasellus a nisi auctor, tempus felis eget, porta felis. Maecenas et tempor nisi. Aenean metus arcu, posuere sit amet nunc vel, cursus porttitor nisl.')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB40 = () => {
  if (totalVanspiHPToLose == 40)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. VanspiProfBvamus at est et ipsum suscipit lacinia nec sit amet turpis. Vestibulum nec ex nibh. Etiam consequat et justo sit amet commodo. Suspendisse mattis semper arcu eget fermentum. Donec eu nisi elementum.')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB42 = () => {
  if (totalVanspiHPToLose == 42)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ac aliquam nunc. Sed VanspiProfBtae tellus a tellus dictum condimentum. Nunc volutpat feugiat justo. Fusce vulputate ligula nisl, sed ullamcorper libero imperdiet sit amet. In fermentum sed metus nec pellentesque. Duis eget tellus. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB44 = () => {
  if (totalVanspiHPToLose == 44)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus vehicula volutpat ligula eu efficitur. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris mollis et odio eu placerat. Phasellus mollis eleifend orci, eget pulVanspiProfBnar sem VanspiProfBverra eu. Nam turpis. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB46 = () => {
  if (totalVanspiHPToLose == 46)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer aliquam mauris ac dignissim hendrerit. Suspendisse leo nulla, hendrerit ultrices diam interdum, consequat mollis sapien. Donec ac placerat leo. In ante libero, facilisis sit amet quam in, iaculis commodo nisl. Aliquam tincidunt nunc massa, sit amet VanspiProfBverra.')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB48 = () => {
  if (totalVanspiHPToLose == 48)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis eu ligula ac ipsum tempus tristique ac at urna. Phasellus accumsan erat ac dui elementum fringilla. Phasellus sagittis et mi ac malesuada. Nam eleifend mi in velit auctor, vel mollis massa volutpat. Ut tempus lorem diam, a sollicitudin ex.')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB50 = () => {
  if (totalVanspiHPToLose == 50)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam consequat blandit eros, pellentesque vulputate tortor imperdiet et. In hac habitasse platea dictumst. Aenean non dapibus diam, VanspiProfBtae suscipit augue. Phasellus ut aliquam magna, nec efficitur lacus. Pellentesque lacus sapien, vulputate in blandit at, venenatis vestibulum magna. Nullam quis facilisis dui. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB52 = () => {
  if (totalVanspiHPToLose == 52)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eros odio, pellentesque quis tellus at, consectetur lobortis sem. Etiam turpis libero, VanspiProfBverra at malesuada ac, fringilla consectetur orci. Etiam sed convallis magna. Morbi feugiat rutrum metus VanspiProfBtae placerat. Cras fermentum convallis posuere. VanspiProfBvamus hendrerit neque id pharetra consectetur. Etiam fringilla augue et. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB54 = () => {
  if (totalVanspiHPToLose == 54)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec id posuere est, a ultrices nisi. In porttitor ligula vel arcu dapibus, vel interdum magna ultricies. Aenean odio ante, ultrices VanspiProfBtae fermentum sed, aliquam eu tellus. Vestibulum mattis dignissim sollicitudin. Integer mollis, lorem et convallis elementum, lorem nisi vehicula dolor, congue vulputate metus eros id. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB56 = () => {
  if (totalVanspiHPToLose == 56)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce blandit VanspiProfBverra neque, iaculis blandit urna vulputate et. Etiam eu imperdiet nulla, ut malesuada mi. Nullam ex nisi, fringilla eget orci sed, porta porttitor tellus. Donec nec turpis feugiat, commodo eros in, sodales lacus. Maecenas fermentum lacus posuere mauris placerat tempus. Mauris a lectus tincidunt, aliquet nunc. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB58 = () => {
  if (totalVanspiHPToLose == 58)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam feugiat erat libero, et auctor lorem maximus et. Nam vel massa sed eros luctus finibus nec VanspiProfBtae augue. In pellentesque tortor vel pulVanspiProfBnar efficitur. Aenean non nunc volutpat, semper lacus quis, dignissim erat. Phasellus dignissim, leo et finibus maximus, nunc est dignissim augue, quis placerat urna ligula sit amet. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB60 = () => {
  if (totalVanspiHPToLose == 60)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ut sapien ac lacus porttitor aliquam at at nulla. VanspiProfBvamus pharetra pulVanspiProfBnar elementum. Nullam imperdiet augue vel eros imperdiet eleifend. Suspendisse rutrum, tortor id volutpat sagittis, elit urna luctus odio, ut congue massa felis eu ligula. Maecenas tempor, urna in eleifend eleifend, eros ante vehicula odio, VanspiProfBtae maximus ipsum sapien sed.')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB62 = () => {
  if (totalVanspiHPToLose == 62)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc VanspiProfBverra finibus sapien, nec aliquam sem ornare elementum. Mauris a ornare nunc. Vestibulum placerat massa sit amet nisl faucibus, in euismod turpis sollicitudin. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean consectetur vel quam dapibus interdum. Maecenas lacinia dolor justo, at vestibulum ex sollicitudin eget. Nunc in velit. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB64 = () => {
  if (totalVanspiHPToLose == 64)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eu elementum odio. Nulla imperdiet sit amet risus nec pharetra. Duis auctor, justo et sodales posuere, risus sapien maximus enim, at convallis lorem ex eu orci. Donec imperdiet dictum ex, semper fermentum diam auctor sit amet. In suscipit nec odio VanspiProfBtae VanspiProfBverra. Nullam VanspiProfBtae hendrerit lectus, at accumsan mauris. Suspendisse facilisis quam eu imperdiet interdum. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB66 = () => {
  if (totalVanspiHPToLose == 66)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec commodo rutrum ultrices. Nullam dapibus nisi ut nisl placerat malesuada. Proin luctus dignissim dui, VanspiProfBtae lacinia velit graVanspiProfBda ac. Proin et nisi ac mi ultricies blandit ac ac sem. Nullam id mattis libero. Sed euismod metus ut odio tincidunt, sed sodales metus blandit. Phasellus aliquam elit in lacinia ornare. Nullam suscipit ipsum ac auctor convallis. Donec tempor. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB68 = () => {
  if (totalVanspiHPToLose == 68)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam ac dolor lobortis ante ornare scelerisque. Ut finibus luctus purus sit amet accumsan. Duis vel suscipit erat, nec molestie enim. Nullam bibendum odio nunc. VanspiProfBvamus mollis fermentum ex, in dictum eros blandit nec. Sed sollicitudin quis tortor ac pharetra. Sed consectetur, turpis eu eleifend rutrum, nibh urna condimentum leo, eget interdum urna est nec sapien. Interdum et malesuada fames. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB70 = () => {
  if (totalVanspiHPToLose == 70)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse pharetra purus elementum auctor varius. Morbi elementum mi nec iaculis pretium. Cras nec porta turpis. Nullam vehicula urna VanspiProfBtae volutpat sollicitudin. Aliquam erat volutpat. In vehicula ex in augue scelerisque bibendum. Suspendisse cursus neque at mauris feugiat mattis. Ut at congue justo. Phasellus elementum aliquet graVanspiProfBda. Aliquam rhoncus vulputate est eget efficitur. Cras tristique elit non tellus consequat iaculis. Nunc sit. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB72 = () => {
  if (totalVanspiHPToLose == 72)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc sodales, elit sed posuere laoreet, ante mi maximus velit, vel accumsan sem metus vel justo. Curabitur nec tincidunt tellus, at laoreet felis. Fusce eu luctus felis. Morbi varius, turpis eu aliquam auctor, magna ante interdum nulla, quis maximus magna felis nec nisl. VanspiProfBvamus VanspiProfBtae ullamcorper dolor. Donec feugiat in dolor in maximus. Integer VanspiProfBverra dui sit amet nulla tristique, sit amet suscipit leo. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB74 = () => {
  if (totalVanspiHPToLose == 74)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi quis magna a justo bibendum dictum sit amet sit amet ex. Aenean quis hendrerit urna, ut ullamcorper nisi. Aenean a nunc consectetur, pharetra lectus non, rhoncus sapien. Sed quis nulla graVanspiProfBda, interdum turpis a, faucibus est. Curabitur a odio VanspiProfBtae ex tristique luctus VanspiProfBtae a sem. Nulla congue vel lacus eget varius. Aliquam fermentum nibh quis diam dictum, vel porta justo rhoncus. Morbi at rhoncus. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB76 = () => {
  if (totalVanspiHPToLose == 76)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque nec euismod est. Cras tincidunt tempus blandit. Vestibulum vel tortor sed ligula vestibulum aliquet sit amet vel tellus. Mauris VanspiProfBtae ultricies nibh. Integer eu augue non nulla consectetur cursus. Fusce diam purus, faucibus non interdum sed, varius eget tellus. Suspendisse vehicula justo diam, ac fringilla eros sagittis sit amet. Suspendisse non justo lacinia, tempor libero pulVanspiProfBnar, efficitur arcu. Nunc VanspiProfBtae enim vestibulum massa interdum volutpat sit amet. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB78 = () => {
  if (totalVanspiHPToLose == 78)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec augue arcu, fringilla VanspiProfBtae tempus vel, ultricies commodo turpis. Pellentesque ut risus luctus, accumsan dolor eget, luctus felis. Suspendisse ac egestas nunc. Sed VanspiProfBverra felis nec lectus tempor feugiat. Nunc tincidunt finibus turpis non luctus. Nullam orci nisl, porttitor ut neque in, malesuada porta nisi. Phasellus sollicitudin magna faucibus est lobortis, ornare mollis lacus sodales. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB80 = () => {
  if (totalVanspiHPToLose == 80)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas congue dignissim cursus. VanspiProfBvamus id nulla ut risus pellentesque semper. Pellentesque lobortis augue eget ultrices molestie. Nunc euismod massa a lectus varius sollicitudin. Sed dictum quis est placerat porta. Ut malesuada feugiat nisi et accumsan. Morbi et pulVanspiProfBnar nunc. Proin fringilla condimentum metus, id blandit mauris egestas in. Fusce tincidunt, nisi eget ornare fermentum, elit erat dictum nulla, tristique iaculis leo massa in orci. Ut aliquam efficitur lacus, in commodo nibh.')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB82 = () => {
  if (totalVanspiHPToLose == 82)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec auctor felis ligula, sit amet pulVanspiProfBnar arcu porta quis. Mauris ultrices tristique neque, id ullamcorper nisi pharetra sit amet. Nam commodo leo sit amet sollicitudin vehicula. Morbi congue tellus risus, eu dapibus ex consequat id. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Pellentesque vestibulum arcu diam, non ornare dui volutpat sollicitudin. Nunc VanspiProfBtae massa in leo volutpat fermentum nec eu lectus. Sed sit amet finibus dui, sed. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB84 = () => {
  if (totalVanspiHPToLose == 84)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus dictum velit VanspiProfBtae nunc ultrices, non sagittis eros euismod. Donec mattis leo id tempor tristique. In dignissim tempus augue, et posuere eros tempus sed. Suspendisse in ex felis. Ut faucibus blandit imperdiet. Sed convallis quam quis augue VanspiProfBverra rutrum. Ut sapien orci, scelerisque blandit nulla sit amet, malesuada sollicitudin justo. Proin et nulla consequat, fermentum eros non, rutrum orci. Suspendisse porttitor VanspiProfBverra tortor sed consequat. Etiam et augue ac metus condimentum finibus. Nunc vel dictum. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB86 = () => {
  if (totalVanspiHPToLose == 86)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. In a rutrum lorem, vel congue libero. Maecenas egestas tincidunt mauris, ut interdum turpis eleifend id. Mauris consectetur metus id eros consectetur graVanspiProfBda. VanspiProfBvamus eget velit ipsum. Nunc porta tortor eu est imperdiet fringilla. Curabitur vel nibh ac odio imperdiet ultricies. Donec tempus ante non libero euismod dapibus. Aenean faucibus consectetur bibendum. Morbi sollicitudin, enim id congue laoreet, elit dui volutpat metus, non egestas ante tortor sit amet ex. Mauris sagittis pulVanspiProfBnar finibus. Integer non vehicula lectus, ut. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB88 = () => {
  if (totalVanspiHPToLose == 88)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla arcu odio, vulputate eu tortor ac, convallis convallis ipsum. Proin imperdiet luctus odio id vehicula. Sed congue posuere tristique. VanspiProfBvamus accumsan luctus tellus. Mauris porttitor leo et metus convallis elementum. Suspendisse in urna pharetra, eleifend arcu et, porttitor lectus. VanspiProfBvamus eros tellus, volutpat in est accumsan, bibendum congue est. Phasellus dignissim consequat sem, in rutrum lorem interdum nec. Phasellus facilisis lectus eu eros condimentum, vel luctus justo eleifend. Fusce venenatis ipsum ut ante tincidunt commodo. Suspendisse potenti. Sed volutpat. .')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const VanspiProfB90 = () => {
  if (totalVanspiHPToLose == 90)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam eu dignissim neque. Quisque a commodo diam. Cras in accumsan nisl. Maecenas VanspiProfBtae scelerisque arcu, at pretium ipsum. Nam tincidunt ullamcorper congue. Donec scelerisque, augue nec hendrerit vehicula, erat dui pellentesque odio, et VanspiProfBverra dolor felis nec sem. Praesent a lorem vel tellus feugiat ultricies. Etiam lacinia, sapien quis vulputate tincidunt, nisi lacus ornare augue, elementum efficitur elit diam in nibh. Suspendisse ullamcorper mollis purus, at tincidunt odio porta rhoncus. Quisque efficitur nisl nibh, id auctor libero VanspiProfBverra ac. In hac. ')}}>
Copy {totalVanspiHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

//Viyu - min - timers//

const DelayComponentViyuMinLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' mt='25px' fontSize='md'>
      	<b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentViyuMinLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTimeMin2_5SecPerHP15MinTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalViyuMins10} minutes and {totalViyuSecs10} seconds </Text>)
  return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'>
      	<b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
  
  const DelayComponentViyuMinLoop3 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP15MinTimeVal3)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 3: </b>{totalViyuMins10} minutes and {totalViyuSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP15MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyuMinLoop4 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP15MinTimeVal4)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 4: </b>{totalViyuMins10} minutes and {totalViyuSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP15MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyuMinLoop5 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP15MinTimeVal5)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 5: </b>{totalViyuMins10} minutes and {totalViyuSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP15MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyuMinLoop6 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP15MinTimeVal6)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 6: </b>{totalViyuMins10} minutes and {totalViyuSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP15MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyuMinLoop7 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP15MinTimeVal7)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 7: </b>{totalViyuMins10} minutes and {totalViyuSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP15MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };


  const DelayComponentViyuMinLoop8 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP15MinTimeVal8)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 8: </b>{totalViyuMins10} minutes and {totalViyuSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP15MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyuMinLoop9 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP15MinTimeVal9)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 9: </b>{totalViyuMins10} minutes and {totalViyuSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP15MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyuMinLoop10 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP15MinTimeVal10)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 10: </b>{totalViyuMins10} minutes and {totalViyuSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP15MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 10: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyuMinLoop11 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP15MinTimeVal11)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 11: </b>{totalViyuMins10} minutes and {totalViyuSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP15MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 11: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };

  
  const DelayComponentViyuMinLoop12 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP15MinTimeVal12)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 12: </b>{totalViyuMins10} minutes and {totalViyuSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP15MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 12: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  
  const DelayComponentViyuMinLoop13 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin2_5SecPerHP15MinTimeVal13)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 13: </b>{totalViyuMins10} minutes and {totalViyuSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin2_5SecPerHP15MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 13: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };

  
  const DelayComponentViyuMinLoopFinal = () => {
      const [show, setShow] = React.useState(false)
    
      React.useEffect(() => {
        const timeout = setTimeout(() => {
          setShow(true)
        }, totalWhenToStartFinalViyuLoopMin)
        return () => clearTimeout(timeout)
      }, [show])
      if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
        <b>Final Loop: </b>{totalViyuFinalMins} minutes and {totalViyuFinalSecs} seconds </Text>)
      return (   <Timer initialTime={totalFinalLoopSecsViyuMin}
      direction="backward"
          timeToUpdate={10}>
        {({ start, resume, pause, stop, reset, timerState }) => (
          <React.Fragment>
            <div>
            <Text mb='8px' fontSize='md'>
              <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
            </div>
          </React.Fragment>
        )}
      </Timer>
    )
    };

//Viyu - timers//

const DelayComponentViyuLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' mt='25px' fontSize='md'>
		  <b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentViyuLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'>
		  <b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop3 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal3)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 3: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop4 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal4)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 4: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 4: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop5 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal5)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 5: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop6 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal6)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 6: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop7 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal7)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 7: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop8 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal8)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 8: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyuLoop9 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal9)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 9: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyuLoop10 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal10)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 10: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 10: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyuLoop11 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal11)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 11: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 11: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyuLoop12 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal12)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 12: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 12: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyuLoop13 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal13)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 13: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 13: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyuLoop14 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal14)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 14: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 14: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyuLoop15 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal15)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 15: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 15: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop16 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal16)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 16: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 16: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop17 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal17)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 17: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 17: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop18 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal18)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 18: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 18: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop19 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal19)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 19: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 19: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop20 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal20)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 20: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 20: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop21 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal21)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 21: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 21: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop22 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal22)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 22: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 22: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop23 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal23)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 23: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 23: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop24 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal24)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 24: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 24: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop25 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal25)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 25: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 25: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop26 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal26)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 26: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 26: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop27 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal27)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 27: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 27: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop28 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal28)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 28: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 28: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop29 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal29)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 33: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 33: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop30 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal30)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 30: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 30: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop31 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal31)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 31: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 31: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop32 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal32)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 32: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 32: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop33 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal33)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 33: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 33: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop34 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal34)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 34: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 34: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop35 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal35)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 35: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 35: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop36 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal36)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 36: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 36: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop37 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal37)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 37: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 37: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop38 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal38)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 38: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 38: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop39 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal39)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 39: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 39: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop40 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal40)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 40: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 40: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop41 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal41)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 41: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 41: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop42 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal42)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 42: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 42: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop43 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal43)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 43: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 43: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop44 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal44)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 44: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 44: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop45 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal45)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 45: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 45: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop46 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal46)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 46: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 46: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop47 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal47)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 47: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 47: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop48 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal48)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 48: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 48: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop49 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal49)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 49: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 49: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop50 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal50)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 50: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 50: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop51 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal51)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 51: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 51: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop52 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal52)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 52: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 52: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop53 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal53)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 53: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 53: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop54 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal54)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 54: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 54: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop55 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal55)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 55: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 55: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop56 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal56)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 56: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 56: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop57 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal57)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 57: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 57: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop58 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal58)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 58: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 58: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop59 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal59)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 59: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 59: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop60 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal60)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 60: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 60: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop61 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal61)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 61: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 61: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop62 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal62)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 62: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 62: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop63 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal63)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 63: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 63: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop64 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal64)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 64: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 64: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop65 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal65)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 65: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 65: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop66 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal66)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 66: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 66: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop67 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal67)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 67: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 67: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop68 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal68)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 68: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 68: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop69 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal69)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 69: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 69: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop70 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal70)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 70: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 70: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop71 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal71)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 71: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 71: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop72 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal72)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 72: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 72: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop73 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal73)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 73: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 73: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop74 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal74)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 74: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 74: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop75 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal75)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 75: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 75: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop76 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal76)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 76: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 76: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop77 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal77)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 77: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 77: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop78 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal78)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 78: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 78: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop79 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal79)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 79: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 79: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop80 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal80)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 80: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 80: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop81 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal81)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 81: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 81: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop82 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal82)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 82: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 82: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop83 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal83)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 83: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 83: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop84 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal84)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 84: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 84: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop85 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal85)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 85: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 85: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop86 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal86)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 86: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 86: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop87 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal87)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 87: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 87: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop88 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal88)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 88: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 88: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop89 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal89)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 89: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 89: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop90 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime2_5SecPerHP15MinTimeVal90)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 90: </b>{totalVanspiMins75} minutes and {totalVanspiSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime2_5SecPerHP15MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 90: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyuLoop4x = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, (((Math.ceil((900/5)*.9))*5)*1000))
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (
    <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
    }} >
        <Text mt='15px' pt='10px'  fontSize='md' style={{color: '#7a7a7a'}}>
        At ~1 min 30 secs remaining:<br />
  the timer will flash 1x, then show the 4x reward multiplier</Text>
      </Container>
    )
return (   <Timer initialTime={totalFinalLoopSecsVoidWignow}
direction="backward"
    timeToUpdate={10}>
  {({ start, resume, pause, stop, reset, timerState }) => (
    <React.Fragment>
      <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
    }} >
        <Text mt='15px' pt='25px' fontSize='md'><span>When you see the </span><span style={{color: '#B794F4'}}><b>x4 multiplier</b></span><span>, <b><i>type</i></b> at least 1 word</span></Text>
      </Container>
    </React.Fragment>
  )}
</Timer>
)
};


const DelayComponentViyuLoopFinal = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalWhenToStartFinalViyuLoop)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Final Loop: </b>0 minutes and {totalLeftoverViyuTime} seconds </Text>)
  return (   <Timer initialTime={totalFinalLoopSecsViyu}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'>
		  <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
		  <Text mb='8px' fontSize='md'><span>When you see the </span><span style={{color: '#B794F4'}}><b>x4 multiplier</b></span><span>, <b><i>type</i></b> at least 1 word</span></Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

  //Lucereb - min - it goes in its boxes precious//

  const LucerebTimerMin = () => {
    if (totalLucerebLoops == 1)
      return(<Container>
  <DelayComponentLucerebMinLoop />
  <DelayComponentLucerebMinLoopFinal />
  <YayBattleEndLucerebMin />
  </Container>
  )
  };

  const LucerebTimerMin2 = () => {
    if (totalLucerebLoops == 2)
      return(<Container>
  <DelayComponentLucerebMinLoop />
  <DelayComponentLucerebMinLoop2 />
  <DelayComponentLucerebMinLoopFinal />
  <YayBattleEndLucerebMin />
  </Container>
  )
  };

  const LucerebTimerMin3 = () => {
    if (totalLucerebLoops == 3)
      return(<Container>
  <DelayComponentLucerebMinLoop />
  <DelayComponentLucerebMinLoop2 />
  <DelayComponentLucerebMinLoop3 />
  <DelayComponentLucerebMinLoopFinal />
  <YayBattleEndLucerebMin />
  </Container>
  )
  };

  const LucerebTimerMin4 = () => {
    if (totalLucerebLoops == 4)
      return(<Container>
  <DelayComponentLucerebMinLoop />
  <DelayComponentLucerebMinLoop2 />
  <DelayComponentLucerebMinLoop3 />
  <DelayComponentLucerebMinLoop4 />
  <DelayComponentLucerebMinLoopFinal />
  <YayBattleEndLucerebMin />
  </Container>
  )
  };

  const LucerebTimerMin5 = () => {
    if (totalLucerebLoops == 5)
      return(<Container>
  <DelayComponentLucerebMinLoop />
  <DelayComponentLucerebMinLoop2 />
  <DelayComponentLucerebMinLoop3 />
  <DelayComponentLucerebMinLoop4 />
  <DelayComponentLucerebMinLoop5 />
  <DelayComponentLucerebMinLoopFinal />
  <YayBattleEndLucerebMin />
  </Container>
  )
  };

  const LucerebTimerMin6 = () => {
    if (totalLucerebLoops == 6)
      return(<Container>
  <DelayComponentLucerebMinLoop />
  <DelayComponentLucerebMinLoop2 />
  <DelayComponentLucerebMinLoop3 />
  <DelayComponentLucerebMinLoop4 />
  <DelayComponentLucerebMinLoop5 />
  <DelayComponentLucerebMinLoop6 />
  <DelayComponentLucerebMinLoopFinal />
  <YayBattleEndLucerebMin />
  </Container>
  )
  };

  const LucerebTimerMin7 = () => {
    if (totalLucerebLoops == 7)
      return(<Container>
  <DelayComponentLucerebMinLoop />
  <DelayComponentLucerebMinLoop2 />
  <DelayComponentLucerebMinLoop3 />
  <DelayComponentLucerebMinLoop4 />
  <DelayComponentLucerebMinLoop5 />
  <DelayComponentLucerebMinLoop6 />
  <DelayComponentLucerebMinLoop7 />
  <DelayComponentLucerebMinLoopFinal />
  <YayBattleEndLucerebMin />
  </Container>
  )
  };



//Lucereb - it goes in its boxes precious//

const LucerebTimer4 = () => {
  if (totalLucereb75Loops == 4)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer5 = () => {
  if (totalLucereb75Loops == 5)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb /></Container>
)
};

const LucerebTimer6 = () => {
  if (totalLucereb75Loops == 6)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};


const LucerebTimer7 = () => {
  if (totalLucereb75Loops == 7)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};


const LucerebTimer8 = () => {
  if (totalLucereb75Loops == 8)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer9 = () => {
  if (totalLucereb75Loops == 9)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer10 = () => {
  if (totalLucereb75Loops == 10)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer11 = () => {
  if (totalLucereb75Loops == 11)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer12 = () => {
  if (totalLucereb75Loops == 12)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer13 = () => {
  if (totalLucereb75Loops == 13)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer14 = () => {
  if (totalLucereb75Loops == 14)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer15 = () => {
  if (totalLucereb75Loops == 15)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer16 = () => {
  if (totalLucereb75Loops == 16)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer17 = () => {
  if (totalLucereb75Loops == 17)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer18 = () => {
  if (totalLucereb75Loops == 18)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer19 = () => {
  if (totalLucereb75Loops == 19)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer20 = () => {
  if (totalLucereb75Loops == 20)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer21 = () => {
  if (totalLucereb75Loops == 21)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer22 = () => {
  if (totalLucereb75Loops == 22)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer23 = () => {
  if (totalLucereb75Loops == 23)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer24 = () => {
  if (totalLucereb75Loops == 24)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer25 = () => {
  if (totalLucereb75Loops == 25)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer26 = () => {
  if (totalLucereb75Loops == 26)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer27 = () => {
  if (totalLucereb75Loops == 27)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer28 = () => {
  if (totalLucereb75Loops == 28)
    return(<Container>
<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer29 = () => {
  if (totalLucereb75Loops == 29)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer30 = () => {
  if (totalLucereb75Loops == 30)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer31 = () => {
  if (totalLucereb75Loops == 31)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer32 = () => {
  if (totalLucereb75Loops == 32)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer33 = () => {
  if (totalLucereb75Loops == 33)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer34 = () => {
  if (totalLucereb75Loops == 34)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer35 = () => {
  if (totalLucereb75Loops == 35)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer36 = () => {
  if (totalLucereb75Loops == 36)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer37 = () => {
  if (totalLucereb75Loops == 37)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer38 = () => {
  if (totalLucereb75Loops == 38)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoop38 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer39 = () => {
  if (totalLucereb75Loops == 39)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoop38 />
<DelayComponentLucerebLoop39 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer40 = () => {
  if (totalLucereb75Loops == 40)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoop38 />
<DelayComponentLucerebLoop39 />
<DelayComponentLucerebLoop40 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer41 = () => {
  if (totalLucereb75Loops == 41)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoop38 />
<DelayComponentLucerebLoop39 />
<DelayComponentLucerebLoop40 />
<DelayComponentLucerebLoop41 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer42 = () => {
  if (totalLucereb75Loops == 42)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoop38 />
<DelayComponentLucerebLoop39 />
<DelayComponentLucerebLoop40 />
<DelayComponentLucerebLoop41 />
<DelayComponentLucerebLoop42 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer43 = () => {
  if (totalLucereb75Loops == 43)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoop38 />
<DelayComponentLucerebLoop39 />
<DelayComponentLucerebLoop40 />
<DelayComponentLucerebLoop41 />
<DelayComponentLucerebLoop42 />
<DelayComponentLucerebLoop43 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer44 = () => {
  if (totalLucereb75Loops == 44)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoop38 />
<DelayComponentLucerebLoop39 />
<DelayComponentLucerebLoop40 />
<DelayComponentLucerebLoop41 />
<DelayComponentLucerebLoop42 />
<DelayComponentLucerebLoop43 />
<DelayComponentLucerebLoop44 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer45 = () => {
  if (totalLucereb75Loops == 45)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoop38 />
<DelayComponentLucerebLoop39 />
<DelayComponentLucerebLoop40 />
<DelayComponentLucerebLoop41 />
<DelayComponentLucerebLoop42 />
<DelayComponentLucerebLoop43 />
<DelayComponentLucerebLoop44 />
<DelayComponentLucerebLoop45 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer46 = () => {
  if (totalLucereb75Loops == 46)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoop38 />
<DelayComponentLucerebLoop39 />
<DelayComponentLucerebLoop40 />
<DelayComponentLucerebLoop41 />
<DelayComponentLucerebLoop42 />
<DelayComponentLucerebLoop43 />
<DelayComponentLucerebLoop44 />
<DelayComponentLucerebLoop45 />
<DelayComponentLucerebLoop46 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer47 = () => {
  if (totalLucereb75Loops == 47)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoop38 />
<DelayComponentLucerebLoop39 />
<DelayComponentLucerebLoop40 />
<DelayComponentLucerebLoop41 />
<DelayComponentLucerebLoop42 />
<DelayComponentLucerebLoop43 />
<DelayComponentLucerebLoop44 />
<DelayComponentLucerebLoop45 />
<DelayComponentLucerebLoop46 />
<DelayComponentLucerebLoop47 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer48 = () => {
  if (totalLucereb75Loops == 48)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoop38 />
<DelayComponentLucerebLoop39 />
<DelayComponentLucerebLoop40 />
<DelayComponentLucerebLoop41 />
<DelayComponentLucerebLoop42 />
<DelayComponentLucerebLoop43 />
<DelayComponentLucerebLoop44 />
<DelayComponentLucerebLoop45 />
<DelayComponentLucerebLoop46 />
<DelayComponentLucerebLoop47 />
<DelayComponentLucerebLoop48 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer49 = () => {
  if (totalLucereb75Loops == 49)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoop38 />
<DelayComponentLucerebLoop39 />
<DelayComponentLucerebLoop40 />
<DelayComponentLucerebLoop41 />
<DelayComponentLucerebLoop42 />
<DelayComponentLucerebLoop43 />
<DelayComponentLucerebLoop44 />
<DelayComponentLucerebLoop45 />
<DelayComponentLucerebLoop46 />
<DelayComponentLucerebLoop47 />
<DelayComponentLucerebLoop48 />
<DelayComponentLucerebLoop49 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

const LucerebTimer50 = () => {
  if (totalLucereb75Loops == 50)
    return(<Container>

<DelayComponentLucerebLoop />
<DelayComponentLucerebLoop2 />
<DelayComponentLucerebLoop3 />
<DelayComponentLucerebLoop4 />
<DelayComponentLucerebLoop5 />
<DelayComponentLucerebLoop6 />
<DelayComponentLucerebLoop7 />
<DelayComponentLucerebLoop8 />
<DelayComponentLucerebLoop9 />
<DelayComponentLucerebLoop10 />
<DelayComponentLucerebLoop11 />
<DelayComponentLucerebLoop12 />
<DelayComponentLucerebLoop13 />
<DelayComponentLucerebLoop14 />
<DelayComponentLucerebLoop15 />
<DelayComponentLucerebLoop16 />
<DelayComponentLucerebLoop17 />
<DelayComponentLucerebLoop18 />
<DelayComponentLucerebLoop19 />
<DelayComponentLucerebLoop20 />
<DelayComponentLucerebLoop21 />
<DelayComponentLucerebLoop22 />
<DelayComponentLucerebLoop23 />
<DelayComponentLucerebLoop24 />
<DelayComponentLucerebLoop25 />
<DelayComponentLucerebLoop26 />
<DelayComponentLucerebLoop27 />
<DelayComponentLucerebLoop28 />
<DelayComponentLucerebLoop29 />
<DelayComponentLucerebLoop30 />
<DelayComponentLucerebLoop31 />
<DelayComponentLucerebLoop32 />
<DelayComponentLucerebLoop33 />
<DelayComponentLucerebLoop34 />
<DelayComponentLucerebLoop35 />
<DelayComponentLucerebLoop36 />
<DelayComponentLucerebLoop37 />
<DelayComponentLucerebLoop38 />
<DelayComponentLucerebLoop39 />
<DelayComponentLucerebLoop40 />
<DelayComponentLucerebLoop41 />
<DelayComponentLucerebLoop42 />
<DelayComponentLucerebLoop43 />
<DelayComponentLucerebLoop44 />
<DelayComponentLucerebLoop45 />
<DelayComponentLucerebLoop46 />
<DelayComponentLucerebLoop47 />
<DelayComponentLucerebLoop48 />
<DelayComponentLucerebLoop49 />
<DelayComponentLucerebLoop50 />
<DelayComponentLucerebLoopFinal />
<YayBattleEndLucereb />
</Container>
)
};

  //Viyu - min - it goes in its boxes precious//

  const ViyuTimerMin = () => {
    if (totalViyuLoops == 1)
      return(<Container>
  <DelayComponentViyuMinLoop />
  <DelayComponentViyuMinLoopFinal />
  <YayBattleEndViyuMin />
  </Container>
  )
  };

  const ViyuTimerMin2 = () => {
    if (totalViyuLoops == 2)
      return(<Container>
  <DelayComponentViyuMinLoop />
  <DelayComponentViyuMinLoop2 />
  <DelayComponentViyuMinLoopFinal />
  <YayBattleEndViyuMin />
  </Container>
  )
  };

  const ViyuTimerMin3 = () => {
    if (totalViyuLoops == 3)
      return(<Container>
  <DelayComponentViyuMinLoop />
  <DelayComponentViyuMinLoop2 />
  <DelayComponentViyuMinLoop3 />
  <DelayComponentViyuMinLoopFinal />
  <YayBattleEndViyuMin />
  </Container>
  )
  };

  const ViyuTimerMin4 = () => {
    if (totalViyuLoops == 4)
      return(<Container>
  <DelayComponentViyuMinLoop />
  <DelayComponentViyuMinLoop2 />
  <DelayComponentViyuMinLoop3 />
  <DelayComponentViyuMinLoop4 />
  <DelayComponentViyuMinLoopFinal />
  <YayBattleEndViyuMin />
  </Container>
  )
  };

  const ViyuTimerMin5 = () => {
    if (totalViyuLoops == 5)
      return(<Container>
  <DelayComponentViyuMinLoop />
  <DelayComponentViyuMinLoop2 />
  <DelayComponentViyuMinLoop3 />
  <DelayComponentViyuMinLoop4 />
  <DelayComponentViyuMinLoop5 />
  <DelayComponentViyuMinLoopFinal />
  <YayBattleEndViyuMin />
  </Container>
  )
  };

  const ViyuTimerMin6 = () => {
    if (totalViyuLoops == 6)
      return(<Container>
  <DelayComponentViyuMinLoop />
  <DelayComponentViyuMinLoop2 />
  <DelayComponentViyuMinLoop3 />
  <DelayComponentViyuMinLoop4 />
  <DelayComponentViyuMinLoop5 />
  <DelayComponentViyuMinLoop6 />
  <DelayComponentViyuMinLoopFinal />
  <YayBattleEndViyuMin />
  </Container>
  )
  };

  const ViyuTimerMin7 = () => {
    if (totalViyuLoops == 7)
      return(<Container>
  <DelayComponentViyuMinLoop />
  <DelayComponentViyuMinLoop2 />
  <DelayComponentViyuMinLoop3 />
  <DelayComponentViyuMinLoop4 />
  <DelayComponentViyuMinLoop5 />
  <DelayComponentViyuMinLoop6 />
  <DelayComponentViyuMinLoop7 />
  <DelayComponentViyuMinLoopFinal />
  <YayBattleEndViyuMin />
  </Container>
  )
  };

  const ViyuTimerMin8 = () => {
    if (totalViyuLoops == 8)
      return(<Container>
  <DelayComponentViyuMinLoop />
  <DelayComponentViyuMinLoop2 />
  <DelayComponentViyuMinLoop3 />
  <DelayComponentViyuMinLoop4 />
  <DelayComponentViyuMinLoop5 />
  <DelayComponentViyuMinLoop6 />
  <DelayComponentViyuMinLoop7 />
  <DelayComponentViyuMinLoop8 />
  <DelayComponentViyuMinLoopFinal />
  <YayBattleEndViyuMin />
  </Container>
  )
  };

  const ViyuTimerMin9 = () => {
    if (totalViyuLoops == 9)
      return(<Container>
  <DelayComponentViyuMinLoop />
  <DelayComponentViyuMinLoop2 />
  <DelayComponentViyuMinLoop3 />
  <DelayComponentViyuMinLoop4 />
  <DelayComponentViyuMinLoop5 />
  <DelayComponentViyuMinLoop6 />
  <DelayComponentViyuMinLoop7 />
  <DelayComponentViyuMinLoop8 />
  <DelayComponentViyuMinLoop9 />
  <DelayComponentViyuMinLoopFinal />
  <YayBattleEndViyuMin />
  </Container>
  )
  };

  const ViyuTimerMin10 = () => {
    if (totalViyuLoops == 10)
      return(<Container>
  <DelayComponentViyuMinLoop />
  <DelayComponentViyuMinLoop2 />
  <DelayComponentViyuMinLoop3 />
  <DelayComponentViyuMinLoop4 />
  <DelayComponentViyuMinLoop5 />
  <DelayComponentViyuMinLoop6 />
  <DelayComponentViyuMinLoop7 />
  <DelayComponentViyuMinLoop8 />
  <DelayComponentViyuMinLoop9 />
  <DelayComponentViyuMinLoop10 />
  <DelayComponentViyuMinLoopFinal />
  <YayBattleEndViyuMin />
  </Container>
  )
  };

  const ViyuTimerMin11 = () => {
    if (totalViyuLoops == 11)
      return(<Container>
  <DelayComponentViyuMinLoop />
  <DelayComponentViyuMinLoop2 />
  <DelayComponentViyuMinLoop3 />
  <DelayComponentViyuMinLoop4 />
  <DelayComponentViyuMinLoop5 />
  <DelayComponentViyuMinLoop6 />
  <DelayComponentViyuMinLoop7 />
  <DelayComponentViyuMinLoop8 />
  <DelayComponentViyuMinLoop9 />
  <DelayComponentViyuMinLoop10 />
  <DelayComponentViyuMinLoop11 />
  <DelayComponentViyuMinLoopFinal />
  <YayBattleEndViyuMin />
  </Container>
  )
  };

  const ViyuTimerMin12 = () => {
    if (totalViyuLoops == 12)
      return(<Container>
  <DelayComponentViyuMinLoop />
  <DelayComponentViyuMinLoop2 />
  <DelayComponentViyuMinLoop3 />
  <DelayComponentViyuMinLoop4 />
  <DelayComponentViyuMinLoop5 />
  <DelayComponentViyuMinLoop6 />
  <DelayComponentViyuMinLoop7 />
  <DelayComponentViyuMinLoop8 />
  <DelayComponentViyuMinLoop9 />
  <DelayComponentViyuMinLoop10 />
  <DelayComponentViyuMinLoop11 />
  <DelayComponentViyuMinLoop12 />
  <DelayComponentViyuMinLoopFinal />
  <YayBattleEndViyuMin />
  </Container>
  )
  };

  const ViyuTimerMin13 = () => {
    if (totalViyuLoops == 13)
      return(<Container>
  <DelayComponentViyuMinLoop />
  <DelayComponentViyuMinLoop2 />
  <DelayComponentViyuMinLoop3 />
  <DelayComponentViyuMinLoop4 />
  <DelayComponentViyuMinLoop5 />
  <DelayComponentViyuMinLoop6 />
  <DelayComponentViyuMinLoop7 />
  <DelayComponentViyuMinLoop8 />
  <DelayComponentViyuMinLoop9 />
  <DelayComponentViyuMinLoop10 />
  <DelayComponentViyuMinLoop11 />
  <DelayComponentViyuMinLoop12 />
  <DelayComponentViyuMinLoop13 />
  <DelayComponentViyuMinLoopFinal />
  <YayBattleEndViyuMin />
  </Container>
  )
  };


//Viyu - it goes in its boxes precious//

const ViyuTimer4 = () => {
  if (totalViyu75Loops == 4)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer5 = () => {
  if (totalViyu75Loops == 5)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu /></Container>
)
};

const ViyuTimer6 = () => {
  if (totalViyu75Loops == 6)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};


const ViyuTimer7 = () => {
  if (totalViyu75Loops == 7)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};


const ViyuTimer8 = () => {
  if (totalViyu75Loops == 8)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer9 = () => {
  if (totalViyu75Loops == 9)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer10 = () => {
  if (totalViyu75Loops == 10)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer11 = () => {
  if (totalViyu75Loops == 11)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer12 = () => {
  if (totalViyu75Loops == 12)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer13 = () => {
  if (totalViyu75Loops == 13)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer14 = () => {
  if (totalViyu75Loops == 14)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer15 = () => {
  if (totalViyu75Loops == 15)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer16 = () => {
  if (totalViyu75Loops == 16)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer17 = () => {
  if (totalViyu75Loops == 17)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer18 = () => {
  if (totalViyu75Loops == 18)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer19 = () => {
  if (totalViyu75Loops == 19)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer20 = () => {
  if (totalViyu75Loops == 20)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer21 = () => {
  if (totalViyu75Loops == 21)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer22 = () => {
  if (totalViyu75Loops == 22)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer23 = () => {
  if (totalViyu75Loops == 23)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer24 = () => {
  if (totalViyu75Loops == 24)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer25 = () => {
  if (totalViyu75Loops == 25)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer26 = () => {
  if (totalViyu75Loops == 26)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer27 = () => {
  if (totalViyu75Loops == 27)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer28 = () => {
  if (totalViyu75Loops == 28)
    return(<Container>
<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer29 = () => {
  if (totalViyu75Loops == 29)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer30 = () => {
  if (totalViyu75Loops == 30)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer31 = () => {
  if (totalViyu75Loops == 31)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer32 = () => {
  if (totalViyu75Loops == 32)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer33 = () => {
  if (totalViyu75Loops == 33)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer34 = () => {
  if (totalViyu75Loops == 34)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer35 = () => {
  if (totalViyu75Loops == 35)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer36 = () => {
  if (totalViyu75Loops == 36)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer37 = () => {
  if (totalViyu75Loops == 37)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer38 = () => {
  if (totalViyu75Loops == 38)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer39 = () => {
  if (totalViyu75Loops == 39)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer40 = () => {
  if (totalViyu75Loops == 40)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer41 = () => {
  if (totalViyu75Loops == 41)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer42 = () => {
  if (totalViyu75Loops == 42)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer43 = () => {
  if (totalViyu75Loops == 43)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer44 = () => {
  if (totalViyu75Loops == 44)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer45 = () => {
  if (totalViyu75Loops == 45)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer46 = () => {
  if (totalViyu75Loops == 46)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer47 = () => {
  if (totalViyu75Loops == 47)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer48 = () => {
  if (totalViyu75Loops == 48)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer49 = () => {
  if (totalViyu75Loops == 49)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer50 = () => {
  if (totalViyu75Loops == 50)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer51 = () => {
  if (totalViyu75Loops == 51)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer52 = () => {
  if (totalViyu75Loops == 52)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer53 = () => {
  if (totalViyu75Loops == 53)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer54 = () => {
  if (totalViyu75Loops == 54)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer55 = () => {
  if (totalViyu75Loops == 55)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer56 = () => {
  if (totalViyu75Loops == 56)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer57 = () => {
  if (totalViyu75Loops == 57)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer58 = () => {
  if (totalViyu75Loops == 58)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer59 = () => {
  if (totalViyu75Loops == 59)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer60 = () => {
  if (totalViyu75Loops == 60)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer61 = () => {
  if (totalViyu75Loops == 61)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer62 = () => {
  if (totalViyu75Loops == 62)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer63 = () => {
  if (totalViyu75Loops == 63)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer64 = () => {
  if (totalViyu75Loops == 64)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer65 = () => {
  if (totalViyu75Loops == 65)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer66 = () => {
  if (totalViyu75Loops == 66)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer67 = () => {
  if (totalViyu75Loops == 67)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer68 = () => {
  if (totalViyu75Loops == 68)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer69 = () => {
  if (totalViyu75Loops == 69)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer70 = () => {
  if (totalViyu75Loops == 70)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer71 = () => {
  if (totalViyu75Loops == 71)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer72 = () => {
  if (totalViyu75Loops == 72)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer73 = () => {
  if (totalViyu75Loops == 73)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer74 = () => {
  if (totalViyu75Loops == 74)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer75 = () => {
  if (totalViyu75Loops == 75)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer76 = () => {
  if (totalViyu75Loops == 76)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer77 = () => {
  if (totalViyu75Loops == 77)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer78 = () => {
  if (totalViyu75Loops == 78)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />
<DelayComponentViyuLoop78 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer79 = () => {
  if (totalViyu75Loops == 79)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />
<DelayComponentViyuLoop78 />
<DelayComponentViyuLoop79 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer80 = () => {
  if (totalViyu75Loops == 80)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />
<DelayComponentViyuLoop78 />
<DelayComponentViyuLoop79 />
<DelayComponentViyuLoop80 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer81 = () => {
  if (totalViyu75Loops == 81)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />
<DelayComponentViyuLoop78 />
<DelayComponentViyuLoop79 />
<DelayComponentViyuLoop80 />
<DelayComponentViyuLoop81 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer82 = () => {
  if (totalViyu75Loops == 82)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />
<DelayComponentViyuLoop78 />
<DelayComponentViyuLoop79 />
<DelayComponentViyuLoop80 />
<DelayComponentViyuLoop81 />
<DelayComponentViyuLoop82 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer83 = () => {
  if (totalViyu75Loops == 83)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />
<DelayComponentViyuLoop78 />
<DelayComponentViyuLoop79 />
<DelayComponentViyuLoop80 />
<DelayComponentViyuLoop81 />
<DelayComponentViyuLoop82 />
<DelayComponentViyuLoop83 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer84 = () => {
  if (totalViyu75Loops == 84)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />
<DelayComponentViyuLoop78 />
<DelayComponentViyuLoop79 />
<DelayComponentViyuLoop80 />
<DelayComponentViyuLoop81 />
<DelayComponentViyuLoop82 />
<DelayComponentViyuLoop83 />
<DelayComponentViyuLoop84 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer85 = () => {
  if (totalViyu75Loops == 85)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />
<DelayComponentViyuLoop78 />
<DelayComponentViyuLoop79 />
<DelayComponentViyuLoop80 />
<DelayComponentViyuLoop81 />
<DelayComponentViyuLoop82 />
<DelayComponentViyuLoop83 />
<DelayComponentViyuLoop84 />
<DelayComponentViyuLoop85 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer86 = () => {
  if (totalViyu75Loops == 86)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />
<DelayComponentViyuLoop78 />
<DelayComponentViyuLoop79 />
<DelayComponentViyuLoop80 />
<DelayComponentViyuLoop81 />
<DelayComponentViyuLoop82 />
<DelayComponentViyuLoop83 />
<DelayComponentViyuLoop84 />
<DelayComponentViyuLoop85 />
<DelayComponentViyuLoop86 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer87 = () => {
  if (totalViyu75Loops == 87)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />
<DelayComponentViyuLoop78 />
<DelayComponentViyuLoop79 />
<DelayComponentViyuLoop80 />
<DelayComponentViyuLoop81 />
<DelayComponentViyuLoop82 />
<DelayComponentViyuLoop83 />
<DelayComponentViyuLoop84 />
<DelayComponentViyuLoop85 />
<DelayComponentViyuLoop86 />
<DelayComponentViyuLoop87 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer88 = () => {
  if (totalViyu75Loops == 88)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />
<DelayComponentViyuLoop78 />
<DelayComponentViyuLoop79 />
<DelayComponentViyuLoop80 />
<DelayComponentViyuLoop81 />
<DelayComponentViyuLoop82 />
<DelayComponentViyuLoop83 />
<DelayComponentViyuLoop84 />
<DelayComponentViyuLoop85 />
<DelayComponentViyuLoop86 />
<DelayComponentViyuLoop87 />
<DelayComponentViyuLoop88 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer89 = () => {
  if (totalViyu75Loops == 89)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />
<DelayComponentViyuLoop78 />
<DelayComponentViyuLoop79 />
<DelayComponentViyuLoop80 />
<DelayComponentViyuLoop81 />
<DelayComponentViyuLoop82 />
<DelayComponentViyuLoop83 />
<DelayComponentViyuLoop84 />
<DelayComponentViyuLoop85 />
<DelayComponentViyuLoop86 />
<DelayComponentViyuLoop87 />
<DelayComponentViyuLoop88 />
<DelayComponentViyuLoop89 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const ViyuTimer90 = () => {
  if (totalViyu75Loops == 90)
    return(<Container>

<DelayComponentViyuLoop />
<DelayComponentViyuLoop2 />
<DelayComponentViyuLoop3 />
<DelayComponentViyuLoop4 />
<DelayComponentViyuLoop5 />
<DelayComponentViyuLoop6 />
<DelayComponentViyuLoop7 />
<DelayComponentViyuLoop8 />
<DelayComponentViyuLoop9 />
<DelayComponentViyuLoop10 />
<DelayComponentViyuLoop11 />
<DelayComponentViyuLoop12 />
<DelayComponentViyuLoop13 />
<DelayComponentViyuLoop14 />
<DelayComponentViyuLoop15 />
<DelayComponentViyuLoop16 />
<DelayComponentViyuLoop17 />
<DelayComponentViyuLoop18 />
<DelayComponentViyuLoop19 />
<DelayComponentViyuLoop20 />
<DelayComponentViyuLoop21 />
<DelayComponentViyuLoop22 />
<DelayComponentViyuLoop23 />
<DelayComponentViyuLoop24 />
<DelayComponentViyuLoop25 />
<DelayComponentViyuLoop26 />
<DelayComponentViyuLoop27 />
<DelayComponentViyuLoop28 />
<DelayComponentViyuLoop29 />
<DelayComponentViyuLoop30 />
<DelayComponentViyuLoop31 />
<DelayComponentViyuLoop32 />
<DelayComponentViyuLoop33 />
<DelayComponentViyuLoop34 />
<DelayComponentViyuLoop35 />
<DelayComponentViyuLoop36 />
<DelayComponentViyuLoop37 />
<DelayComponentViyuLoop38 />
<DelayComponentViyuLoop39 />
<DelayComponentViyuLoop40 />
<DelayComponentViyuLoop41 />
<DelayComponentViyuLoop42 />
<DelayComponentViyuLoop43 />
<DelayComponentViyuLoop44 />
<DelayComponentViyuLoop45 />
<DelayComponentViyuLoop46 />
<DelayComponentViyuLoop47 />
<DelayComponentViyuLoop48 />
<DelayComponentViyuLoop49 />
<DelayComponentViyuLoop50 />
<DelayComponentViyuLoop51 />
<DelayComponentViyuLoop52 />
<DelayComponentViyuLoop53 />
<DelayComponentViyuLoop54 />
<DelayComponentViyuLoop55 />
<DelayComponentViyuLoop56 />
<DelayComponentViyuLoop57 />
<DelayComponentViyuLoop58 />
<DelayComponentViyuLoop59 />
<DelayComponentViyuLoop60 />
<DelayComponentViyuLoop61 />
<DelayComponentViyuLoop62 />
<DelayComponentViyuLoop63 />
<DelayComponentViyuLoop64 />
<DelayComponentViyuLoop65 />
<DelayComponentViyuLoop66 />
<DelayComponentViyuLoop67 />
<DelayComponentViyuLoop68 />
<DelayComponentViyuLoop69 />
<DelayComponentViyuLoop70 />
<DelayComponentViyuLoop71 />
<DelayComponentViyuLoop72 />
<DelayComponentViyuLoop73 />
<DelayComponentViyuLoop74 />
<DelayComponentViyuLoop75 />
<DelayComponentViyuLoop76 />
<DelayComponentViyuLoop77 />
<DelayComponentViyuLoop78 />
<DelayComponentViyuLoop79 />
<DelayComponentViyuLoop80 />
<DelayComponentViyuLoop81 />
<DelayComponentViyuLoop82 />
<DelayComponentViyuLoop83 />
<DelayComponentViyuLoop84 />
<DelayComponentViyuLoop85 />
<DelayComponentViyuLoop86 />
<DelayComponentViyuLoop87 />
<DelayComponentViyuLoop88 />
<DelayComponentViyuLoop89 />
<DelayComponentViyuLoop90 />

<DelayComponentViyuLoopFinal />
<YayBattleEndViyu />
</Container>
)
};

const Viyu4 = () => {
  if (totalViyuBackTo100 == 4)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu5 = () => {
  if (totalViyuBackTo100 == 5)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu6 = () => {
  if (totalViyuBackTo100 == 6)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu7 = () => {
  if (totalViyuBackTo100 == 7)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu8 = () => {
  if (totalViyuBackTo100 == 8)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu9 = () => {
  if (totalViyuBackTo100 == 9)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu10 = () => {
  if (totalViyuBackTo100 == 10)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu11 = () => {
  if (totalViyuBackTo100 == 11)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyu12 = () => {
  if (totalViyuBackTo100 == 12)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyu13 = () => {
  if (totalViyuBackTo100 == 13)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc ex sodales.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyu14 = () => {
  if (totalViyuBackTo100 == 14)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at ex sodales.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyu15 = () => {
  if (totalViyuBackTo100 == 15)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyu16 = () => {
  if (totalViyuBackTo100 == 16)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales consequat.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}


const Viyu17 = () => {
  if (totalViyuBackTo100 == 17)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus orci. ')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyu18 = () => {
  if (totalViyuBackTo100 == 18)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in orci. ')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyu19 = () => {
  if (totalViyuBackTo100 == 19)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius. ')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyu20 = () => {
  if (totalViyuBackTo100 == 20)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque. ')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyu21 = () => {
  if (totalViyuBackTo100 == 21)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus.')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyu22 = () => {
  if (totalViyuBackTo100 == 22)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus et. ')}}>
Copy {totalViyuBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyu26 = () => {
  if (totalViyuHPToLose == 26)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam vel ante quam. Nulla egestas auctor enim non rhoncus. Maecenas feugiat dapibus lacus nec graViyuda. Quisque dictum.')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu28 = () => {
  if (totalViyuHPToLose == 28)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam non purus feugiat, graViyuda dolor eget, porta mi. Aliquam iaculis elit diam. Ut id blandit dui. Nulla et dolor.')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu30 = () => {
  if (totalViyuHPToLose == 30)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rhoncus euismod lacus ut lobortis. Maecenas tincidunt lacus quis interdum faucibus. Aliquam erat volutpat. Vestibulum semper est in condimentum mattis. Suspendisse.')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu32 = () => {
  if (totalViyuHPToLose == 32)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec faucibus risus justo, ac consectetur orci maximus nec. Proin placerat, lectus nec tempus cursus, augue nibh eleifend erat, at porttitor nulla arcu in.')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu34 = () => {
  if (totalViyuHPToLose == 34)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus diam tellus, volutpat vitae dapibus vel, convallis auctor tellus. Cras fringilla tincidunt lorem, quis sagittis odio accumsan at. Sed nec dictum diam. Cras ac pulViyunar.')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu36 = () => {
  if (totalViyuHPToLose == 36)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus mollis egestas ex. Viyuvamus tempus neque odio, nec scelerisque ipsum vehicula sit amet. Duis nisl dolor, posuere sed ante vel, euismod faucibus nisi. Donec nulla leo, aliquet.')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu38 = () => {
  if (totalViyuHPToLose == 38)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque feugiat aliquam ipsum ac auctor. Phasellus a nisi auctor, tempus felis eget, porta felis. Maecenas et tempor nisi. Aenean metus arcu, posuere sit amet nunc vel, cursus porttitor nisl.')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu40 = () => {
  if (totalViyuHPToLose == 40)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Viyuvamus at est et ipsum suscipit lacinia nec sit amet turpis. Vestibulum nec ex nibh. Etiam consequat et justo sit amet commodo. Suspendisse mattis semper arcu eget fermentum. Donec eu nisi elementum.')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu42 = () => {
  if (totalViyuHPToLose == 42)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ac aliquam nunc. Sed vitae tellus a tellus dictum condimentum. Nunc volutpat feugiat justo. Fusce vulputate ligula nisl, sed ullamcorper libero imperdiet sit amet. In fermentum sed metus nec pellentesque. Duis eget tellus. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu44 = () => {
  if (totalViyuHPToLose == 44)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus vehicula volutpat ligula eu efficitur. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris mollis et odio eu placerat. Phasellus mollis eleifend orci, eget pulViyunar sem viverra eu. Nam turpis. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu46 = () => {
  if (totalViyuHPToLose == 46)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer aliquam mauris ac dignissim hendrerit. Suspendisse leo nulla, hendrerit ultrices diam interdum, consequat mollis sapien. Donec ac placerat leo. In ante libero, facilisis sit amet quam in, iaculis commodo nisl. Aliquam tincidunt nunc massa, sit amet Viyuverra.')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu48 = () => {
  if (totalViyuHPToLose == 48)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis eu ligula ac ipsum tempus tristique ac at urna. Phasellus accumsan erat ac dui elementum fringilla. Phasellus sagittis et mi ac malesuada. Nam eleifend mi in velit auctor, vel mollis massa volutpat. Ut tempus lorem diam, a sollicitudin ex.')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu50 = () => {
  if (totalViyuHPToLose == 50)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam consequat blandit eros, pellentesque vulputate tortor imperdiet et. In hac habitasse platea dictumst. Aenean non dapibus diam, vitae suscipit augue. Phasellus ut aliquam magna, nec efficitur lacus. Pellentesque lacus sapien, vulputate in blandit at, venenatis vestibulum magna. Nullam quis facilisis dui. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu52 = () => {
  if (totalViyuHPToLose == 52)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eros odio, pellentesque quis tellus at, consectetur lobortis sem. Etiam turpis libero, viverra at malesuada ac, fringilla consectetur orci. Etiam sed convallis magna. Morbi feugiat rutrum metus vitae placerat. Cras fermentum convallis posuere. Viyuvamus hendrerit neque id pharetra consectetur. Etiam fringilla augue et. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu54 = () => {
  if (totalViyuHPToLose == 54)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec id posuere est, a ultrices nisi. In porttitor ligula vel arcu dapibus, vel interdum magna ultricies. Aenean odio ante, ultrices vitae fermentum sed, aliquam eu tellus. Vestibulum mattis dignissim sollicitudin. Integer mollis, lorem et convallis elementum, lorem nisi vehicula dolor, congue vulputate metus eros id. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu56 = () => {
  if (totalViyuHPToLose == 56)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce blandit viverra neque, iaculis blandit urna vulputate et. Etiam eu imperdiet nulla, ut malesuada mi. Nullam ex nisi, fringilla eget orci sed, porta porttitor tellus. Donec nec turpis feugiat, commodo eros in, sodales lacus. Maecenas fermentum lacus posuere mauris placerat tempus. Mauris a lectus tincidunt, aliquet nunc. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu58 = () => {
  if (totalViyuHPToLose == 58)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam feugiat erat libero, et auctor lorem maximus et. Nam vel massa sed eros luctus finibus nec vitae augue. In pellentesque tortor vel pulViyunar efficitur. Aenean non nunc volutpat, semper lacus quis, dignissim erat. Phasellus dignissim, leo et finibus maximus, nunc est dignissim augue, quis placerat urna ligula sit amet. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu60 = () => {
  if (totalViyuHPToLose == 60)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ut sapien ac lacus porttitor aliquam at at nulla. Viyuvamus pharetra pulViyunar elementum. Nullam imperdiet augue vel eros imperdiet eleifend. Suspendisse rutrum, tortor id volutpat sagittis, elit urna luctus odio, ut congue massa felis eu ligula. Maecenas tempor, urna in eleifend eleifend, eros ante vehicula odio, vitae maximus ipsum sapien sed.')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu62 = () => {
  if (totalViyuHPToLose == 62)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc viverra finibus sapien, nec aliquam sem ornare elementum. Mauris a ornare nunc. Vestibulum placerat massa sit amet nisl faucibus, in euismod turpis sollicitudin. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean consectetur vel quam dapibus interdum. Maecenas lacinia dolor justo, at vestibulum ex sollicitudin eget. Nunc in velit. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu64 = () => {
  if (totalViyuHPToLose == 64)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eu elementum odio. Nulla imperdiet sit amet risus nec pharetra. Duis auctor, justo et sodales posuere, risus sapien maximus enim, at convallis lorem ex eu orci. Donec imperdiet dictum ex, semper fermentum diam auctor sit amet. In suscipit nec odio vitae Viyuverra. Nullam vitae hendrerit lectus, at accumsan mauris. Suspendisse facilisis quam eu imperdiet interdum. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu66 = () => {
  if (totalViyuHPToLose == 66)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec commodo rutrum ultrices. Nullam dapibus nisi ut nisl placerat malesuada. Proin luctus dignissim dui, vitae lacinia velit graViyuda ac. Proin et nisi ac mi ultricies blandit ac ac sem. Nullam id mattis libero. Sed euismod metus ut odio tincidunt, sed sodales metus blandit. Phasellus aliquam elit in lacinia ornare. Nullam suscipit ipsum ac auctor convallis. Donec tempor. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu68 = () => {
  if (totalViyuHPToLose == 68)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam ac dolor lobortis ante ornare scelerisque. Ut finibus luctus purus sit amet accumsan. Duis vel suscipit erat, nec molestie enim. Nullam bibendum odio nunc. Viyuvamus mollis fermentum ex, in dictum eros blandit nec. Sed sollicitudin quis tortor ac pharetra. Sed consectetur, turpis eu eleifend rutrum, nibh urna condimentum leo, eget interdum urna est nec sapien. Interdum et malesuada fames. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu70 = () => {
  if (totalViyuHPToLose == 70)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse pharetra purus elementum auctor varius. Morbi elementum mi nec iaculis pretium. Cras nec porta turpis. Nullam vehicula urna vitae volutpat sollicitudin. Aliquam erat volutpat. In vehicula ex in augue scelerisque bibendum. Suspendisse cursus neque at mauris feugiat mattis. Ut at congue justo. Phasellus elementum aliquet graViyuda. Aliquam rhoncus vulputate est eget efficitur. Cras tristique elit non tellus consequat iaculis. Nunc sit. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu72 = () => {
  if (totalViyuHPToLose == 72)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc sodales, elit sed posuere laoreet, ante mi maximus velit, vel accumsan sem metus vel justo. Curabitur nec tincidunt tellus, at laoreet felis. Fusce eu luctus felis. Morbi varius, turpis eu aliquam auctor, magna ante interdum nulla, quis maximus magna felis nec nisl. Viyuvamus vitae ullamcorper dolor. Donec feugiat in dolor in maximus. Integer viverra dui sit amet nulla tristique, sit amet suscipit leo. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu74 = () => {
  if (totalViyuHPToLose == 74)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi quis magna a justo bibendum dictum sit amet sit amet ex. Aenean quis hendrerit urna, ut ullamcorper nisi. Aenean a nunc consectetur, pharetra lectus non, rhoncus sapien. Sed quis nulla graViyuda, interdum turpis a, faucibus est. Curabitur a odio vitae ex tristique luctus vitae a sem. Nulla congue vel lacus eget varius. Aliquam fermentum nibh quis diam dictum, vel porta justo rhoncus. Morbi at rhoncus. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu76 = () => {
  if (totalViyuHPToLose == 76)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque nec euismod est. Cras tincidunt tempus blandit. Vestibulum vel tortor sed ligula vestibulum aliquet sit amet vel tellus. Mauris vitae ultricies nibh. Integer eu augue non nulla consectetur cursus. Fusce diam purus, faucibus non interdum sed, varius eget tellus. Suspendisse vehicula justo diam, ac fringilla eros sagittis sit amet. Suspendisse non justo lacinia, tempor libero pulViyunar, efficitur arcu. Nunc vitae enim vestibulum massa interdum volutpat sit amet. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu78 = () => {
  if (totalViyuHPToLose == 78)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec augue arcu, fringilla vitae tempus vel, ultricies commodo turpis. Pellentesque ut risus luctus, accumsan dolor eget, luctus felis. Suspendisse ac egestas nunc. Sed viverra felis nec lectus tempor feugiat. Nunc tincidunt finibus turpis non luctus. Nullam orci nisl, porttitor ut neque in, malesuada porta nisi. Phasellus sollicitudin magna faucibus est lobortis, ornare mollis lacus sodales. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu80 = () => {
  if (totalViyuHPToLose == 80)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas congue dignissim cursus. Viyuvamus id nulla ut risus pellentesque semper. Pellentesque lobortis augue eget ultrices molestie. Nunc euismod massa a lectus varius sollicitudin. Sed dictum quis est placerat porta. Ut malesuada feugiat nisi et accumsan. Morbi et pulViyunar nunc. Proin fringilla condimentum metus, id blandit mauris egestas in. Fusce tincidunt, nisi eget ornare fermentum, elit erat dictum nulla, tristique iaculis leo massa in orci. Ut aliquam efficitur lacus, in commodo nibh.')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu82 = () => {
  if (totalViyuHPToLose == 82)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec auctor felis ligula, sit amet pulViyunar arcu porta quis. Mauris ultrices tristique neque, id ullamcorper nisi pharetra sit amet. Nam commodo leo sit amet sollicitudin vehicula. Morbi congue tellus risus, eu dapibus ex consequat id. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Pellentesque vestibulum arcu diam, non ornare dui volutpat sollicitudin. Nunc vitae massa in leo volutpat fermentum nec eu lectus. Sed sit amet finibus dui, sed. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu84 = () => {
  if (totalViyuHPToLose == 84)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus dictum velit vitae nunc ultrices, non sagittis eros euismod. Donec mattis leo id tempor tristique. In dignissim tempus augue, et posuere eros tempus sed. Suspendisse in ex felis. Ut faucibus blandit imperdiet. Sed convallis quam quis augue viverra rutrum. Ut sapien orci, scelerisque blandit nulla sit amet, malesuada sollicitudin justo. Proin et nulla consequat, fermentum eros non, rutrum orci. Suspendisse porttitor viverra tortor sed consequat. Etiam et augue ac metus condimentum finibus. Nunc vel dictum. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu86 = () => {
  if (totalViyuHPToLose == 86)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. In a rutrum lorem, vel congue libero. Maecenas egestas tincidunt mauris, ut interdum turpis eleifend id. Mauris consectetur metus id eros consectetur graViyuda. Viyuvamus eget velit ipsum. Nunc porta tortor eu est imperdiet fringilla. Curabitur vel nibh ac odio imperdiet ultricies. Donec tempus ante non libero euismod dapibus. Aenean faucibus consectetur bibendum. Morbi sollicitudin, enim id congue laoreet, elit dui volutpat metus, non egestas ante tortor sit amet ex. Mauris sagittis pulViyunar finibus. Integer non vehicula lectus, ut. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu88 = () => {
  if (totalViyuHPToLose == 88)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla arcu odio, vulputate eu tortor ac, convallis convallis ipsum. Proin imperdiet luctus odio id vehicula. Sed congue posuere tristique. Viyuvamus accumsan luctus tellus. Mauris porttitor leo et metus convallis elementum. Suspendisse in urna pharetra, eleifend arcu et, porttitor lectus. Viyuvamus eros tellus, volutpat in est accumsan, bibendum congue est. Phasellus dignissim consequat sem, in rutrum lorem interdum nec. Phasellus facilisis lectus eu eros condimentum, vel luctus justo eleifend. Fusce venenatis ipsum ut ante tincidunt commodo. Suspendisse potenti. Sed volutpat. .')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyu90 = () => {
  if (totalViyuHPToLose == 90)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam eu dignissim neque. Quisque a commodo diam. Cras in accumsan nisl. Maecenas vitae scelerisque arcu, at pretium ipsum. Nam tincidunt ullamcorper congue. Donec scelerisque, augue nec hendrerit vehicula, erat dui pellentesque odio, et viverra dolor felis nec sem. Praesent a lorem vel tellus feugiat ultricies. Etiam lacinia, sapien quis vulputate tincidunt, nisi lacus ornare augue, elementum efficitur elit diam in nibh. Suspendisse ullamcorper mollis purus, at tincidunt odio porta rhoncus. Quisque efficitur nisl nibh, id auctor libero viverra ac. In hac. ')}}>
Copy {totalViyuHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

//Lucereb - min - timers//

const DelayComponentLucerebMinLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTimeMin3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' mt='25px' fontSize='md'>
      	<b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentLucerebMinLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTimeMin3SecPerHP10MinTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalLucerebMins10} minutes and {totalLucerebSecs10} seconds </Text>)
  return (   <Timer initialTime={totalLoopTimeMin3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'>
      	<b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
  
  const DelayComponentLucerebMinLoop3 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP10MinTimeVal3)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 3: </b>{totalLucerebMins10} minutes and {totalLucerebSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP10MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentLucerebMinLoop4 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP10MinTimeVal4)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 4: </b>{totalLucerebMins10} minutes and {totalLucerebSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP10MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentLucerebMinLoop5 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP10MinTimeVal5)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 5: </b>{totalLucerebMins10} minutes and {totalLucerebSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP10MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentLucerebMinLoop6 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP10MinTimeVal6)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 6: </b>{totalLucerebMins10} minutes and {totalLucerebSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP10MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentLucerebMinLoop7 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP10MinTimeVal7)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 7: </b>{totalLucerebMins10} minutes and {totalLucerebSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP10MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };

  

  const DelayComponentLucerebMinLoopFinal = () => {
      const [show, setShow] = React.useState(false)
    
      React.useEffect(() => {
        const timeout = setTimeout(() => {
          setShow(true)
        }, totalWhenToStartFinalLucerebLoopMin)
        return () => clearTimeout(timeout)
      }, [show])
      if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
        <b>Final Loop: </b>{totalLucerebFinalMins} minutes and {totalLucerebFinalSecs} seconds<br /></Text>)
      return (   <Timer initialTime={totalFinalLoopSecsLucerebMin}
      direction="backward"
          timeToUpdate={10}>
        {({ start, resume, pause, stop, reset, timerState }) => (
          <React.Fragment>
            <div>
            <Text mb='8px' fontSize='md'>
              <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
            </div>
          </React.Fragment>
        )}
      </Timer>
    )
    };


//Lucereb - timers//

const DelayComponentLucerebLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' mt='25px' fontSize='md'>
		  <b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentLucerebLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10MinTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'>
		  <b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop3 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal3)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 3: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop4 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal4)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 4: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 4: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop5 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal5)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 5: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop6 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal6)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 6: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop7 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal7)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 7: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop8 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal8)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 8: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentLucerebLoop9 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal9)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 9: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentLucerebLoop10 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal10)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 10: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 10: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentLucerebLoop11 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal11)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 11: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 11: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentLucerebLoop12 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal12)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 12: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 12: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentLucerebLoop13 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal13)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 13: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 13: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentLucerebLoop14 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal14)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 14: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 14: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentLucerebLoop15 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal15)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 15: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 15: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop16 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal16)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 16: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 16: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop17 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal17)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 17: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 17: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop18 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal18)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 18: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 18: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop19 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal19)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 19: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 19: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop20 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10MinTimeVal20)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 20: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 20: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop21 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10MinTimeVal21)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 21: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 21: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop22 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10MinTimeVal22)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 22: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 22: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop23 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10MinTimeVal23)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 23: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 23: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop24 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10MinTimeVal24)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 24: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 24: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop25 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10MinTimeVal25)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 25: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 25: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop26 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10MinTimeVal26)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 26: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 26: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop27 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10MinTimeVal27)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 27: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 27: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop28 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10MinTimeVal28)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 28: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 28: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop29 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10MinTimeVal29)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 33: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 33: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop30 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal30)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 30: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 30: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop31 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal31)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 31: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 31: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop32 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal32)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 32: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 32: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop33 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal33)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 33: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 33: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop34 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal34)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 34: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 34: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop35 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal35)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 35: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 35: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop36 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal36)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 36: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 36: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop37 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal37)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 37: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 37: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop38 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal38)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 38: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 38: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop39 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal39)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 39: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 39: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop40 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal40)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 40: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 40: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop41 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal41)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 41: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 41: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop42 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal42)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 42: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 42: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop43 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal43)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 43: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 43: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop44 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal44)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 44: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 44: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop45 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal45)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 45: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 45: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop46 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal46)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 46: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 46: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop47 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal47)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 47: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 47: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop48 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal48)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 48: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 48: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop49 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal49)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 49: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 49: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop50 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP10minTimeVal50)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 50: </b>{totalLucerebMins75} minutes and {totalLucerebSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP10MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 50: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentLucerebLoop4x = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, (((Math.ceil((600/6)*.9))*6)*1000))
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (
    <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
    }} >
        <Text mt='15px' pt='10px'  fontSize='md' style={{color: '#7a7a7a'}}>
          At ~1 mins remaining:
  the timer will flash 1x, then show the 4x reward multiplier</Text>
      </Container>
    )
return (   <Timer initialTime={totalFinalLoopSecsVoidWignow}
direction="backward"
    timeToUpdate={10}>
  {({ start, resume, pause, stop, reset, timerState }) => (
    <React.Fragment>
      <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
    }} >
        <Text mt='15px' pt='25px' fontSize='md'><span>When you see the </span><span style={{color: '#B794F4'}}><b>x4 multiplier</b></span><span>, <b><i>type</i></b> at least 1 word</span></Text>
      </Container>
    </React.Fragment>
  )}
</Timer>
)
};

const DelayComponentLucerebLoopFinal = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalWhenToStartFinalLucerebLoop)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Final Loop: </b>0 minutes and {totalLeftoverLucerebTime} seconds </Text>)
  return (   <Timer initialTime={totalFinalLoopSecsLucereb}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'>
		  <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const Lucereb4 = () => {
  if (totalLucerebBackTo100 == 4)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb5 = () => {
  if (totalLucerebBackTo100 == 5)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb6 = () => {
  if (totalLucerebBackTo100 == 6)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb7 = () => {
  if (totalLucerebBackTo100 == 7)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb8 = () => {
  if (totalLucerebBackTo100 == 8)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb9 = () => {
  if (totalLucerebBackTo100 == 9)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb10 = () => {
  if (totalLucerebBackTo100 == 10)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb11 = () => {
  if (totalLucerebBackTo100 == 11)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Lucereb12 = () => {
  if (totalLucerebBackTo100 == 12)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Lucereb13 = () => {
  if (totalLucerebBackTo100 == 13)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc ex sodales.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Lucereb14 = () => {
  if (totalLucerebBackTo100 == 14)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at ex sodales.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Lucereb15 = () => {
  if (totalLucerebBackTo100 == 15)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Lucereb16 = () => {
  if (totalLucerebBackTo100 == 16)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales consequat.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}


const Lucereb17 = () => {
  if (totalLucerebBackTo100 == 17)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus orci. ')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Lucereb18 = () => {
  if (totalLucerebBackTo100 == 18)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in orci. ')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Lucereb19 = () => {
  if (totalLucerebBackTo100 == 19)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius. ')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Lucereb20 = () => {
  if (totalLucerebBackTo100 == 20)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque. ')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Lucereb21 = () => {
  if (totalLucerebBackTo100 == 21)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus.')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Lucereb22 = () => {
  if (totalLucerebBackTo100 == 22)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus et. ')}}>
Copy {totalLucerebBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Lucereb26 = () => {
  if (totalLucerebHPToLose == 26)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam vel ante quam. Nulla egestas auctor enim non rhoncus. Maecenas feugiat dapibus lacus nec graLucerebda. Quisque dictum.')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb28 = () => {
  if (totalLucerebHPToLose == 28)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam non purus feugiat, graLucerebda dolor eget, porta mi. Aliquam iaculis elit diam. Ut id blandit dui. Nulla et dolor.')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb30 = () => {
  if (totalLucerebHPToLose == 30)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rhoncus euismod lacus ut lobortis. Maecenas tincidunt lacus quis interdum faucibus. Aliquam erat volutpat. Vestibulum semper est in condimentum mattis. Suspendisse.')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb32 = () => {
  if (totalLucerebHPToLose == 32)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec faucibus risus justo, ac consectetur orci maximus nec. Proin placerat, lectus nec tempus cursus, augue nibh eleifend erat, at porttitor nulla arcu in.')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb34 = () => {
  if (totalLucerebHPToLose == 34)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus diam tellus, volutpat Lucerebtae dapibus vel, convallis auctor tellus. Cras fringilla tincidunt lorem, quis sagittis odio accumsan at. Sed nec dictum diam. Cras ac pulLucerebnar.')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb36 = () => {
  if (totalLucerebHPToLose == 36)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus mollis egestas ex. Lucerebvamus tempus neque odio, nec scelerisque ipsum vehicula sit amet. Duis nisl dolor, posuere sed ante vel, euismod faucibus nisi. Donec nulla leo, aliquet.')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb38 = () => {
  if (totalLucerebHPToLose == 38)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque feugiat aliquam ipsum ac auctor. Phasellus a nisi auctor, tempus felis eget, porta felis. Maecenas et tempor nisi. Aenean metus arcu, posuere sit amet nunc vel, cursus porttitor nisl.')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb40 = () => {
  if (totalLucerebHPToLose == 40)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Lucerebvamus at est et ipsum suscipit lacinia nec sit amet turpis. Vestibulum nec ex nibh. Etiam consequat et justo sit amet commodo. Suspendisse mattis semper arcu eget fermentum. Donec eu nisi elementum.')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb42 = () => {
  if (totalLucerebHPToLose == 42)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ac aliquam nunc. Sed Lucerebtae tellus a tellus dictum condimentum. Nunc volutpat feugiat justo. Fusce vulputate ligula nisl, sed ullamcorper libero imperdiet sit amet. In fermentum sed metus nec pellentesque. Duis eget tellus. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb44 = () => {
  if (totalLucerebHPToLose == 44)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus vehicula volutpat ligula eu efficitur. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris mollis et odio eu placerat. Phasellus mollis eleifend orci, eget pulLucerebnar sem Lucerebverra eu. Nam turpis. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb46 = () => {
  if (totalLucerebHPToLose == 46)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer aliquam mauris ac dignissim hendrerit. Suspendisse leo nulla, hendrerit ultrices diam interdum, consequat mollis sapien. Donec ac placerat leo. In ante libero, facilisis sit amet quam in, iaculis commodo nisl. Aliquam tincidunt nunc massa, sit amet Lucerebverra.')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb48 = () => {
  if (totalLucerebHPToLose == 48)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis eu ligula ac ipsum tempus tristique ac at urna. Phasellus accumsan erat ac dui elementum fringilla. Phasellus sagittis et mi ac malesuada. Nam eleifend mi in velit auctor, vel mollis massa volutpat. Ut tempus lorem diam, a sollicitudin ex.')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb50 = () => {
  if (totalLucerebHPToLose == 50)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam consequat blandit eros, pellentesque vulputate tortor imperdiet et. In hac habitasse platea dictumst. Aenean non dapibus diam, Lucerebtae suscipit augue. Phasellus ut aliquam magna, nec efficitur lacus. Pellentesque lacus sapien, vulputate in blandit at, venenatis vestibulum magna. Nullam quis facilisis dui. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb52 = () => {
  if (totalLucerebHPToLose == 52)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eros odio, pellentesque quis tellus at, consectetur lobortis sem. Etiam turpis libero, Lucerebverra at malesuada ac, fringilla consectetur orci. Etiam sed convallis magna. Morbi feugiat rutrum metus Lucerebtae placerat. Cras fermentum convallis posuere. Lucerebvamus hendrerit neque id pharetra consectetur. Etiam fringilla augue et. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb54 = () => {
  if (totalLucerebHPToLose == 54)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec id posuere est, a ultrices nisi. In porttitor ligula vel arcu dapibus, vel interdum magna ultricies. Aenean odio ante, ultrices Lucerebtae fermentum sed, aliquam eu tellus. Vestibulum mattis dignissim sollicitudin. Integer mollis, lorem et convallis elementum, lorem nisi vehicula dolor, congue vulputate metus eros id. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb56 = () => {
  if (totalLucerebHPToLose == 56)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce blandit Lucerebverra neque, iaculis blandit urna vulputate et. Etiam eu imperdiet nulla, ut malesuada mi. Nullam ex nisi, fringilla eget orci sed, porta porttitor tellus. Donec nec turpis feugiat, commodo eros in, sodales lacus. Maecenas fermentum lacus posuere mauris placerat tempus. Mauris a lectus tincidunt, aliquet nunc. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb58 = () => {
  if (totalLucerebHPToLose == 58)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam feugiat erat libero, et auctor lorem maximus et. Nam vel massa sed eros luctus finibus nec Lucerebtae augue. In pellentesque tortor vel pulLucerebnar efficitur. Aenean non nunc volutpat, semper lacus quis, dignissim erat. Phasellus dignissim, leo et finibus maximus, nunc est dignissim augue, quis placerat urna ligula sit amet. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb60 = () => {
  if (totalLucerebHPToLose == 60)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ut sapien ac lacus porttitor aliquam at at nulla. Lucerebvamus pharetra pulLucerebnar elementum. Nullam imperdiet augue vel eros imperdiet eleifend. Suspendisse rutrum, tortor id volutpat sagittis, elit urna luctus odio, ut congue massa felis eu ligula. Maecenas tempor, urna in eleifend eleifend, eros ante vehicula odio, Lucerebtae maximus ipsum sapien sed.')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb62 = () => {
  if (totalLucerebHPToLose == 62)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc Lucerebverra finibus sapien, nec aliquam sem ornare elementum. Mauris a ornare nunc. Vestibulum placerat massa sit amet nisl faucibus, in euismod turpis sollicitudin. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean consectetur vel quam dapibus interdum. Maecenas lacinia dolor justo, at vestibulum ex sollicitudin eget. Nunc in velit. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb64 = () => {
  if (totalLucerebHPToLose == 64)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eu elementum odio. Nulla imperdiet sit amet risus nec pharetra. Duis auctor, justo et sodales posuere, risus sapien maximus enim, at convallis lorem ex eu orci. Donec imperdiet dictum ex, semper fermentum diam auctor sit amet. In suscipit nec odio Lucerebtae Lucerebverra. Nullam Lucerebtae hendrerit lectus, at accumsan mauris. Suspendisse facilisis quam eu imperdiet interdum. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb66 = () => {
  if (totalLucerebHPToLose == 66)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec commodo rutrum ultrices. Nullam dapibus nisi ut nisl placerat malesuada. Proin luctus dignissim dui, Lucerebtae lacinia velit graLucerebda ac. Proin et nisi ac mi ultricies blandit ac ac sem. Nullam id mattis libero. Sed euismod metus ut odio tincidunt, sed sodales metus blandit. Phasellus aliquam elit in lacinia ornare. Nullam suscipit ipsum ac auctor convallis. Donec tempor. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb68 = () => {
  if (totalLucerebHPToLose == 68)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam ac dolor lobortis ante ornare scelerisque. Ut finibus luctus purus sit amet accumsan. Duis vel suscipit erat, nec molestie enim. Nullam bibendum odio nunc. Lucerebvamus mollis fermentum ex, in dictum eros blandit nec. Sed sollicitudin quis tortor ac pharetra. Sed consectetur, turpis eu eleifend rutrum, nibh urna condimentum leo, eget interdum urna est nec sapien. Interdum et malesuada fames. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb70 = () => {
  if (totalLucerebHPToLose == 70)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse pharetra purus elementum auctor varius. Morbi elementum mi nec iaculis pretium. Cras nec porta turpis. Nullam vehicula urna Lucerebtae volutpat sollicitudin. Aliquam erat volutpat. In vehicula ex in augue scelerisque bibendum. Suspendisse cursus neque at mauris feugiat mattis. Ut at congue justo. Phasellus elementum aliquet graLucerebda. Aliquam rhoncus vulputate est eget efficitur. Cras tristique elit non tellus consequat iaculis. Nunc sit. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb72 = () => {
  if (totalLucerebHPToLose == 72)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc sodales, elit sed posuere laoreet, ante mi maximus velit, vel accumsan sem metus vel justo. Curabitur nec tincidunt tellus, at laoreet felis. Fusce eu luctus felis. Morbi varius, turpis eu aliquam auctor, magna ante interdum nulla, quis maximus magna felis nec nisl. Lucerebvamus Lucerebtae ullamcorper dolor. Donec feugiat in dolor in maximus. Integer Lucerebverra dui sit amet nulla tristique, sit amet suscipit leo. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb74 = () => {
  if (totalLucerebHPToLose == 74)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi quis magna a justo bibendum dictum sit amet sit amet ex. Aenean quis hendrerit urna, ut ullamcorper nisi. Aenean a nunc consectetur, pharetra lectus non, rhoncus sapien. Sed quis nulla graLucerebda, interdum turpis a, faucibus est. Curabitur a odio Lucerebtae ex tristique luctus Lucerebtae a sem. Nulla congue vel lacus eget varius. Aliquam fermentum nibh quis diam dictum, vel porta justo rhoncus. Morbi at rhoncus. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb76 = () => {
  if (totalLucerebHPToLose == 76)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque nec euismod est. Cras tincidunt tempus blandit. Vestibulum vel tortor sed ligula vestibulum aliquet sit amet vel tellus. Mauris Lucerebtae ultricies nibh. Integer eu augue non nulla consectetur cursus. Fusce diam purus, faucibus non interdum sed, varius eget tellus. Suspendisse vehicula justo diam, ac fringilla eros sagittis sit amet. Suspendisse non justo lacinia, tempor libero pulLucerebnar, efficitur arcu. Nunc Lucerebtae enim vestibulum massa interdum volutpat sit amet. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb78 = () => {
  if (totalLucerebHPToLose == 78)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec augue arcu, fringilla Lucerebtae tempus vel, ultricies commodo turpis. Pellentesque ut risus luctus, accumsan dolor eget, luctus felis. Suspendisse ac egestas nunc. Sed Lucerebverra felis nec lectus tempor feugiat. Nunc tincidunt finibus turpis non luctus. Nullam orci nisl, porttitor ut neque in, malesuada porta nisi. Phasellus sollicitudin magna faucibus est lobortis, ornare mollis lacus sodales. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb80 = () => {
  if (totalLucerebHPToLose == 80)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas congue dignissim cursus. Lucerebvamus id nulla ut risus pellentesque semper. Pellentesque lobortis augue eget ultrices molestie. Nunc euismod massa a lectus varius sollicitudin. Sed dictum quis est placerat porta. Ut malesuada feugiat nisi et accumsan. Morbi et pulLucerebnar nunc. Proin fringilla condimentum metus, id blandit mauris egestas in. Fusce tincidunt, nisi eget ornare fermentum, elit erat dictum nulla, tristique iaculis leo massa in orci. Ut aliquam efficitur lacus, in commodo nibh.')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb82 = () => {
  if (totalLucerebHPToLose == 82)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec auctor felis ligula, sit amet pulLucerebnar arcu porta quis. Mauris ultrices tristique neque, id ullamcorper nisi pharetra sit amet. Nam commodo leo sit amet sollicitudin vehicula. Morbi congue tellus risus, eu dapibus ex consequat id. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Pellentesque vestibulum arcu diam, non ornare dui volutpat sollicitudin. Nunc Lucerebtae massa in leo volutpat fermentum nec eu lectus. Sed sit amet finibus dui, sed. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb84 = () => {
  if (totalLucerebHPToLose == 84)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus dictum velit Lucerebtae nunc ultrices, non sagittis eros euismod. Donec mattis leo id tempor tristique. In dignissim tempus augue, et posuere eros tempus sed. Suspendisse in ex felis. Ut faucibus blandit imperdiet. Sed convallis quam quis augue Lucerebverra rutrum. Ut sapien orci, scelerisque blandit nulla sit amet, malesuada sollicitudin justo. Proin et nulla consequat, fermentum eros non, rutrum orci. Suspendisse porttitor Lucerebverra tortor sed consequat. Etiam et augue ac metus condimentum finibus. Nunc vel dictum. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb86 = () => {
  if (totalLucerebHPToLose == 86)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. In a rutrum lorem, vel congue libero. Maecenas egestas tincidunt mauris, ut interdum turpis eleifend id. Mauris consectetur metus id eros consectetur graLucerebda. Lucerebvamus eget velit ipsum. Nunc porta tortor eu est imperdiet fringilla. Curabitur vel nibh ac odio imperdiet ultricies. Donec tempus ante non libero euismod dapibus. Aenean faucibus consectetur bibendum. Morbi sollicitudin, enim id congue laoreet, elit dui volutpat metus, non egestas ante tortor sit amet ex. Mauris sagittis pulLucerebnar finibus. Integer non vehicula lectus, ut. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb88 = () => {
  if (totalLucerebHPToLose == 88)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla arcu odio, vulputate eu tortor ac, convallis convallis ipsum. Proin imperdiet luctus odio id vehicula. Sed congue posuere tristique. Lucerebvamus accumsan luctus tellus. Mauris porttitor leo et metus convallis elementum. Suspendisse in urna pharetra, eleifend arcu et, porttitor lectus. Lucerebvamus eros tellus, volutpat in est accumsan, bibendum congue est. Phasellus dignissim consequat sem, in rutrum lorem interdum nec. Phasellus facilisis lectus eu eros condimentum, vel luctus justo eleifend. Fusce venenatis ipsum ut ante tincidunt commodo. Suspendisse potenti. Sed volutpat. .')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Lucereb90 = () => {
  if (totalLucerebHPToLose == 90)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam eu dignissim neque. Quisque a commodo diam. Cras in accumsan nisl. Maecenas Lucerebtae scelerisque arcu, at pretium ipsum. Nam tincidunt ullamcorper congue. Donec scelerisque, augue nec hendrerit vehicula, erat dui pellentesque odio, et Lucerebverra dolor felis nec sem. Praesent a lorem vel tellus feugiat ultricies. Etiam lacinia, sapien quis vulputate tincidunt, nisi lacus ornare augue, elementum efficitur elit diam in nibh. Suspendisse ullamcorper mollis purus, at tincidunt odio porta rhoncus. Quisque efficitur nisl nibh, id auctor libero Lucerebverra ac. In hac. ')}}>
Copy {totalLucerebHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

//Vanvri - min - timers//

const DelayComponentVanvriMinLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' mt='25px' fontSize='md'>
      	<b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentVanvriMinLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTimeMin3SecPerHP20MinTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
  return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'>
      	<b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
  
  const DelayComponentVanvriMinLoop3 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP20MinTimeVal3)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 3: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentVanvriMinLoop4 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP20MinTimeVal4)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 4: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentVanvriMinLoop5 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP20MinTimeVal5)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 5: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentVanvriMinLoop6 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP20MinTimeVal6)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 6: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentVanvriMinLoop7 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP20MinTimeVal7)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 7: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };


  const DelayComponentVanvriMinLoop8 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP20MinTimeVal8)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 8: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentVanvriMinLoop9 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP20MinTimeVal9)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 9: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentVanvriMinLoop10 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP20MinTimeVal10)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 10: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 10: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentVanvriMinLoop11 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP20MinTimeVal11)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 11: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 11: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };

  
  const DelayComponentVanvriMinLoop12 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP20MinTimeVal12)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 12: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 12: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  
  const DelayComponentVanvriMinLoop13 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP20MinTimeVal13)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 13: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 13: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  
  const DelayComponentVanvriMinLoop14 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP20MinTimeVal14)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 14: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 14: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  
  const DelayComponentVanvriMinLoop15 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3SecPerHP20MinTimeVal15)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 15: </b>{totalVanvriMins10} minutes and {totalVanvriSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3SecPerHP20MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 15: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };

  
  const DelayComponentVanvriMinLoopFinal = () => {
      const [show, setShow] = React.useState(false)
    
      React.useEffect(() => {
        const timeout = setTimeout(() => {
          setShow(true)
        }, totalWhenToStartFinalVanvriLoopMin)
        return () => clearTimeout(timeout)
      }, [show])
      if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
        <b>Final Loop: </b>{totalVanvriFinalMins} minutes and {totalVanvriFinalSecs} seconds </Text>)
      return (   <Timer initialTime={totalFinalLoopSecsVanvriMin}
      direction="backward"
          timeToUpdate={10}>
        {({ start, resume, pause, stop, reset, timerState }) => (
          <React.Fragment>
            <div>
            <Text mb='8px' fontSize='md'>
              <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
            </div>
          </React.Fragment>
        )}
      </Timer>
    )
    };

//Vanvri - timers//

const DelayComponentVanvriLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' mt='25px' fontSize='md'>
		  <b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentVanvriLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'>
		  <b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop3 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal3)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 3: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop4 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal4)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 4: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 4: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop5 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal5)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 5: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop6 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal6)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 6: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop7 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal7)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 7: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop8 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal8)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 8: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanvriLoop9 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal9)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 9: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanvriLoop10 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal10)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 10: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 10: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanvriLoop11 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal11)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 11: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 11: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanvriLoop12 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal12)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 12: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 12: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanvriLoop13 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal13)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 13: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 13: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanvriLoop14 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal14)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 14: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 14: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentVanvriLoop15 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal15)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 15: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 15: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop16 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal16)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 16: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 16: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop17 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal17)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 17: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 17: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop18 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal18)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 18: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 18: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop19 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal19)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 19: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 19: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop20 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal20)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 20: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 20: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop21 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal21)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 21: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 21: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop22 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal22)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 22: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 22: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop23 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal23)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 23: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 23: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop24 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal24)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 24: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 24: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop25 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal25)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 25: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 25: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop26 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal26)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 26: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 26: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop27 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal27)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 27: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 27: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop28 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal28)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 28: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 28: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop29 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal29)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 33: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 33: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop30 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal30)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 30: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 30: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop31 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal31)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 31: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 31: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop32 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal32)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 32: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 32: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop33 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal33)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 33: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 33: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop34 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal34)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 34: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 34: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop35 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal35)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 35: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 35: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop36 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal36)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 36: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 36: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop37 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal37)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 37: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 37: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop38 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal38)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 38: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 38: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop39 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal39)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 39: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 39: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop40 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal40)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 40: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 40: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop41 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal41)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 41: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 41: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop42 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal42)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 42: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 42: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop43 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal43)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 43: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 43: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop44 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal44)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 44: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 44: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop45 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal45)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 45: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 45: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop46 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal46)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 46: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 46: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop47 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal47)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 47: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 47: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop48 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal48)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 48: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 48: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop49 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal49)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 49: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 49: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop50 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal50)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 50: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 50: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop51 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal51)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 51: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 51: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop52 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal52)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 52: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 52: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop53 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal53)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 53: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 53: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop54 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal54)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 54: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 54: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop55 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal55)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 55: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 55: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop56 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal56)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 56: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 56: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop57 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal57)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 57: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 57: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop58 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal58)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 58: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 58: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop59 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal59)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 59: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 59: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop60 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal60)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 60: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 60: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop61 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal61)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 61: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 61: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop62 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal62)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 62: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 62: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop63 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal63)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 63: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 63: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop64 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal64)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 64: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 64: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop65 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal65)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 65: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 65: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop66 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal66)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 66: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 66: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop67 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal67)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 67: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 67: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop68 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal68)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 68: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 68: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop69 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal69)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 69: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 69: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop70 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal70)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 70: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 70: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop71 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal71)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 71: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 71: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop72 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal72)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 72: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 72: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop73 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal73)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 73: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 73: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop74 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal74)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 74: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 74: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop75 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal75)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 75: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 75: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop76 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal76)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 76: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 76: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop77 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal77)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 77: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 77: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop78 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal78)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 78: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 78: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop79 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal79)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 79: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 79: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop80 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal80)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 80: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 80: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop81 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal81)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 81: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 81: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop82 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal82)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 82: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 82: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop83 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal83)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 83: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 83: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop84 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal84)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 84: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 84: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop85 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal85)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 85: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 85: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop86 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal86)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 86: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 86: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop87 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal87)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 87: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 87: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop88 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal88)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 88: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 88: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop89 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal89)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 89: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 89: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop90 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal90)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 90: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 90: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop91 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal91)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 91: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 91: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop92 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal92)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 92: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 92: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop93 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal93)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 93: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 93: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop94 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal94)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 94: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 94: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop95 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal95)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 95: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 95: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop96 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal96)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 96: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 96: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop97 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal97)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 97: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 97: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop98 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal98)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 98: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 98: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop99 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal99)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 99: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 99: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop100 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3SecPerHP20MinTimeVal100)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 100: </b>{totalVanvriMins75} minutes and {totalVanvriSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3SecPerHP20MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 100: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentVanvriLoop4x = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, (((Math.ceil((1200/6)*.9))*6)*1000))
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (
    <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
    }} >
        <Text mt='15px' pt='10px'  fontSize='md' style={{color: '#7a7a7a'}}>
        At ~2 mins remaining:<br />
  the timer will flash 1x, then show the 4x reward multiplier</Text>
      </Container>
    )
return (   <Timer initialTime={totalFinalLoopSecsVoidWignow}
direction="backward"
    timeToUpdate={10}>
  {({ start, resume, pause, stop, reset, timerState }) => (
    <React.Fragment>
      <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
    }} >
        <Text mt='15px' pt='25px' fontSize='md'><span>When you see the </span><span style={{color: '#B794F4'}}><b>x4 multiplier</b></span><span>, <b><i>type</i></b> at least 1 word</span></Text>
      </Container>
    </React.Fragment>
  )}
</Timer>
)
};


const DelayComponentVanvriLoopFinal = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalWhenToStartFinalVanvriLoop)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Final Loop: </b>0 minutes and {totalLeftoverVanvriTime} seconds </Text>)
  return (   <Timer initialTime={totalFinalLoopSecsVanvri}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'>
		  <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
		  <Text mb='8px' fontSize='md'><span>When you see the </span><span style={{color: '#B794F4'}}><b>x4 multiplier</b></span><span>, <b><i>type</i></b> at least 1 word</span></Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

  //Vanvri - min - it goes in its boxes precious//

  const VanvriTimerMin = () => {
    if (totalVanvriLoops == 1)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin2 = () => {
    if (totalVanvriLoops == 2)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin3 = () => {
    if (totalVanvriLoops == 3)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoop3 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin4 = () => {
    if (totalVanvriLoops == 4)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoop3 />
  <DelayComponentVanvriMinLoop4 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin5 = () => {
    if (totalVanvriLoops == 5)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoop3 />
  <DelayComponentVanvriMinLoop4 />
  <DelayComponentVanvriMinLoop5 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin6 = () => {
    if (totalVanvriLoops == 6)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoop3 />
  <DelayComponentVanvriMinLoop4 />
  <DelayComponentVanvriMinLoop5 />
  <DelayComponentVanvriMinLoop6 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin7 = () => {
    if (totalVanvriLoops == 7)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoop3 />
  <DelayComponentVanvriMinLoop4 />
  <DelayComponentVanvriMinLoop5 />
  <DelayComponentVanvriMinLoop6 />
  <DelayComponentVanvriMinLoop7 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin8 = () => {
    if (totalVanvriLoops == 8)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoop3 />
  <DelayComponentVanvriMinLoop4 />
  <DelayComponentVanvriMinLoop5 />
  <DelayComponentVanvriMinLoop6 />
  <DelayComponentVanvriMinLoop7 />
  <DelayComponentVanvriMinLoop8 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin9 = () => {
    if (totalVanvriLoops == 9)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoop3 />
  <DelayComponentVanvriMinLoop4 />
  <DelayComponentVanvriMinLoop5 />
  <DelayComponentVanvriMinLoop6 />
  <DelayComponentVanvriMinLoop7 />
  <DelayComponentVanvriMinLoop8 />
  <DelayComponentVanvriMinLoop9 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin10 = () => {
    if (totalVanvriLoops == 10)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoop3 />
  <DelayComponentVanvriMinLoop4 />
  <DelayComponentVanvriMinLoop5 />
  <DelayComponentVanvriMinLoop6 />
  <DelayComponentVanvriMinLoop7 />
  <DelayComponentVanvriMinLoop8 />
  <DelayComponentVanvriMinLoop9 />
  <DelayComponentVanvriMinLoop10 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin11 = () => {
    if (totalVanvriLoops == 11)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoop3 />
  <DelayComponentVanvriMinLoop4 />
  <DelayComponentVanvriMinLoop5 />
  <DelayComponentVanvriMinLoop6 />
  <DelayComponentVanvriMinLoop7 />
  <DelayComponentVanvriMinLoop8 />
  <DelayComponentVanvriMinLoop9 />
  <DelayComponentVanvriMinLoop10 />
  <DelayComponentVanvriMinLoop11 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin12 = () => {
    if (totalVanvriLoops == 12)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoop3 />
  <DelayComponentVanvriMinLoop4 />
  <DelayComponentVanvriMinLoop5 />
  <DelayComponentVanvriMinLoop6 />
  <DelayComponentVanvriMinLoop7 />
  <DelayComponentVanvriMinLoop8 />
  <DelayComponentVanvriMinLoop9 />
  <DelayComponentVanvriMinLoop10 />
  <DelayComponentVanvriMinLoop11 />
  <DelayComponentVanvriMinLoop12 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin13 = () => {
    if (totalVanvriLoops == 13)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoop3 />
  <DelayComponentVanvriMinLoop4 />
  <DelayComponentVanvriMinLoop5 />
  <DelayComponentVanvriMinLoop6 />
  <DelayComponentVanvriMinLoop7 />
  <DelayComponentVanvriMinLoop8 />
  <DelayComponentVanvriMinLoop9 />
  <DelayComponentVanvriMinLoop10 />
  <DelayComponentVanvriMinLoop11 />
  <DelayComponentVanvriMinLoop12 />
  <DelayComponentVanvriMinLoop13 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin14 = () => {
    if (totalVanvriLoops == 14)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoop3 />
  <DelayComponentVanvriMinLoop4 />
  <DelayComponentVanvriMinLoop5 />
  <DelayComponentVanvriMinLoop6 />
  <DelayComponentVanvriMinLoop7 />
  <DelayComponentVanvriMinLoop8 />
  <DelayComponentVanvriMinLoop9 />
  <DelayComponentVanvriMinLoop10 />
  <DelayComponentVanvriMinLoop11 />
  <DelayComponentVanvriMinLoop12 />
  <DelayComponentVanvriMinLoop13 />
  <DelayComponentVanvriMinLoop14 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };

  const VanvriTimerMin15 = () => {
    if (totalVanvriLoops == 15)
      return(<Container>
  <DelayComponentVanvriMinLoop />
  <DelayComponentVanvriMinLoop2 />
  <DelayComponentVanvriMinLoop3 />
  <DelayComponentVanvriMinLoop4 />
  <DelayComponentVanvriMinLoop5 />
  <DelayComponentVanvriMinLoop6 />
  <DelayComponentVanvriMinLoop7 />
  <DelayComponentVanvriMinLoop8 />
  <DelayComponentVanvriMinLoop9 />
  <DelayComponentVanvriMinLoop10 />
  <DelayComponentVanvriMinLoop11 />
  <DelayComponentVanvriMinLoop12 />
  <DelayComponentVanvriMinLoop13 />
  <DelayComponentVanvriMinLoop14 />
  <DelayComponentVanvriMinLoop15 />
  <DelayComponentVanvriMinLoopFinal />
  <YayBattleEndVanvriMin />
  </Container>
  )
  };


//Vanvri - it goes in its boxes precious//



const VanvriTimer4 = () => {
  if (totalVanvri75Loops == 4)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer5 = () => {
  if (totalVanvri75Loops == 5)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri /></Container>
)
};

const VanvriTimer6 = () => {
  if (totalVanvri75Loops == 6)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};


const VanvriTimer7 = () => {
  if (totalVanvri75Loops == 7)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};


const VanvriTimer8 = () => {
  if (totalVanvri75Loops == 8)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer9 = () => {
  if (totalVanvri75Loops == 9)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer10 = () => {
  if (totalVanvri75Loops == 10)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer11 = () => {
  if (totalVanvri75Loops == 11)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer12 = () => {
  if (totalVanvri75Loops == 12)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer13 = () => {
  if (totalVanvri75Loops == 13)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer14 = () => {
  if (totalVanvri75Loops == 14)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer15 = () => {
  if (totalVanvri75Loops == 15)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer16 = () => {
  if (totalVanvri75Loops == 16)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer17 = () => {
  if (totalVanvri75Loops == 17)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer18 = () => {
  if (totalVanvri75Loops == 18)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer19 = () => {
  if (totalVanvri75Loops == 19)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer20 = () => {
  if (totalVanvri75Loops == 20)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer21 = () => {
  if (totalVanvri75Loops == 21)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer22 = () => {
  if (totalVanvri75Loops == 22)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer23 = () => {
  if (totalVanvri75Loops == 23)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer24 = () => {
  if (totalVanvri75Loops == 24)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer25 = () => {
  if (totalVanvri75Loops == 25)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer26 = () => {
  if (totalVanvri75Loops == 26)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer27 = () => {
  if (totalVanvri75Loops == 27)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer28 = () => {
  if (totalVanvri75Loops == 28)
    return(<Container>
<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer29 = () => {
  if (totalVanvri75Loops == 29)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer30 = () => {
  if (totalVanvri75Loops == 30)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer31 = () => {
  if (totalVanvri75Loops == 31)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer32 = () => {
  if (totalVanvri75Loops == 32)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer33 = () => {
  if (totalVanvri75Loops == 33)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer34 = () => {
  if (totalVanvri75Loops == 34)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer35 = () => {
  if (totalVanvri75Loops == 35)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer36 = () => {
  if (totalVanvri75Loops == 36)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer37 = () => {
  if (totalVanvri75Loops == 37)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer38 = () => {
  if (totalVanvri75Loops == 38)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer39 = () => {
  if (totalVanvri75Loops == 39)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer40 = () => {
  if (totalVanvri75Loops == 40)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer41 = () => {
  if (totalVanvri75Loops == 41)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer42 = () => {
  if (totalVanvri75Loops == 42)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer43 = () => {
  if (totalVanvri75Loops == 43)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer44 = () => {
  if (totalVanvri75Loops == 44)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer45 = () => {
  if (totalVanvri75Loops == 45)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer46 = () => {
  if (totalVanvri75Loops == 46)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer47 = () => {
  if (totalVanvri75Loops == 47)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer48 = () => {
  if (totalVanvri75Loops == 48)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer49 = () => {
  if (totalVanvri75Loops == 49)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer50 = () => {
  if (totalVanvri75Loops == 50)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer51 = () => {
  if (totalVanvri75Loops == 51)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer52 = () => {
  if (totalVanvri75Loops == 52)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer53 = () => {
  if (totalVanvri75Loops == 53)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer54 = () => {
  if (totalVanvri75Loops == 54)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer55 = () => {
  if (totalVanvri75Loops == 55)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer56 = () => {
  if (totalVanvri75Loops == 56)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer57 = () => {
  if (totalVanvri75Loops == 57)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer58 = () => {
  if (totalVanvri75Loops == 58)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer59 = () => {
  if (totalVanvri75Loops == 59)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer60 = () => {
  if (totalVanvri75Loops == 60)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer61 = () => {
  if (totalVanvri75Loops == 61)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer62 = () => {
  if (totalVanvri75Loops == 62)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer63 = () => {
  if (totalVanvri75Loops == 63)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer64 = () => {
  if (totalVanvri75Loops == 64)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer65 = () => {
  if (totalVanvri75Loops == 65)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer66 = () => {
  if (totalVanvri75Loops == 66)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer67 = () => {
  if (totalVanvri75Loops == 67)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer68 = () => {
  if (totalVanvri75Loops == 68)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer69 = () => {
  if (totalVanvri75Loops == 69)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer70 = () => {
  if (totalVanvri75Loops == 70)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer71 = () => {
  if (totalVanvri75Loops == 71)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer72 = () => {
  if (totalVanvri75Loops == 72)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer73 = () => {
  if (totalVanvri75Loops == 73)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer74 = () => {
  if (totalVanvri75Loops == 74)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer75 = () => {
  if (totalVanvri75Loops == 75)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer76 = () => {
  if (totalVanvri75Loops == 76)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer77 = () => {
  if (totalVanvri75Loops == 77)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer78 = () => {
  if (totalVanvri75Loops == 78)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer79 = () => {
  if (totalVanvri75Loops == 79)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer80 = () => {
  if (totalVanvri75Loops == 80)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer81 = () => {
  if (totalVanvri75Loops == 81)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer82 = () => {
  if (totalVanvri75Loops == 82)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer83 = () => {
  if (totalVanvri75Loops == 83)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer84 = () => {
  if (totalVanvri75Loops == 84)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer85 = () => {
  if (totalVanvri75Loops == 85)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer86 = () => {
  if (totalVanvri75Loops == 86)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer87 = () => {
  if (totalVanvri75Loops == 87)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer88 = () => {
  if (totalVanvri75Loops == 88)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />
<DelayComponentVanvriLoop88 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer89 = () => {
  if (totalVanvri75Loops == 89)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />
<DelayComponentVanvriLoop88 />
<DelayComponentVanvriLoop89 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer90 = () => {
  if (totalVanvri75Loops == 90)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />
<DelayComponentVanvriLoop88 />
<DelayComponentVanvriLoop89 />
<DelayComponentVanvriLoop90 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer91 = () => {
  if (totalVanvri75Loops == 91)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />
<DelayComponentVanvriLoop88 />
<DelayComponentVanvriLoop89 />
<DelayComponentVanvriLoop90 />
<DelayComponentVanvriLoop91 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer92 = () => {
  if (totalVanvri75Loops == 92)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />
<DelayComponentVanvriLoop88 />
<DelayComponentVanvriLoop89 />
<DelayComponentVanvriLoop90 />
<DelayComponentVanvriLoop91 />
<DelayComponentVanvriLoop92 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer93 = () => {
  if (totalVanvri75Loops == 93)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />
<DelayComponentVanvriLoop88 />
<DelayComponentVanvriLoop89 />
<DelayComponentVanvriLoop90 />
<DelayComponentVanvriLoop91 />
<DelayComponentVanvriLoop92 />
<DelayComponentVanvriLoop93 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer94 = () => {
  if (totalVanvri75Loops == 94)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />
<DelayComponentVanvriLoop88 />
<DelayComponentVanvriLoop89 />
<DelayComponentVanvriLoop90 />
<DelayComponentVanvriLoop91 />
<DelayComponentVanvriLoop92 />
<DelayComponentVanvriLoop93 />
<DelayComponentVanvriLoop94 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer95 = () => {
  if (totalVanvri75Loops == 95)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />
<DelayComponentVanvriLoop88 />
<DelayComponentVanvriLoop89 />
<DelayComponentVanvriLoop90 />
<DelayComponentVanvriLoop91 />
<DelayComponentVanvriLoop92 />
<DelayComponentVanvriLoop93 />
<DelayComponentVanvriLoop94 />
<DelayComponentVanvriLoop95 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer96 = () => {
  if (totalVanvri75Loops == 96)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />
<DelayComponentVanvriLoop88 />
<DelayComponentVanvriLoop89 />
<DelayComponentVanvriLoop90 />
<DelayComponentVanvriLoop91 />
<DelayComponentVanvriLoop92 />
<DelayComponentVanvriLoop93 />
<DelayComponentVanvriLoop94 />
<DelayComponentVanvriLoop95 />
<DelayComponentVanvriLoop96 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer97 = () => {
  if (totalVanvri75Loops == 97)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />
<DelayComponentVanvriLoop88 />
<DelayComponentVanvriLoop89 />
<DelayComponentVanvriLoop90 />
<DelayComponentVanvriLoop91 />
<DelayComponentVanvriLoop92 />
<DelayComponentVanvriLoop93 />
<DelayComponentVanvriLoop94 />
<DelayComponentVanvriLoop95 />
<DelayComponentVanvriLoop96 />
<DelayComponentVanvriLoop97 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer98 = () => {
  if (totalVanvri75Loops == 98)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />
<DelayComponentVanvriLoop88 />
<DelayComponentVanvriLoop89 />
<DelayComponentVanvriLoop90 />
<DelayComponentVanvriLoop91 />
<DelayComponentVanvriLoop92 />
<DelayComponentVanvriLoop93 />
<DelayComponentVanvriLoop94 />
<DelayComponentVanvriLoop95 />
<DelayComponentVanvriLoop96 />
<DelayComponentVanvriLoop97 />
<DelayComponentVanvriLoop98 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer99 = () => {
  if (totalVanvri75Loops == 99)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />
<DelayComponentVanvriLoop88 />
<DelayComponentVanvriLoop89 />
<DelayComponentVanvriLoop90 />
<DelayComponentVanvriLoop91 />
<DelayComponentVanvriLoop92 />
<DelayComponentVanvriLoop93 />
<DelayComponentVanvriLoop94 />
<DelayComponentVanvriLoop95 />
<DelayComponentVanvriLoop96 />
<DelayComponentVanvriLoop97 />
<DelayComponentVanvriLoop98 />
<DelayComponentVanvriLoop99 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const VanvriTimer100 = () => {
  if (totalVanvri75Loops == 100)
    return(<Container>

<DelayComponentVanvriLoop />
<DelayComponentVanvriLoop2 />
<DelayComponentVanvriLoop3 />
<DelayComponentVanvriLoop4 />
<DelayComponentVanvriLoop5 />
<DelayComponentVanvriLoop6 />
<DelayComponentVanvriLoop7 />
<DelayComponentVanvriLoop8 />
<DelayComponentVanvriLoop9 />
<DelayComponentVanvriLoop10 />
<DelayComponentVanvriLoop11 />
<DelayComponentVanvriLoop12 />
<DelayComponentVanvriLoop13 />
<DelayComponentVanvriLoop14 />
<DelayComponentVanvriLoop15 />
<DelayComponentVanvriLoop16 />
<DelayComponentVanvriLoop17 />
<DelayComponentVanvriLoop18 />
<DelayComponentVanvriLoop19 />
<DelayComponentVanvriLoop20 />
<DelayComponentVanvriLoop21 />
<DelayComponentVanvriLoop22 />
<DelayComponentVanvriLoop23 />
<DelayComponentVanvriLoop24 />
<DelayComponentVanvriLoop25 />
<DelayComponentVanvriLoop26 />
<DelayComponentVanvriLoop27 />
<DelayComponentVanvriLoop28 />
<DelayComponentVanvriLoop29 />
<DelayComponentVanvriLoop30 />
<DelayComponentVanvriLoop31 />
<DelayComponentVanvriLoop32 />
<DelayComponentVanvriLoop33 />
<DelayComponentVanvriLoop34 />
<DelayComponentVanvriLoop35 />
<DelayComponentVanvriLoop36 />
<DelayComponentVanvriLoop37 />
<DelayComponentVanvriLoop38 />
<DelayComponentVanvriLoop39 />
<DelayComponentVanvriLoop40 />
<DelayComponentVanvriLoop41 />
<DelayComponentVanvriLoop42 />
<DelayComponentVanvriLoop43 />
<DelayComponentVanvriLoop44 />
<DelayComponentVanvriLoop45 />
<DelayComponentVanvriLoop46 />
<DelayComponentVanvriLoop47 />
<DelayComponentVanvriLoop48 />
<DelayComponentVanvriLoop49 />
<DelayComponentVanvriLoop50 />
<DelayComponentVanvriLoop51 />
<DelayComponentVanvriLoop52 />
<DelayComponentVanvriLoop53 />
<DelayComponentVanvriLoop54 />
<DelayComponentVanvriLoop55 />
<DelayComponentVanvriLoop56 />
<DelayComponentVanvriLoop57 />
<DelayComponentVanvriLoop58 />
<DelayComponentVanvriLoop59 />
<DelayComponentVanvriLoop60 />
<DelayComponentVanvriLoop61 />
<DelayComponentVanvriLoop62 />
<DelayComponentVanvriLoop63 />
<DelayComponentVanvriLoop64 />
<DelayComponentVanvriLoop65 />
<DelayComponentVanvriLoop66 />
<DelayComponentVanvriLoop67 />
<DelayComponentVanvriLoop68 />
<DelayComponentVanvriLoop69 />
<DelayComponentVanvriLoop70 />
<DelayComponentVanvriLoop71 />
<DelayComponentVanvriLoop72 />
<DelayComponentVanvriLoop73 />
<DelayComponentVanvriLoop74 />
<DelayComponentVanvriLoop75 />
<DelayComponentVanvriLoop76 />
<DelayComponentVanvriLoop77 />
<DelayComponentVanvriLoop78 />
<DelayComponentVanvriLoop79 />
<DelayComponentVanvriLoop80 />
<DelayComponentVanvriLoop81 />
<DelayComponentVanvriLoop82 />
<DelayComponentVanvriLoop83 />
<DelayComponentVanvriLoop84 />
<DelayComponentVanvriLoop85 />
<DelayComponentVanvriLoop86 />
<DelayComponentVanvriLoop87 />
<DelayComponentVanvriLoop88 />
<DelayComponentVanvriLoop89 />
<DelayComponentVanvriLoop90 />
<DelayComponentVanvriLoop91 />
<DelayComponentVanvriLoop92 />
<DelayComponentVanvriLoop93 />
<DelayComponentVanvriLoop94 />
<DelayComponentVanvriLoop95 />
<DelayComponentVanvriLoop96 />
<DelayComponentVanvriLoop97 />
<DelayComponentVanvriLoop98 />
<DelayComponentVanvriLoop99 />
<DelayComponentVanvriLoop100 />

<DelayComponentVanvriLoopFinal />
<YayBattleEndVanvri />
</Container>
)
};

const Vanvri4 = () => {
  if (totalVanvriBackTo100 == 4)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri5 = () => {
  if (totalVanvriBackTo100 == 5)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri6 = () => {
  if (totalVanvriBackTo100 == 6)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri7 = () => {
  if (totalVanvriBackTo100 == 7)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri8 = () => {
  if (totalVanvriBackTo100 == 8)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri9 = () => {
  if (totalVanvriBackTo100 == 9)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri10 = () => {
  if (totalVanvriBackTo100 == 10)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri11 = () => {
  if (totalVanvriBackTo100 == 11)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanvri12 = () => {
  if (totalVanvriBackTo100 == 12)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanvri13 = () => {
  if (totalVanvriBackTo100 == 13)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc ex sodales.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanvri14 = () => {
  if (totalVanvriBackTo100 == 14)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at ex sodales.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanvri15 = () => {
  if (totalVanvriBackTo100 == 15)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanvri16 = () => {
  if (totalVanvriBackTo100 == 16)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales consequat.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}


const Vanvri17 = () => {
  if (totalVanvriBackTo100 == 17)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus orci. ')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanvri18 = () => {
  if (totalVanvriBackTo100 == 18)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in orci. ')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanvri19 = () => {
  if (totalVanvriBackTo100 == 19)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius. ')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanvri20 = () => {
  if (totalVanvriBackTo100 == 20)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque. ')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanvri21 = () => {
  if (totalVanvriBackTo100 == 21)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus.')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanvri22 = () => {
  if (totalVanvriBackTo100 == 22)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus et. ')}}>
Copy {totalVanvriBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Vanvri26 = () => {
  if (totalVanvriHPToLose == 26)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam vel ante quam. Nulla egestas auctor enim non rhoncus. Maecenas feugiat dapibus lacus nec graVanvrida. Quisque dictum.')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri28 = () => {
  if (totalVanvriHPToLose == 28)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam non purus feugiat, graVanvrida dolor eget, porta mi. Aliquam iaculis elit diam. Ut id blandit dui. Nulla et dolor.')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri30 = () => {
  if (totalVanvriHPToLose == 30)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rhoncus euismod lacus ut lobortis. Maecenas tincidunt lacus quis interdum faucibus. Aliquam erat volutpat. Vestibulum semper est in condimentum mattis. Suspendisse.')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri32 = () => {
  if (totalVanvriHPToLose == 32)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec faucibus risus justo, ac consectetur orci maximus nec. Proin placerat, lectus nec tempus cursus, augue nibh eleifend erat, at porttitor nulla arcu in.')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri34 = () => {
  if (totalVanvriHPToLose == 34)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus diam tellus, volutpat Vanvritae dapibus vel, convallis auctor tellus. Cras fringilla tincidunt lorem, quis sagittis odio accumsan at. Sed nec dictum diam. Cras ac pulVanvrinar.')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri36 = () => {
  if (totalVanvriHPToLose == 36)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus mollis egestas ex. Vanvrivamus tempus neque odio, nec scelerisque ipsum vehicula sit amet. Duis nisl dolor, posuere sed ante vel, euismod faucibus nisi. Donec nulla leo, aliquet.')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri38 = () => {
  if (totalVanvriHPToLose == 38)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque feugiat aliquam ipsum ac auctor. Phasellus a nisi auctor, tempus felis eget, porta felis. Maecenas et tempor nisi. Aenean metus arcu, posuere sit amet nunc vel, cursus porttitor nisl.')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri40 = () => {
  if (totalVanvriHPToLose == 40)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vanvrivamus at est et ipsum suscipit lacinia nec sit amet turpis. Vestibulum nec ex nibh. Etiam consequat et justo sit amet commodo. Suspendisse mattis semper arcu eget fermentum. Donec eu nisi elementum.')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri42 = () => {
  if (totalVanvriHPToLose == 42)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ac aliquam nunc. Sed Vanvritae tellus a tellus dictum condimentum. Nunc volutpat feugiat justo. Fusce vulputate ligula nisl, sed ullamcorper libero imperdiet sit amet. In fermentum sed metus nec pellentesque. Duis eget tellus. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri44 = () => {
  if (totalVanvriHPToLose == 44)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus vehicula volutpat ligula eu efficitur. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris mollis et odio eu placerat. Phasellus mollis eleifend orci, eget pulVanvrinar sem Vanvriverra eu. Nam turpis. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri46 = () => {
  if (totalVanvriHPToLose == 46)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer aliquam mauris ac dignissim hendrerit. Suspendisse leo nulla, hendrerit ultrices diam interdum, consequat mollis sapien. Donec ac placerat leo. In ante libero, facilisis sit amet quam in, iaculis commodo nisl. Aliquam tincidunt nunc massa, sit amet Vanvriverra.')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri48 = () => {
  if (totalVanvriHPToLose == 48)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis eu ligula ac ipsum tempus tristique ac at urna. Phasellus accumsan erat ac dui elementum fringilla. Phasellus sagittis et mi ac malesuada. Nam eleifend mi in velit auctor, vel mollis massa volutpat. Ut tempus lorem diam, a sollicitudin ex.')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri50 = () => {
  if (totalVanvriHPToLose == 50)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam consequat blandit eros, pellentesque vulputate tortor imperdiet et. In hac habitasse platea dictumst. Aenean non dapibus diam, Vanvritae suscipit augue. Phasellus ut aliquam magna, nec efficitur lacus. Pellentesque lacus sapien, vulputate in blandit at, venenatis vestibulum magna. Nullam quis facilisis dui. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri52 = () => {
  if (totalVanvriHPToLose == 52)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eros odio, pellentesque quis tellus at, consectetur lobortis sem. Etiam turpis libero, Vanvriverra at malesuada ac, fringilla consectetur orci. Etiam sed convallis magna. Morbi feugiat rutrum metus Vanvritae placerat. Cras fermentum convallis posuere. Vanvrivamus hendrerit neque id pharetra consectetur. Etiam fringilla augue et. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri54 = () => {
  if (totalVanvriHPToLose == 54)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec id posuere est, a ultrices nisi. In porttitor ligula vel arcu dapibus, vel interdum magna ultricies. Aenean odio ante, ultrices Vanvritae fermentum sed, aliquam eu tellus. Vestibulum mattis dignissim sollicitudin. Integer mollis, lorem et convallis elementum, lorem nisi vehicula dolor, congue vulputate metus eros id. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri56 = () => {
  if (totalVanvriHPToLose == 56)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce blandit Vanvriverra neque, iaculis blandit urna vulputate et. Etiam eu imperdiet nulla, ut malesuada mi. Nullam ex nisi, fringilla eget orci sed, porta porttitor tellus. Donec nec turpis feugiat, commodo eros in, sodales lacus. Maecenas fermentum lacus posuere mauris placerat tempus. Mauris a lectus tincidunt, aliquet nunc. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri58 = () => {
  if (totalVanvriHPToLose == 58)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam feugiat erat libero, et auctor lorem maximus et. Nam vel massa sed eros luctus finibus nec Vanvritae augue. In pellentesque tortor vel pulVanvrinar efficitur. Aenean non nunc volutpat, semper lacus quis, dignissim erat. Phasellus dignissim, leo et finibus maximus, nunc est dignissim augue, quis placerat urna ligula sit amet. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri60 = () => {
  if (totalVanvriHPToLose == 60)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ut sapien ac lacus porttitor aliquam at at nulla. Vanvrivamus pharetra pulVanvrinar elementum. Nullam imperdiet augue vel eros imperdiet eleifend. Suspendisse rutrum, tortor id volutpat sagittis, elit urna luctus odio, ut congue massa felis eu ligula. Maecenas tempor, urna in eleifend eleifend, eros ante vehicula odio, Vanvritae maximus ipsum sapien sed.')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri62 = () => {
  if (totalVanvriHPToLose == 62)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc Vanvriverra finibus sapien, nec aliquam sem ornare elementum. Mauris a ornare nunc. Vestibulum placerat massa sit amet nisl faucibus, in euismod turpis sollicitudin. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean consectetur vel quam dapibus interdum. Maecenas lacinia dolor justo, at vestibulum ex sollicitudin eget. Nunc in velit. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri64 = () => {
  if (totalVanvriHPToLose == 64)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eu elementum odio. Nulla imperdiet sit amet risus nec pharetra. Duis auctor, justo et sodales posuere, risus sapien maximus enim, at convallis lorem ex eu orci. Donec imperdiet dictum ex, semper fermentum diam auctor sit amet. In suscipit nec odio Vanvritae Vanvriverra. Nullam Vanvritae hendrerit lectus, at accumsan mauris. Suspendisse facilisis quam eu imperdiet interdum. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri66 = () => {
  if (totalVanvriHPToLose == 66)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec commodo rutrum ultrices. Nullam dapibus nisi ut nisl placerat malesuada. Proin luctus dignissim dui, Vanvritae lacinia velit graVanvrida ac. Proin et nisi ac mi ultricies blandit ac ac sem. Nullam id mattis libero. Sed euismod metus ut odio tincidunt, sed sodales metus blandit. Phasellus aliquam elit in lacinia ornare. Nullam suscipit ipsum ac auctor convallis. Donec tempor. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri68 = () => {
  if (totalVanvriHPToLose == 68)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam ac dolor lobortis ante ornare scelerisque. Ut finibus luctus purus sit amet accumsan. Duis vel suscipit erat, nec molestie enim. Nullam bibendum odio nunc. Vanvrivamus mollis fermentum ex, in dictum eros blandit nec. Sed sollicitudin quis tortor ac pharetra. Sed consectetur, turpis eu eleifend rutrum, nibh urna condimentum leo, eget interdum urna est nec sapien. Interdum et malesuada fames. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri70 = () => {
  if (totalVanvriHPToLose == 70)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse pharetra purus elementum auctor varius. Morbi elementum mi nec iaculis pretium. Cras nec porta turpis. Nullam vehicula urna Vanvritae volutpat sollicitudin. Aliquam erat volutpat. In vehicula ex in augue scelerisque bibendum. Suspendisse cursus neque at mauris feugiat mattis. Ut at congue justo. Phasellus elementum aliquet graVanvrida. Aliquam rhoncus vulputate est eget efficitur. Cras tristique elit non tellus consequat iaculis. Nunc sit. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri72 = () => {
  if (totalVanvriHPToLose == 72)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc sodales, elit sed posuere laoreet, ante mi maximus velit, vel accumsan sem metus vel justo. Curabitur nec tincidunt tellus, at laoreet felis. Fusce eu luctus felis. Morbi varius, turpis eu aliquam auctor, magna ante interdum nulla, quis maximus magna felis nec nisl. Vanvrivamus Vanvritae ullamcorper dolor. Donec feugiat in dolor in maximus. Integer Vanvriverra dui sit amet nulla tristique, sit amet suscipit leo. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri74 = () => {
  if (totalVanvriHPToLose == 74)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi quis magna a justo bibendum dictum sit amet sit amet ex. Aenean quis hendrerit urna, ut ullamcorper nisi. Aenean a nunc consectetur, pharetra lectus non, rhoncus sapien. Sed quis nulla graVanvrida, interdum turpis a, faucibus est. Curabitur a odio Vanvritae ex tristique luctus Vanvritae a sem. Nulla congue vel lacus eget varius. Aliquam fermentum nibh quis diam dictum, vel porta justo rhoncus. Morbi at rhoncus. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri76 = () => {
  if (totalVanvriHPToLose == 76)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque nec euismod est. Cras tincidunt tempus blandit. Vestibulum vel tortor sed ligula vestibulum aliquet sit amet vel tellus. Mauris Vanvritae ultricies nibh. Integer eu augue non nulla consectetur cursus. Fusce diam purus, faucibus non interdum sed, varius eget tellus. Suspendisse vehicula justo diam, ac fringilla eros sagittis sit amet. Suspendisse non justo lacinia, tempor libero pulVanvrinar, efficitur arcu. Nunc Vanvritae enim vestibulum massa interdum volutpat sit amet. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri78 = () => {
  if (totalVanvriHPToLose == 78)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec augue arcu, fringilla Vanvritae tempus vel, ultricies commodo turpis. Pellentesque ut risus luctus, accumsan dolor eget, luctus felis. Suspendisse ac egestas nunc. Sed Vanvriverra felis nec lectus tempor feugiat. Nunc tincidunt finibus turpis non luctus. Nullam orci nisl, porttitor ut neque in, malesuada porta nisi. Phasellus sollicitudin magna faucibus est lobortis, ornare mollis lacus sodales. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri80 = () => {
  if (totalVanvriHPToLose == 80)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas congue dignissim cursus. Vanvrivamus id nulla ut risus pellentesque semper. Pellentesque lobortis augue eget ultrices molestie. Nunc euismod massa a lectus varius sollicitudin. Sed dictum quis est placerat porta. Ut malesuada feugiat nisi et accumsan. Morbi et pulVanvrinar nunc. Proin fringilla condimentum metus, id blandit mauris egestas in. Fusce tincidunt, nisi eget ornare fermentum, elit erat dictum nulla, tristique iaculis leo massa in orci. Ut aliquam efficitur lacus, in commodo nibh.')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri82 = () => {
  if (totalVanvriHPToLose == 82)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec auctor felis ligula, sit amet pulVanvrinar arcu porta quis. Mauris ultrices tristique neque, id ullamcorper nisi pharetra sit amet. Nam commodo leo sit amet sollicitudin vehicula. Morbi congue tellus risus, eu dapibus ex consequat id. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Pellentesque vestibulum arcu diam, non ornare dui volutpat sollicitudin. Nunc Vanvritae massa in leo volutpat fermentum nec eu lectus. Sed sit amet finibus dui, sed. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri84 = () => {
  if (totalVanvriHPToLose == 84)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus dictum velit Vanvritae nunc ultrices, non sagittis eros euismod. Donec mattis leo id tempor tristique. In dignissim tempus augue, et posuere eros tempus sed. Suspendisse in ex felis. Ut faucibus blandit imperdiet. Sed convallis quam quis augue Vanvriverra rutrum. Ut sapien orci, scelerisque blandit nulla sit amet, malesuada sollicitudin justo. Proin et nulla consequat, fermentum eros non, rutrum orci. Suspendisse porttitor Vanvriverra tortor sed consequat. Etiam et augue ac metus condimentum finibus. Nunc vel dictum. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri86 = () => {
  if (totalVanvriHPToLose == 86)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. In a rutrum lorem, vel congue libero. Maecenas egestas tincidunt mauris, ut interdum turpis eleifend id. Mauris consectetur metus id eros consectetur graVanvrida. Vanvrivamus eget velit ipsum. Nunc porta tortor eu est imperdiet fringilla. Curabitur vel nibh ac odio imperdiet ultricies. Donec tempus ante non libero euismod dapibus. Aenean faucibus consectetur bibendum. Morbi sollicitudin, enim id congue laoreet, elit dui volutpat metus, non egestas ante tortor sit amet ex. Mauris sagittis pulVanvrinar finibus. Integer non vehicula lectus, ut. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri88 = () => {
  if (totalVanvriHPToLose == 88)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla arcu odio, vulputate eu tortor ac, convallis convallis ipsum. Proin imperdiet luctus odio id vehicula. Sed congue posuere tristique. Vanvrivamus accumsan luctus tellus. Mauris porttitor leo et metus convallis elementum. Suspendisse in urna pharetra, eleifend arcu et, porttitor lectus. Vanvrivamus eros tellus, volutpat in est accumsan, bibendum congue est. Phasellus dignissim consequat sem, in rutrum lorem interdum nec. Phasellus facilisis lectus eu eros condimentum, vel luctus justo eleifend. Fusce venenatis ipsum ut ante tincidunt commodo. Suspendisse potenti. Sed volutpat. .')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Vanvri90 = () => {
  if (totalVanvriHPToLose == 90)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam eu dignissim neque. Quisque a commodo diam. Cras in accumsan nisl. Maecenas Vanvritae scelerisque arcu, at pretium ipsum. Nam tincidunt ullamcorper congue. Donec scelerisque, augue nec hendrerit vehicula, erat dui pellentesque odio, et Vanvriverra dolor felis nec sem. Praesent a lorem vel tellus feugiat ultricies. Etiam lacinia, sapien quis vulputate tincidunt, nisi lacus ornare augue, elementum efficitur elit diam in nibh. Suspendisse ullamcorper mollis purus, at tincidunt odio porta rhoncus. Quisque efficitur nisl nibh, id auctor libero Vanvriverra ac. In hac. ')}}>
Copy {totalVanvriHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

//Viyusa - min - timers//

const DelayComponentViyusaMinLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' mt='25px' fontSize='md'>
      	<b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentViyusaMinLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTimeMin3_5SecPerHP25MinTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
  return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'>
      	<b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
  
  const DelayComponentViyusaMinLoop3 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal3)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 3: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyusaMinLoop4 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal4)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 4: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyusaMinLoop5 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal5)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 5: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyusaMinLoop6 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal6)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 6: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyusaMinLoop7 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal7)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 7: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };


  const DelayComponentViyusaMinLoop8 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal8)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 8: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyusaMinLoop9 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal9)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 9: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyusaMinLoop10 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal10)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 10: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 10: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViyusaMinLoop11 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal11)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 11: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 11: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };

  
  const DelayComponentViyusaMinLoop12 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal12)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 12: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 12: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  
  const DelayComponentViyusaMinLoop13 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal13)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 13: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 13: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  
  const DelayComponentViyusaMinLoop14 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal14)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 14: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 14: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  
  const DelayComponentViyusaMinLoop15 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal15)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 15: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 15: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };

  const DelayComponentViyusaMinLoop16 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP25MinTimeVal16)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 16: </b>{totalViyusaMins10} minutes and {totalViyusaSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP25MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 16: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };

  
  const DelayComponentViyusaMinLoopFinal = () => {
      const [show, setShow] = React.useState(false)
    
      React.useEffect(() => {
        const timeout = setTimeout(() => {
          setShow(true)
        }, totalWhenToStartFinalViyusaLoopMin)
        return () => clearTimeout(timeout)
      }, [show])
      if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
        <b>Final Loop: </b>{totalViyusaFinalMins} minutes and {totalViyusaFinalSecs} seconds </Text>)
      return (   <Timer initialTime={totalFinalLoopSecsViyusaMin}
      direction="backward"
          timeToUpdate={10}>
        {({ start, resume, pause, stop, reset, timerState }) => (
          <React.Fragment>
            <div>
            <Text mb='8px' fontSize='md'>
              <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
            </div>
          </React.Fragment>
        )}
      </Timer>
    )
    };


//Viyusa - timers//

const DelayComponentViyusaLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' mt='25px' fontSize='md'>
		  <b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentViyusaLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25MinTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'>
		  <b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop3 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal3)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 3: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop4 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal4)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 4: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 4: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop5 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal5)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 5: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop6 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal6)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 6: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop7 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal7)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 7: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop8 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal8)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 8: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyusaLoop9 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal9)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 9: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyusaLoop10 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal10)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 10: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 10: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyusaLoop11 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal11)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 11: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 11: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyusaLoop12 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal12)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 12: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 12: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyusaLoop13 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal13)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 13: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 13: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyusaLoop14 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal14)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 14: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 14: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViyusaLoop15 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal15)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 15: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 15: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop16 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal16)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 16: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 16: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop17 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal17)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 17: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 17: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop18 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal18)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 18: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 18: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop19 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal19)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 19: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 19: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop20 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25MinTimeVal20)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 20: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 20: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop21 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25MinTimeVal21)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 21: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 21: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop22 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25MinTimeVal22)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 22: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 22: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop23 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25MinTimeVal23)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 23: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 23: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop24 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25MinTimeVal24)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 24: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 24: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop25 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25MinTimeVal25)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 25: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 25: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop26 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25MinTimeVal26)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 26: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 26: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop27 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25MinTimeVal27)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 27: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 27: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop28 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25MinTimeVal28)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 28: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 28: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop29 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25MinTimeVal29)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 33: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 33: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop30 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal30)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 30: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 30: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop31 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal31)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 31: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 31: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop32 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal32)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 32: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 32: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop33 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal33)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 33: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 33: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop34 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal34)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 34: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 34: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop35 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal35)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 35: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 35: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop36 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal36)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 36: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 36: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop37 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal37)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 37: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 37: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop38 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal38)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 38: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 38: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop39 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal39)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 39: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 39: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop40 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal40)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 40: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 40: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop41 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal41)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 41: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 41: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop42 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal42)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 42: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 42: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop43 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal43)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 43: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 43: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop44 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal44)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 44: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 44: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop45 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal45)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 45: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 45: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop46 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal46)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 46: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 46: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop47 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal47)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 47: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 47: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop48 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal48)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 48: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 48: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop49 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal49)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 49: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 49: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop50 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal50)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 50: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 50: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop51 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal51)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 51: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 51: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop52 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal52)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 52: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 52: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop53 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal53)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 53: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 53: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop54 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal54)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 54: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 54: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop55 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal55)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 55: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 55: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop56 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal56)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 56: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 56: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop57 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal57)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 57: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 57: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop58 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal58)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 58: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 58: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop59 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal59)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 59: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 59: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop60 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal60)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 60: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 60: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop61 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal61)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 61: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 61: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop62 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal62)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 62: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 62: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop63 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal63)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 63: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 63: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop64 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal64)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 64: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 64: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop65 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal65)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 65: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 65: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop66 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal66)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 66: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 66: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop67 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal67)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 67: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 67: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop68 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal68)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 68: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 68: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop69 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal69)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 69: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 69: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop70 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal70)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 70: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 70: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop71 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal71)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 71: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 71: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop72 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal72)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 72: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 72: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop73 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal73)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 73: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 73: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop74 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal74)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 74: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 74: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop75 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal75)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 75: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 75: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop76 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal76)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 76: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 76: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop77 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal77)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 77: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 77: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop78 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal78)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 78: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 78: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop79 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal79)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 79: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 79: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop80 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal80)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 80: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 80: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop81 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal81)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 81: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 81: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop82 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal82)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 82: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 82: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop83 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal83)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 83: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 83: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop84 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal84)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 84: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 84: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop85 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal85)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 85: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 85: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop86 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal86)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 86: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 86: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop87 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal87)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 87: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 87: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop88 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal88)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 88: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 88: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop89 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal89)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 89: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 89: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop90 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal90)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 90: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 90: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop91 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal91)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 91: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 91: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop92 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal92)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 92: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 92: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop93 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal93)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 93: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 93: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop94 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal94)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 94: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 94: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop95 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal95)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 95: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 95: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop96 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal96)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 96: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 96: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop97 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal97)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 97: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 97: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop98 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal98)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 98: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 98: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop99 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal99)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 99: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 99: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop100 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal100)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 100: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 100: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop101 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal101)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 101: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 101: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop102 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal102)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 102: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 102: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop103 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal103)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 103: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 103: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop104 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal104)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 104: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 104: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop105 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal105)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 105: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 105: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop106 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal106)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 106: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 106: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop107 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP25minTimeVal107)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 107: </b>{totalViyusaMins75} minutes and {totalViyusaSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP25MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 107: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViyusaLoop4x = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, (((Math.ceil((1500/7)*.9))*7)*1000))
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (
    <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
    }} >
        <Text mt='15px' pt='10px'  fontSize='md' style={{color: '#7a7a7a'}}>
        At ~2 mins 30 secs remaining:<br />
  the timer will flash 1x, then show the 4x reward multiplier</Text>
      </Container>
    )
return (   <Timer initialTime={totalFinalLoopSecsVoidWignow}
direction="backward"
    timeToUpdate={10}>
  {({ start, resume, pause, stop, reset, timerState }) => (
    <React.Fragment>
      <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
    }} >
        <Text mt='15px' pt='25px' fontSize='md'><span>When you see the </span><span style={{color: '#B794F4'}}><b>x4 multiplier</b></span><span>, <b><i>type</i></b> at least 1 word</span></Text>
      </Container>
    </React.Fragment>
  )}
</Timer>
)
};


const DelayComponentViyusaLoopFinal = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalWhenToStartFinalViyusaLoop)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Final Loop: </b>0 minutes and {totalLeftoverViyusaTime} seconds </Text>)
  return (   <Timer initialTime={totalFinalLoopSecsViyusa}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'>
		  <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
		  <Text mb='8px' fontSize='md'><span>When you see the </span><span style={{color: '#B794F4'}}><b>x4 multiplier</b></span><span>, <b><i>type</i></b> at least 1 word</span></Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

  //Viyusa - min - it goes in its boxes precious//

  const ViyusaTimerMin = () => {
    if (totalViyusaLoops == 1)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin2 = () => {
    if (totalViyusaLoops == 2)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin3 = () => {
    if (totalViyusaLoops == 3)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin4 = () => {
    if (totalViyusaLoops == 4)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoop4 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin5 = () => {
    if (totalViyusaLoops == 5)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoop4 />
  <DelayComponentViyusaMinLoop5 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin6 = () => {
    if (totalViyusaLoops == 6)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoop4 />
  <DelayComponentViyusaMinLoop5 />
  <DelayComponentViyusaMinLoop6 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin7 = () => {
    if (totalViyusaLoops == 7)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoop4 />
  <DelayComponentViyusaMinLoop5 />
  <DelayComponentViyusaMinLoop6 />
  <DelayComponentViyusaMinLoop7 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin8 = () => {
    if (totalViyusaLoops == 8)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoop4 />
  <DelayComponentViyusaMinLoop5 />
  <DelayComponentViyusaMinLoop6 />
  <DelayComponentViyusaMinLoop7 />
  <DelayComponentViyusaMinLoop8 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin9 = () => {
    if (totalViyusaLoops == 9)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoop4 />
  <DelayComponentViyusaMinLoop5 />
  <DelayComponentViyusaMinLoop6 />
  <DelayComponentViyusaMinLoop7 />
  <DelayComponentViyusaMinLoop8 />
  <DelayComponentViyusaMinLoop9 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin10 = () => {
    if (totalViyusaLoops == 10)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoop4 />
  <DelayComponentViyusaMinLoop5 />
  <DelayComponentViyusaMinLoop6 />
  <DelayComponentViyusaMinLoop7 />
  <DelayComponentViyusaMinLoop8 />
  <DelayComponentViyusaMinLoop9 />
  <DelayComponentViyusaMinLoop10 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin11 = () => {
    if (totalViyusaLoops == 11)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoop4 />
  <DelayComponentViyusaMinLoop5 />
  <DelayComponentViyusaMinLoop6 />
  <DelayComponentViyusaMinLoop7 />
  <DelayComponentViyusaMinLoop8 />
  <DelayComponentViyusaMinLoop9 />
  <DelayComponentViyusaMinLoop10 />
  <DelayComponentViyusaMinLoop11 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin12 = () => {
    if (totalViyusaLoops == 12)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoop4 />
  <DelayComponentViyusaMinLoop5 />
  <DelayComponentViyusaMinLoop6 />
  <DelayComponentViyusaMinLoop7 />
  <DelayComponentViyusaMinLoop8 />
  <DelayComponentViyusaMinLoop9 />
  <DelayComponentViyusaMinLoop10 />
  <DelayComponentViyusaMinLoop11 />
  <DelayComponentViyusaMinLoop12 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin13 = () => {
    if (totalViyusaLoops == 13)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoop4 />
  <DelayComponentViyusaMinLoop5 />
  <DelayComponentViyusaMinLoop6 />
  <DelayComponentViyusaMinLoop7 />
  <DelayComponentViyusaMinLoop8 />
  <DelayComponentViyusaMinLoop9 />
  <DelayComponentViyusaMinLoop10 />
  <DelayComponentViyusaMinLoop11 />
  <DelayComponentViyusaMinLoop12 />
  <DelayComponentViyusaMinLoop13 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin14 = () => {
    if (totalViyusaLoops == 14)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoop4 />
  <DelayComponentViyusaMinLoop5 />
  <DelayComponentViyusaMinLoop6 />
  <DelayComponentViyusaMinLoop7 />
  <DelayComponentViyusaMinLoop8 />
  <DelayComponentViyusaMinLoop9 />
  <DelayComponentViyusaMinLoop10 />
  <DelayComponentViyusaMinLoop11 />
  <DelayComponentViyusaMinLoop12 />
  <DelayComponentViyusaMinLoop13 />
  <DelayComponentViyusaMinLoop14 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin15 = () => {
    if (totalViyusaLoops == 15)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoop4 />
  <DelayComponentViyusaMinLoop5 />
  <DelayComponentViyusaMinLoop6 />
  <DelayComponentViyusaMinLoop7 />
  <DelayComponentViyusaMinLoop8 />
  <DelayComponentViyusaMinLoop9 />
  <DelayComponentViyusaMinLoop10 />
  <DelayComponentViyusaMinLoop11 />
  <DelayComponentViyusaMinLoop12 />
  <DelayComponentViyusaMinLoop13 />
  <DelayComponentViyusaMinLoop14 />
  <DelayComponentViyusaMinLoop15 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

  const ViyusaTimerMin16 = () => {
    if (totalViyusaLoops == 16)
      return(<Container>
  <DelayComponentViyusaMinLoop />
  <DelayComponentViyusaMinLoop2 />
  <DelayComponentViyusaMinLoop3 />
  <DelayComponentViyusaMinLoop4 />
  <DelayComponentViyusaMinLoop5 />
  <DelayComponentViyusaMinLoop6 />
  <DelayComponentViyusaMinLoop7 />
  <DelayComponentViyusaMinLoop8 />
  <DelayComponentViyusaMinLoop9 />
  <DelayComponentViyusaMinLoop10 />
  <DelayComponentViyusaMinLoop11 />
  <DelayComponentViyusaMinLoop12 />
  <DelayComponentViyusaMinLoop13 />
  <DelayComponentViyusaMinLoop14 />
  <DelayComponentViyusaMinLoop15 />
  <DelayComponentViyusaMinLoop16 />
  <DelayComponentViyusaMinLoopFinal />
  <YayBattleEndViyusaMin />
  </Container>
  )
  };

//Viyusa - it goes in its boxes precious//



const ViyusaTimer4 = () => {
  if (totalViyusa75Loops == 4)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer5 = () => {
  if (totalViyusa75Loops == 5)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa /></Container>
)
};

const ViyusaTimer6 = () => {
  if (totalViyusa75Loops == 6)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};


const ViyusaTimer7 = () => {
  if (totalViyusa75Loops == 7)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};


const ViyusaTimer8 = () => {
  if (totalViyusa75Loops == 8)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer9 = () => {
  if (totalViyusa75Loops == 9)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer10 = () => {
  if (totalViyusa75Loops == 10)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer11 = () => {
  if (totalViyusa75Loops == 11)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer12 = () => {
  if (totalViyusa75Loops == 12)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer13 = () => {
  if (totalViyusa75Loops == 13)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer14 = () => {
  if (totalViyusa75Loops == 14)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer15 = () => {
  if (totalViyusa75Loops == 15)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer16 = () => {
  if (totalViyusa75Loops == 16)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer17 = () => {
  if (totalViyusa75Loops == 17)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer18 = () => {
  if (totalViyusa75Loops == 18)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer19 = () => {
  if (totalViyusa75Loops == 19)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer20 = () => {
  if (totalViyusa75Loops == 20)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer21 = () => {
  if (totalViyusa75Loops == 21)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer22 = () => {
  if (totalViyusa75Loops == 22)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer23 = () => {
  if (totalViyusa75Loops == 23)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer24 = () => {
  if (totalViyusa75Loops == 24)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer25 = () => {
  if (totalViyusa75Loops == 25)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer26 = () => {
  if (totalViyusa75Loops == 26)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer27 = () => {
  if (totalViyusa75Loops == 27)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer28 = () => {
  if (totalViyusa75Loops == 28)
    return(<Container>
<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer29 = () => {
  if (totalViyusa75Loops == 29)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer30 = () => {
  if (totalViyusa75Loops == 30)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer31 = () => {
  if (totalViyusa75Loops == 31)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer32 = () => {
  if (totalViyusa75Loops == 32)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer33 = () => {
  if (totalViyusa75Loops == 33)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer34 = () => {
  if (totalViyusa75Loops == 34)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer35 = () => {
  if (totalViyusa75Loops == 35)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer36 = () => {
  if (totalViyusa75Loops == 36)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer37 = () => {
  if (totalViyusa75Loops == 37)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer38 = () => {
  if (totalViyusa75Loops == 38)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer39 = () => {
  if (totalViyusa75Loops == 39)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer40 = () => {
  if (totalViyusa75Loops == 40)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer41 = () => {
  if (totalViyusa75Loops == 41)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer42 = () => {
  if (totalViyusa75Loops == 42)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer43 = () => {
  if (totalViyusa75Loops == 43)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer44 = () => {
  if (totalViyusa75Loops == 44)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer45 = () => {
  if (totalViyusa75Loops == 45)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer46 = () => {
  if (totalViyusa75Loops == 46)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer47 = () => {
  if (totalViyusa75Loops == 47)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer48 = () => {
  if (totalViyusa75Loops == 48)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer49 = () => {
  if (totalViyusa75Loops == 49)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer50 = () => {
  if (totalViyusa75Loops == 50)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer51 = () => {
  if (totalViyusa75Loops == 51)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer52 = () => {
  if (totalViyusa75Loops == 52)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer53 = () => {
  if (totalViyusa75Loops == 53)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer54 = () => {
  if (totalViyusa75Loops == 54)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer55 = () => {
  if (totalViyusa75Loops == 55)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer56 = () => {
  if (totalViyusa75Loops == 56)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer57 = () => {
  if (totalViyusa75Loops == 57)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer58 = () => {
  if (totalViyusa75Loops == 58)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer59 = () => {
  if (totalViyusa75Loops == 59)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer60 = () => {
  if (totalViyusa75Loops == 60)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer61 = () => {
  if (totalViyusa75Loops == 61)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer62 = () => {
  if (totalViyusa75Loops == 62)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer63 = () => {
  if (totalViyusa75Loops == 63)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer64 = () => {
  if (totalViyusa75Loops == 64)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer65 = () => {
  if (totalViyusa75Loops == 65)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer66 = () => {
  if (totalViyusa75Loops == 66)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer67 = () => {
  if (totalViyusa75Loops == 67)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer68 = () => {
  if (totalViyusa75Loops == 68)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer69 = () => {
  if (totalViyusa75Loops == 69)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer70 = () => {
  if (totalViyusa75Loops == 70)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer71 = () => {
  if (totalViyusa75Loops == 71)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer72 = () => {
  if (totalViyusa75Loops == 72)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer73 = () => {
  if (totalViyusa75Loops == 73)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer74 = () => {
  if (totalViyusa75Loops == 74)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer75 = () => {
  if (totalViyusa75Loops == 75)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer76 = () => {
  if (totalViyusa75Loops == 76)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer77 = () => {
  if (totalViyusa75Loops == 77)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer78 = () => {
  if (totalViyusa75Loops == 78)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer79 = () => {
  if (totalViyusa75Loops == 79)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer80 = () => {
  if (totalViyusa75Loops == 80)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer81 = () => {
  if (totalViyusa75Loops == 81)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer82 = () => {
  if (totalViyusa75Loops == 82)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer83 = () => {
  if (totalViyusa75Loops == 83)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer84 = () => {
  if (totalViyusa75Loops == 84)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer85 = () => {
  if (totalViyusa75Loops == 85)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer86 = () => {
  if (totalViyusa75Loops == 86)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer87 = () => {
  if (totalViyusa75Loops == 87)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer88 = () => {
  if (totalViyusa75Loops == 88)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer89 = () => {
  if (totalViyusa75Loops == 89)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer90 = () => {
  if (totalViyusa75Loops == 90)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer91 = () => {
  if (totalViyusa75Loops == 91)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer92 = () => {
  if (totalViyusa75Loops == 92)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer93 = () => {
  if (totalViyusa75Loops == 93)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer94 = () => {
  if (totalViyusa75Loops == 94)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer95 = () => {
  if (totalViyusa75Loops == 95)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />
<DelayComponentViyusaLoop95 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer96 = () => {
  if (totalViyusa75Loops == 96)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />
<DelayComponentViyusaLoop95 />
<DelayComponentViyusaLoop96 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer97 = () => {
  if (totalViyusa75Loops == 97)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />
<DelayComponentViyusaLoop95 />
<DelayComponentViyusaLoop96 />
<DelayComponentViyusaLoop97 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer98 = () => {
  if (totalViyusa75Loops == 98)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />
<DelayComponentViyusaLoop95 />
<DelayComponentViyusaLoop96 />
<DelayComponentViyusaLoop97 />
<DelayComponentViyusaLoop98 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer99 = () => {
  if (totalViyusa75Loops == 99)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />
<DelayComponentViyusaLoop95 />
<DelayComponentViyusaLoop96 />
<DelayComponentViyusaLoop97 />
<DelayComponentViyusaLoop98 />
<DelayComponentViyusaLoop99 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer100 = () => {
  if (totalViyusa75Loops == 100)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />
<DelayComponentViyusaLoop95 />
<DelayComponentViyusaLoop96 />
<DelayComponentViyusaLoop97 />
<DelayComponentViyusaLoop98 />
<DelayComponentViyusaLoop99 />
<DelayComponentViyusaLoop100 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer101 = () => {
  if (totalViyusa75Loops == 101)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />
<DelayComponentViyusaLoop95 />
<DelayComponentViyusaLoop96 />
<DelayComponentViyusaLoop97 />
<DelayComponentViyusaLoop98 />
<DelayComponentViyusaLoop99 />
<DelayComponentViyusaLoop100 />
<DelayComponentViyusaLoop101 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer102 = () => {
  if (totalViyusa75Loops == 102)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />
<DelayComponentViyusaLoop95 />
<DelayComponentViyusaLoop96 />
<DelayComponentViyusaLoop97 />
<DelayComponentViyusaLoop98 />
<DelayComponentViyusaLoop99 />
<DelayComponentViyusaLoop100 />
<DelayComponentViyusaLoop101 />
<DelayComponentViyusaLoop102 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer103 = () => {
  if (totalViyusa75Loops == 103)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />
<DelayComponentViyusaLoop95 />
<DelayComponentViyusaLoop96 />
<DelayComponentViyusaLoop97 />
<DelayComponentViyusaLoop98 />
<DelayComponentViyusaLoop99 />
<DelayComponentViyusaLoop100 />
<DelayComponentViyusaLoop101 />
<DelayComponentViyusaLoop102 />
<DelayComponentViyusaLoop103 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer104 = () => {
  if (totalViyusa75Loops == 104)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />
<DelayComponentViyusaLoop95 />
<DelayComponentViyusaLoop96 />
<DelayComponentViyusaLoop97 />
<DelayComponentViyusaLoop98 />
<DelayComponentViyusaLoop99 />
<DelayComponentViyusaLoop100 />
<DelayComponentViyusaLoop101 />
<DelayComponentViyusaLoop102 />
<DelayComponentViyusaLoop103 />
<DelayComponentViyusaLoop104 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer105 = () => {
  if (totalViyusa75Loops == 105)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />
<DelayComponentViyusaLoop95 />
<DelayComponentViyusaLoop96 />
<DelayComponentViyusaLoop97 />
<DelayComponentViyusaLoop98 />
<DelayComponentViyusaLoop99 />
<DelayComponentViyusaLoop100 />
<DelayComponentViyusaLoop101 />
<DelayComponentViyusaLoop102 />
<DelayComponentViyusaLoop103 />
<DelayComponentViyusaLoop104 />
<DelayComponentViyusaLoop105 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer106 = () => {
  if (totalViyusa75Loops == 106)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />
<DelayComponentViyusaLoop95 />
<DelayComponentViyusaLoop96 />
<DelayComponentViyusaLoop97 />
<DelayComponentViyusaLoop98 />
<DelayComponentViyusaLoop99 />
<DelayComponentViyusaLoop100 />
<DelayComponentViyusaLoop101 />
<DelayComponentViyusaLoop102 />
<DelayComponentViyusaLoop103 />
<DelayComponentViyusaLoop104 />
<DelayComponentViyusaLoop105 />
<DelayComponentViyusaLoop106 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const ViyusaTimer107 = () => {
  if (totalViyusa75Loops == 107)
    return(<Container>

<DelayComponentViyusaLoop />
<DelayComponentViyusaLoop2 />
<DelayComponentViyusaLoop3 />
<DelayComponentViyusaLoop4 />
<DelayComponentViyusaLoop5 />
<DelayComponentViyusaLoop6 />
<DelayComponentViyusaLoop7 />
<DelayComponentViyusaLoop8 />
<DelayComponentViyusaLoop9 />
<DelayComponentViyusaLoop10 />
<DelayComponentViyusaLoop11 />
<DelayComponentViyusaLoop12 />
<DelayComponentViyusaLoop13 />
<DelayComponentViyusaLoop14 />
<DelayComponentViyusaLoop15 />
<DelayComponentViyusaLoop16 />
<DelayComponentViyusaLoop17 />
<DelayComponentViyusaLoop18 />
<DelayComponentViyusaLoop19 />
<DelayComponentViyusaLoop20 />
<DelayComponentViyusaLoop21 />
<DelayComponentViyusaLoop22 />
<DelayComponentViyusaLoop23 />
<DelayComponentViyusaLoop24 />
<DelayComponentViyusaLoop25 />
<DelayComponentViyusaLoop26 />
<DelayComponentViyusaLoop27 />
<DelayComponentViyusaLoop28 />
<DelayComponentViyusaLoop29 />
<DelayComponentViyusaLoop30 />
<DelayComponentViyusaLoop31 />
<DelayComponentViyusaLoop32 />
<DelayComponentViyusaLoop33 />
<DelayComponentViyusaLoop34 />
<DelayComponentViyusaLoop35 />
<DelayComponentViyusaLoop36 />
<DelayComponentViyusaLoop37 />
<DelayComponentViyusaLoop38 />
<DelayComponentViyusaLoop39 />
<DelayComponentViyusaLoop40 />
<DelayComponentViyusaLoop41 />
<DelayComponentViyusaLoop42 />
<DelayComponentViyusaLoop43 />
<DelayComponentViyusaLoop44 />
<DelayComponentViyusaLoop45 />
<DelayComponentViyusaLoop46 />
<DelayComponentViyusaLoop47 />
<DelayComponentViyusaLoop48 />
<DelayComponentViyusaLoop49 />
<DelayComponentViyusaLoop50 />
<DelayComponentViyusaLoop51 />
<DelayComponentViyusaLoop52 />
<DelayComponentViyusaLoop53 />
<DelayComponentViyusaLoop54 />
<DelayComponentViyusaLoop55 />
<DelayComponentViyusaLoop56 />
<DelayComponentViyusaLoop57 />
<DelayComponentViyusaLoop58 />
<DelayComponentViyusaLoop59 />
<DelayComponentViyusaLoop60 />
<DelayComponentViyusaLoop61 />
<DelayComponentViyusaLoop62 />
<DelayComponentViyusaLoop63 />
<DelayComponentViyusaLoop64 />
<DelayComponentViyusaLoop65 />
<DelayComponentViyusaLoop66 />
<DelayComponentViyusaLoop67 />
<DelayComponentViyusaLoop68 />
<DelayComponentViyusaLoop69 />
<DelayComponentViyusaLoop70 />
<DelayComponentViyusaLoop71 />
<DelayComponentViyusaLoop72 />
<DelayComponentViyusaLoop73 />
<DelayComponentViyusaLoop74 />
<DelayComponentViyusaLoop75 />
<DelayComponentViyusaLoop76 />
<DelayComponentViyusaLoop77 />
<DelayComponentViyusaLoop78 />
<DelayComponentViyusaLoop79 />
<DelayComponentViyusaLoop80 />
<DelayComponentViyusaLoop81 />
<DelayComponentViyusaLoop82 />
<DelayComponentViyusaLoop83 />
<DelayComponentViyusaLoop84 />
<DelayComponentViyusaLoop85 />
<DelayComponentViyusaLoop86 />
<DelayComponentViyusaLoop87 />
<DelayComponentViyusaLoop88 />
<DelayComponentViyusaLoop89 />
<DelayComponentViyusaLoop90 />
<DelayComponentViyusaLoop91 />
<DelayComponentViyusaLoop92 />
<DelayComponentViyusaLoop93 />
<DelayComponentViyusaLoop94 />
<DelayComponentViyusaLoop95 />
<DelayComponentViyusaLoop96 />
<DelayComponentViyusaLoop97 />
<DelayComponentViyusaLoop98 />
<DelayComponentViyusaLoop99 />
<DelayComponentViyusaLoop100 />
<DelayComponentViyusaLoop101 />
<DelayComponentViyusaLoop102 />
<DelayComponentViyusaLoop103 />
<DelayComponentViyusaLoop104 />
<DelayComponentViyusaLoop105 />
<DelayComponentViyusaLoop106 />
<DelayComponentViyusaLoop107 />

<DelayComponentViyusaLoopFinal />
<YayBattleEndViyusa />
</Container>
)
};

const Viyusa4 = () => {
  if (totalViyusaBackTo100 == 4)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa5 = () => {
  if (totalViyusaBackTo100 == 5)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa6 = () => {
  if (totalViyusaBackTo100 == 6)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa7 = () => {
  if (totalViyusaBackTo100 == 7)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa8 = () => {
  if (totalViyusaBackTo100 == 8)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa9 = () => {
  if (totalViyusaBackTo100 == 9)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa10 = () => {
  if (totalViyusaBackTo100 == 10)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa11 = () => {
  if (totalViyusaBackTo100 == 11)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyusa12 = () => {
  if (totalViyusaBackTo100 == 12)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyusa13 = () => {
  if (totalViyusaBackTo100 == 13)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc ex sodales.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyusa14 = () => {
  if (totalViyusaBackTo100 == 14)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at ex sodales.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyusa15 = () => {
  if (totalViyusaBackTo100 == 15)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyusa16 = () => {
  if (totalViyusaBackTo100 == 16)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales consequat.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}


const Viyusa17 = () => {
  if (totalViyusaBackTo100 == 17)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus orci. ')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyusa18 = () => {
  if (totalViyusaBackTo100 == 18)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in orci. ')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyusa19 = () => {
  if (totalViyusaBackTo100 == 19)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius. ')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyusa20 = () => {
  if (totalViyusaBackTo100 == 20)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque. ')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyusa21 = () => {
  if (totalViyusaBackTo100 == 21)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus.')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyusa22 = () => {
  if (totalViyusaBackTo100 == 22)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus et. ')}}>
Copy {totalViyusaBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viyusa26 = () => {
  if (totalViyusaHPToLose == 26)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam vel ante quam. Nulla egestas auctor enim non rhoncus. Maecenas feugiat dapibus lacus nec graViyusada. Quisque dictum.')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa28 = () => {
  if (totalViyusaHPToLose == 28)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam non purus feugiat, graViyusada dolor eget, porta mi. Aliquam iaculis elit diam. Ut id blandit dui. Nulla et dolor.')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa30 = () => {
  if (totalViyusaHPToLose == 30)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rhoncus euismod lacus ut lobortis. Maecenas tincidunt lacus quis interdum faucibus. Aliquam erat volutpat. Vestibulum semper est in condimentum mattis. Suspendisse.')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa32 = () => {
  if (totalViyusaHPToLose == 32)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec faucibus risus justo, ac consectetur orci maximus nec. Proin placerat, lectus nec tempus cursus, augue nibh eleifend erat, at porttitor nulla arcu in.')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa34 = () => {
  if (totalViyusaHPToLose == 34)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus diam tellus, volutpat Viyusatae dapibus vel, convallis auctor tellus. Cras fringilla tincidunt lorem, quis sagittis odio accumsan at. Sed nec dictum diam. Cras ac pulViyusanar.')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa36 = () => {
  if (totalViyusaHPToLose == 36)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus mollis egestas ex. Viyusavamus tempus neque odio, nec scelerisque ipsum vehicula sit amet. Duis nisl dolor, posuere sed ante vel, euismod faucibus nisi. Donec nulla leo, aliquet.')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa38 = () => {
  if (totalViyusaHPToLose == 38)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque feugiat aliquam ipsum ac auctor. Phasellus a nisi auctor, tempus felis eget, porta felis. Maecenas et tempor nisi. Aenean metus arcu, posuere sit amet nunc vel, cursus porttitor nisl.')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa40 = () => {
  if (totalViyusaHPToLose == 40)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Viyusavamus at est et ipsum suscipit lacinia nec sit amet turpis. Vestibulum nec ex nibh. Etiam consequat et justo sit amet commodo. Suspendisse mattis semper arcu eget fermentum. Donec eu nisi elementum.')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa42 = () => {
  if (totalViyusaHPToLose == 42)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ac aliquam nunc. Sed Viyusatae tellus a tellus dictum condimentum. Nunc volutpat feugiat justo. Fusce vulputate ligula nisl, sed ullamcorper libero imperdiet sit amet. In fermentum sed metus nec pellentesque. Duis eget tellus. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa44 = () => {
  if (totalViyusaHPToLose == 44)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus vehicula volutpat ligula eu efficitur. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris mollis et odio eu placerat. Phasellus mollis eleifend orci, eget pulViyusanar sem Viyusaverra eu. Nam turpis. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa46 = () => {
  if (totalViyusaHPToLose == 46)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer aliquam mauris ac dignissim hendrerit. Suspendisse leo nulla, hendrerit ultrices diam interdum, consequat mollis sapien. Donec ac placerat leo. In ante libero, facilisis sit amet quam in, iaculis commodo nisl. Aliquam tincidunt nunc massa, sit amet Viyusaverra.')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa48 = () => {
  if (totalViyusaHPToLose == 48)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis eu ligula ac ipsum tempus tristique ac at urna. Phasellus accumsan erat ac dui elementum fringilla. Phasellus sagittis et mi ac malesuada. Nam eleifend mi in velit auctor, vel mollis massa volutpat. Ut tempus lorem diam, a sollicitudin ex.')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa50 = () => {
  if (totalViyusaHPToLose == 50)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam consequat blandit eros, pellentesque vulputate tortor imperdiet et. In hac habitasse platea dictumst. Aenean non dapibus diam, Viyusatae suscipit augue. Phasellus ut aliquam magna, nec efficitur lacus. Pellentesque lacus sapien, vulputate in blandit at, venenatis vestibulum magna. Nullam quis facilisis dui. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa52 = () => {
  if (totalViyusaHPToLose == 52)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eros odio, pellentesque quis tellus at, consectetur lobortis sem. Etiam turpis libero, Viyusaverra at malesuada ac, fringilla consectetur orci. Etiam sed convallis magna. Morbi feugiat rutrum metus Viyusatae placerat. Cras fermentum convallis posuere. Viyusavamus hendrerit neque id pharetra consectetur. Etiam fringilla augue et. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa54 = () => {
  if (totalViyusaHPToLose == 54)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec id posuere est, a ultrices nisi. In porttitor ligula vel arcu dapibus, vel interdum magna ultricies. Aenean odio ante, ultrices Viyusatae fermentum sed, aliquam eu tellus. Vestibulum mattis dignissim sollicitudin. Integer mollis, lorem et convallis elementum, lorem nisi vehicula dolor, congue vulputate metus eros id. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa56 = () => {
  if (totalViyusaHPToLose == 56)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce blandit Viyusaverra neque, iaculis blandit urna vulputate et. Etiam eu imperdiet nulla, ut malesuada mi. Nullam ex nisi, fringilla eget orci sed, porta porttitor tellus. Donec nec turpis feugiat, commodo eros in, sodales lacus. Maecenas fermentum lacus posuere mauris placerat tempus. Mauris a lectus tincidunt, aliquet nunc. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa58 = () => {
  if (totalViyusaHPToLose == 58)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam feugiat erat libero, et auctor lorem maximus et. Nam vel massa sed eros luctus finibus nec Viyusatae augue. In pellentesque tortor vel pulViyusanar efficitur. Aenean non nunc volutpat, semper lacus quis, dignissim erat. Phasellus dignissim, leo et finibus maximus, nunc est dignissim augue, quis placerat urna ligula sit amet. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa60 = () => {
  if (totalViyusaHPToLose == 60)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ut sapien ac lacus porttitor aliquam at at nulla. Viyusavamus pharetra pulViyusanar elementum. Nullam imperdiet augue vel eros imperdiet eleifend. Suspendisse rutrum, tortor id volutpat sagittis, elit urna luctus odio, ut congue massa felis eu ligula. Maecenas tempor, urna in eleifend eleifend, eros ante vehicula odio, Viyusatae maximus ipsum sapien sed.')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa62 = () => {
  if (totalViyusaHPToLose == 62)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc Viyusaverra finibus sapien, nec aliquam sem ornare elementum. Mauris a ornare nunc. Vestibulum placerat massa sit amet nisl faucibus, in euismod turpis sollicitudin. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean consectetur vel quam dapibus interdum. Maecenas lacinia dolor justo, at vestibulum ex sollicitudin eget. Nunc in velit. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa64 = () => {
  if (totalViyusaHPToLose == 64)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eu elementum odio. Nulla imperdiet sit amet risus nec pharetra. Duis auctor, justo et sodales posuere, risus sapien maximus enim, at convallis lorem ex eu orci. Donec imperdiet dictum ex, semper fermentum diam auctor sit amet. In suscipit nec odio Viyusatae Viyusaverra. Nullam Viyusatae hendrerit lectus, at accumsan mauris. Suspendisse facilisis quam eu imperdiet interdum. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa66 = () => {
  if (totalViyusaHPToLose == 66)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec commodo rutrum ultrices. Nullam dapibus nisi ut nisl placerat malesuada. Proin luctus dignissim dui, Viyusatae lacinia velit graViyusada ac. Proin et nisi ac mi ultricies blandit ac ac sem. Nullam id mattis libero. Sed euismod metus ut odio tincidunt, sed sodales metus blandit. Phasellus aliquam elit in lacinia ornare. Nullam suscipit ipsum ac auctor convallis. Donec tempor. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa68 = () => {
  if (totalViyusaHPToLose == 68)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam ac dolor lobortis ante ornare scelerisque. Ut finibus luctus purus sit amet accumsan. Duis vel suscipit erat, nec molestie enim. Nullam bibendum odio nunc. Viyusavamus mollis fermentum ex, in dictum eros blandit nec. Sed sollicitudin quis tortor ac pharetra. Sed consectetur, turpis eu eleifend rutrum, nibh urna condimentum leo, eget interdum urna est nec sapien. Interdum et malesuada fames. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa70 = () => {
  if (totalViyusaHPToLose == 70)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse pharetra purus elementum auctor varius. Morbi elementum mi nec iaculis pretium. Cras nec porta turpis. Nullam vehicula urna Viyusatae volutpat sollicitudin. Aliquam erat volutpat. In vehicula ex in augue scelerisque bibendum. Suspendisse cursus neque at mauris feugiat mattis. Ut at congue justo. Phasellus elementum aliquet graViyusada. Aliquam rhoncus vulputate est eget efficitur. Cras tristique elit non tellus consequat iaculis. Nunc sit. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa72 = () => {
  if (totalViyusaHPToLose == 72)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc sodales, elit sed posuere laoreet, ante mi maximus velit, vel accumsan sem metus vel justo. Curabitur nec tincidunt tellus, at laoreet felis. Fusce eu luctus felis. Morbi varius, turpis eu aliquam auctor, magna ante interdum nulla, quis maximus magna felis nec nisl. Viyusavamus Viyusatae ullamcorper dolor. Donec feugiat in dolor in maximus. Integer Viyusaverra dui sit amet nulla tristique, sit amet suscipit leo. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa74 = () => {
  if (totalViyusaHPToLose == 74)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi quis magna a justo bibendum dictum sit amet sit amet ex. Aenean quis hendrerit urna, ut ullamcorper nisi. Aenean a nunc consectetur, pharetra lectus non, rhoncus sapien. Sed quis nulla graViyusada, interdum turpis a, faucibus est. Curabitur a odio Viyusatae ex tristique luctus Viyusatae a sem. Nulla congue vel lacus eget varius. Aliquam fermentum nibh quis diam dictum, vel porta justo rhoncus. Morbi at rhoncus. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa76 = () => {
  if (totalViyusaHPToLose == 76)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque nec euismod est. Cras tincidunt tempus blandit. Vestibulum vel tortor sed ligula vestibulum aliquet sit amet vel tellus. Mauris Viyusatae ultricies nibh. Integer eu augue non nulla consectetur cursus. Fusce diam purus, faucibus non interdum sed, varius eget tellus. Suspendisse vehicula justo diam, ac fringilla eros sagittis sit amet. Suspendisse non justo lacinia, tempor libero pulViyusanar, efficitur arcu. Nunc Viyusatae enim vestibulum massa interdum volutpat sit amet. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa78 = () => {
  if (totalViyusaHPToLose == 78)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec augue arcu, fringilla Viyusatae tempus vel, ultricies commodo turpis. Pellentesque ut risus luctus, accumsan dolor eget, luctus felis. Suspendisse ac egestas nunc. Sed Viyusaverra felis nec lectus tempor feugiat. Nunc tincidunt finibus turpis non luctus. Nullam orci nisl, porttitor ut neque in, malesuada porta nisi. Phasellus sollicitudin magna faucibus est lobortis, ornare mollis lacus sodales. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa80 = () => {
  if (totalViyusaHPToLose == 80)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas congue dignissim cursus. Viyusavamus id nulla ut risus pellentesque semper. Pellentesque lobortis augue eget ultrices molestie. Nunc euismod massa a lectus varius sollicitudin. Sed dictum quis est placerat porta. Ut malesuada feugiat nisi et accumsan. Morbi et pulViyusanar nunc. Proin fringilla condimentum metus, id blandit mauris egestas in. Fusce tincidunt, nisi eget ornare fermentum, elit erat dictum nulla, tristique iaculis leo massa in orci. Ut aliquam efficitur lacus, in commodo nibh.')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa82 = () => {
  if (totalViyusaHPToLose == 82)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec auctor felis ligula, sit amet pulViyusanar arcu porta quis. Mauris ultrices tristique neque, id ullamcorper nisi pharetra sit amet. Nam commodo leo sit amet sollicitudin vehicula. Morbi congue tellus risus, eu dapibus ex consequat id. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Pellentesque vestibulum arcu diam, non ornare dui volutpat sollicitudin. Nunc Viyusatae massa in leo volutpat fermentum nec eu lectus. Sed sit amet finibus dui, sed. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa84 = () => {
  if (totalViyusaHPToLose == 84)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus dictum velit Viyusatae nunc ultrices, non sagittis eros euismod. Donec mattis leo id tempor tristique. In dignissim tempus augue, et posuere eros tempus sed. Suspendisse in ex felis. Ut faucibus blandit imperdiet. Sed convallis quam quis augue Viyusaverra rutrum. Ut sapien orci, scelerisque blandit nulla sit amet, malesuada sollicitudin justo. Proin et nulla consequat, fermentum eros non, rutrum orci. Suspendisse porttitor Viyusaverra tortor sed consequat. Etiam et augue ac metus condimentum finibus. Nunc vel dictum. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa86 = () => {
  if (totalViyusaHPToLose == 86)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. In a rutrum lorem, vel congue libero. Maecenas egestas tincidunt mauris, ut interdum turpis eleifend id. Mauris consectetur metus id eros consectetur graViyusada. Viyusavamus eget velit ipsum. Nunc porta tortor eu est imperdiet fringilla. Curabitur vel nibh ac odio imperdiet ultricies. Donec tempus ante non libero euismod dapibus. Aenean faucibus consectetur bibendum. Morbi sollicitudin, enim id congue laoreet, elit dui volutpat metus, non egestas ante tortor sit amet ex. Mauris sagittis pulViyusanar finibus. Integer non vehicula lectus, ut. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa88 = () => {
  if (totalViyusaHPToLose == 88)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla arcu odio, vulputate eu tortor ac, convallis convallis ipsum. Proin imperdiet luctus odio id vehicula. Sed congue posuere tristique. Viyusavamus accumsan luctus tellus. Mauris porttitor leo et metus convallis elementum. Suspendisse in urna pharetra, eleifend arcu et, porttitor lectus. Viyusavamus eros tellus, volutpat in est accumsan, bibendum congue est. Phasellus dignissim consequat sem, in rutrum lorem interdum nec. Phasellus facilisis lectus eu eros condimentum, vel luctus justo eleifend. Fusce venenatis ipsum ut ante tincidunt commodo. Suspendisse potenti. Sed volutpat. .')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viyusa90 = () => {
  if (totalViyusaHPToLose == 90)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam eu dignissim neque. Quisque a commodo diam. Cras in accumsan nisl. Maecenas Viyusatae scelerisque arcu, at pretium ipsum. Nam tincidunt ullamcorper congue. Donec scelerisque, augue nec hendrerit vehicula, erat dui pellentesque odio, et Viyusaverra dolor felis nec sem. Praesent a lorem vel tellus feugiat ultricies. Etiam lacinia, sapien quis vulputate tincidunt, nisi lacus ornare augue, elementum efficitur elit diam in nibh. Suspendisse ullamcorper mollis purus, at tincidunt odio porta rhoncus. Quisque efficitur nisl nibh, id auctor libero Viyusaverra ac. In hac. ')}}>
Copy {totalViyusaHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};


const DelayComponentViradiseLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' mt='25px' fontSize='md'>
		  <b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentViradiseLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'>
		  <b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop3 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal3)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 3: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>    
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop4 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal4)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 4: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 4: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop5 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal5)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 5: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop6 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal6)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 6: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop7 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal7)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 7: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop8 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal8)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 8: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViradiseLoop9 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal9)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 9: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViradiseLoop10 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal10)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 10: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 10: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViradiseLoop11 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal11)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 11: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 11: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViradiseLoop12 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal12)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 12: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 12: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViradiseLoop13 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal13)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 13: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 13: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViradiseLoop14 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal14)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 14: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 14: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};
const DelayComponentViradiseLoop15 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal15)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 15: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 15: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop16 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal16)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 16: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 16: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop17 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal17)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 17: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 17: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop18 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal18)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 18: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 18: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop19 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal19)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 19: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 19: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop20 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal20)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 20: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 20: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop21 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal21)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 21: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 21: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop22 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal22)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 22: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 22: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop23 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal23)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 23: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 23: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop24 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal24)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 24: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 24: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop25 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal25)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 25: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 25: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop26 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal26)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 26: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 26: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop27 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal27)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 27: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 27: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop28 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal28)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 28: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 28: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop29 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal29)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 33: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 33: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop30 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal30)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 30: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 30: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop31 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal31)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 31: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 31: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop32 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal32)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 32: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 32: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop33 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal33)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 33: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 33: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop34 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal34)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 34: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 34: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop35 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal35)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 35: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 35: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop36 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal36)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 36: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 36: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop37 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal37)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 37: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 37: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop38 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal38)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 38: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 38: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop39 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal39)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 39: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 39: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop40 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal40)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 40: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 40: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop41 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal41)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 41: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 41: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop42 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal42)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 42: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 42: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop43 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal43)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 43: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 43: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop44 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal44)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 44: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 44: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop45 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal45)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 45: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 45: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop46 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal46)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 46: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 46: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop47 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal47)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 47: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 47: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop48 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal48)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 48: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 48: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop49 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal49)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 49: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 49: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop50 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal50)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 50: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 50: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop51 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal51)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 51: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 51: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop52 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal52)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 52: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 52: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop53 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal53)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 53: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 53: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop54 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal54)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 54: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 54: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop55 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal55)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 55: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 55: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop56 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal56)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 56: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 56: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop57 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal57)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 57: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 57: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop58 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal58)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 58: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 58: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop59 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal59)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 59: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 59: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop60 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal60)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 60: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 60: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop61 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal61)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 61: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 61: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop62 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal62)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 62: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 62: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop63 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal63)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 63: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 63: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop64 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal64)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 64: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 64: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop65 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal65)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 65: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 65: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop66 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal66)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 66: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 66: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop67 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal67)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 67: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 67: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop68 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal68)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 68: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 68: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop69 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal69)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 69: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 69: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop70 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal70)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 70: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 70: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop71 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal71)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 71: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 71: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop72 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal72)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 72: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 72: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop73 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal73)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 73: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 73: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop74 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal74)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 74: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 74: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop75 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal75)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 75: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 75: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop76 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal76)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 76: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 76: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop77 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal77)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 77: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 77: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop78 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal78)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 78: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 78: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop79 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal79)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 79: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 79: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop80 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal80)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 80: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 80: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop81 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal81)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 81: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 81: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop82 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal82)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 82: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 82: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop83 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal83)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 83: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 83: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop84 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal84)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 84: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 84: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop85 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal85)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 85: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 85: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop86 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal86)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 86: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 86: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop87 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal87)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 87: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 87: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop88 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal88)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 88: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 88: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop89 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal89)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 89: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 89: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop90 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal90)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 90: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 90: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop91 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal91)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 91: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 91: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop92 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal92)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 92: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 92: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop93 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal93)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 93: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 93: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop94 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal94)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 94: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 94: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop95 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal95)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 95: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 95: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop96 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal96)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 96: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 96: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop97 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal97)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 97: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 97: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop98 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal98)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 98: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 98: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop99 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal99)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 99: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 99: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop100 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal100)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 100: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 100: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop101 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal101)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 101: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 101: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop102 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal102)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 102: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 102: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop103 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal103)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 103: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 103: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop104 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal104)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 104: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 104: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop105 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal105)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 105: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 105: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop106 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal106)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 106: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 106: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop107 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal107)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 107: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 107: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop108 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal108)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 108: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 108: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop109 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal109)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 109: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 109: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop110 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal110)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 110: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 110: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop111 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal111)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 111: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 111: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop112 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal112)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 112: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 112: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop113 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal113)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 113: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 113: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop114 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal114)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 114: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 114: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop115 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal115)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 115: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 115: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop116 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal116)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 116: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 116: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop117 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal117)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 117: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 117: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop118 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal118)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 118: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 118: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop119 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal119)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 119: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 119: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop120 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal120)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 120: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 120: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop121 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal121)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 121: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 121: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop122 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal122)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 122: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 122: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop123 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal123)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 123: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 123: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop124 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal124)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 124: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 124: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop125 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal125)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 125: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 125: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop126 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal126)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 126: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 126: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop127 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal127)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 127: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 127: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop128 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTime3_5SecPerHP30minTimeVal128)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}><b>Loop 128: </b>{totalViradiseMins75} minutes and {totalViradiseSecsAdj75} seconds </Text>)
  return (   <Timer initialTime={totalLoopTime3_5SecPerHP30minTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'><b>Loop 128: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};

const DelayComponentViradiseLoop4x = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, (((Math.ceil((1800/7)*.9))*7)*1000))
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (
    <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
    }} >
        <Text mt='15px' pt='10px'  fontSize='md' style={{color: '#7a7a7a'}}>
         At ~2 mins 55 secs remaining: <br />
  the timer will flash 1x, then show the 4x reward multiplier</Text>
      </Container>
    )
return (   <Timer initialTime={totalFinalLoopSecsVoidWignow}
direction="backward"
    timeToUpdate={10}>
  {({ start, resume, pause, stop, reset, timerState }) => (
    <React.Fragment>
      <Container height='100px' mt='-20px' align='center' style={{backgroundColor: '#000000'
    }} >
        <Text mt='15px' pt='25px' fontSize='md'><span>When you see the </span><span style={{color: '#B794F4'}}><b>x4 multiplier</b></span><span>, <b><i>type</i></b> at least 1 word</span></Text>
      </Container>
    </React.Fragment>
  )}
</Timer>
)
};

const DelayComponentViradiseLoopFinal = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalWhenToStartFinalViradiseLoop)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Final Loop: </b>0 minutes and {totalLeftoverViradiseTime} seconds </Text>)
  return (   <Timer initialTime={totalFinalLoopSecsViradise}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
  	  <div>
  	  <Text mb='8px' fontSize='md'>
		  <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
  	  </div>
  	</React.Fragment>
	)}
  </Timer>
)
};


//Viradise - min - timers//

const DelayComponentViradiseMinLoop = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, 0)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (null)
  return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' mt='25px' fontSize='md'>
      	<b>Loop 1: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};


const DelayComponentViradiseMinLoop2 = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
	const timeout = setTimeout(() => {
  	setShow(true)
	}, totalLoopTimeMin3_5SecPerHP30MinTimeVal2)
	return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
	<b>Loop 2: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
  return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
  direction="backward"
  	timeToUpdate={10}>
	{({ start, resume, pause, stop, reset, timerState }) => (
  	<React.Fragment>
    	<div>
    	<Text mb='8px' fontSize='md'>
      	<b>Loop 2: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    	</div>
  	</React.Fragment>
	)}
  </Timer>
)
};
  
  const DelayComponentViradiseMinLoop3 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP30MinTimeVal3)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 3: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 3: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViradiseMinLoop4 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP30MinTimeVal4)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 4: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViradiseMinLoop5 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP30MinTimeVal5)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 5: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 5: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViradiseMinLoop6 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP30MinTimeVal6)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 6: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 6: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  
  const DelayComponentViradiseMinLoop7 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP30MinTimeVal7)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 7: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 7: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };


  const DelayComponentViradiseMinLoop8 = () => {
    const [show, setShow] = React.useState(false)
  
    React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalLoopTimeMin3_5SecPerHP30MinTimeVal8)
    return () => clearTimeout(timeout)
    }, [show])
    if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Loop 8: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
    return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
    direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'><b>Loop 8: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
        </div>
      </React.Fragment>
    )}
    </Timer>
  )
  };
  

const DelayComponentViradiseMinLoop9 = () => {
const [show, setShow] = React.useState(false)

React.useEffect(() => {
const timeout = setTimeout(() => {
  setShow(true)
}, totalLoopTimeMin3_5SecPerHP30MinTimeVal9)
return () => clearTimeout(timeout)
}, [show])
if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
<b>Loop 9: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
direction="backward"
  timeToUpdate={10}>
{({ start, resume, pause, stop, reset, timerState }) => (
  <React.Fragment>
    <div>
    <Text mb='8px' fontSize='md'><b>Loop 9: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    </div>
  </React.Fragment>
)}
</Timer>
)
};

const DelayComponentViradiseMinLoop10 = () => {
const [show, setShow] = React.useState(false)

React.useEffect(() => {
const timeout = setTimeout(() => {
  setShow(true)
}, totalLoopTimeMin3_5SecPerHP30MinTimeVal10)
return () => clearTimeout(timeout)
}, [show])
if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
<b>Loop 10: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
direction="backward"
  timeToUpdate={10}>
{({ start, resume, pause, stop, reset, timerState }) => (
  <React.Fragment>
    <div>
    <Text mb='8px' fontSize='md'><b>Loop 10: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    </div>
  </React.Fragment>
)}
</Timer>
)
};

const DelayComponentViradiseMinLoop11 = () => {
const [show, setShow] = React.useState(false)

React.useEffect(() => {
const timeout = setTimeout(() => {
  setShow(true)
}, totalLoopTimeMin3_5SecPerHP30MinTimeVal11)
return () => clearTimeout(timeout)
}, [show])
if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
<b>Loop 11: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
direction="backward"
  timeToUpdate={10}>
{({ start, resume, pause, stop, reset, timerState }) => (
  <React.Fragment>
    <div>
    <Text mb='8px' fontSize='md'><b>Loop 11: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    </div>
  </React.Fragment>
)}
</Timer>
)
};


const DelayComponentViradiseMinLoop12 = () => {
const [show, setShow] = React.useState(false)

React.useEffect(() => {
const timeout = setTimeout(() => {
  setShow(true)
}, totalLoopTimeMin3_5SecPerHP30MinTimeVal12)
return () => clearTimeout(timeout)
}, [show])
if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
<b>Loop 12: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
direction="backward"
  timeToUpdate={10}>
{({ start, resume, pause, stop, reset, timerState }) => (
  <React.Fragment>
    <div>
    <Text mb='8px' fontSize='md'><b>Loop 12: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    </div>
  </React.Fragment>
)}
</Timer>
)
};


const DelayComponentViradiseMinLoop13 = () => {
const [show, setShow] = React.useState(false)

React.useEffect(() => {
const timeout = setTimeout(() => {
  setShow(true)
}, totalLoopTimeMin3_5SecPerHP30MinTimeVal13)
return () => clearTimeout(timeout)
}, [show])
if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
<b>Loop 13: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
direction="backward"
  timeToUpdate={10}>
{({ start, resume, pause, stop, reset, timerState }) => (
  <React.Fragment>
    <div>
    <Text mb='8px' fontSize='md'><b>Loop 13: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    </div>
  </React.Fragment>
)}
</Timer>
)
};


const DelayComponentViradiseMinLoop14 = () => {
const [show, setShow] = React.useState(false)

React.useEffect(() => {
const timeout = setTimeout(() => {
  setShow(true)
}, totalLoopTimeMin3_5SecPerHP30MinTimeVal14)
return () => clearTimeout(timeout)
}, [show])
if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
<b>Loop 14: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
direction="backward"
  timeToUpdate={10}>
{({ start, resume, pause, stop, reset, timerState }) => (
  <React.Fragment>
    <div>
    <Text mb='8px' fontSize='md'><b>Loop 14: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    </div>
  </React.Fragment>
)}
</Timer>
)
};


const DelayComponentViradiseMinLoop15 = () => {
const [show, setShow] = React.useState(false)

React.useEffect(() => {
const timeout = setTimeout(() => {
  setShow(true)
}, totalLoopTimeMin3_5SecPerHP30MinTimeVal15)
return () => clearTimeout(timeout)
}, [show])
if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
<b>Loop 15: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
direction="backward"
  timeToUpdate={10}>
{({ start, resume, pause, stop, reset, timerState }) => (
  <React.Fragment>
    <div>
    <Text mb='8px' fontSize='md'><b>Loop 15: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    </div>
  </React.Fragment>
)}
</Timer>
)
};

const DelayComponentViradiseMinLoop16 = () => {
const [show, setShow] = React.useState(false)

React.useEffect(() => {
const timeout = setTimeout(() => {
  setShow(true)
}, totalLoopTimeMin3_5SecPerHP30MinTimeVal16)
return () => clearTimeout(timeout)
}, [show])
if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
<b>Loop 16: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
direction="backward"
  timeToUpdate={10}>
{({ start, resume, pause, stop, reset, timerState }) => (
  <React.Fragment>
    <div>
    <Text mb='8px' fontSize='md'><b>Loop 16: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    </div>
  </React.Fragment>
)}
</Timer>
)
};

const DelayComponentViradiseMinLoop17 = () => {
const [show, setShow] = React.useState(false)

React.useEffect(() => {
const timeout = setTimeout(() => {
  setShow(true)
}, totalLoopTimeMin3_5SecPerHP30MinTimeVal17)
return () => clearTimeout(timeout)
}, [show])
if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
<b>Loop 17: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
direction="backward"
  timeToUpdate={10}>
{({ start, resume, pause, stop, reset, timerState }) => (
  <React.Fragment>
    <div>
    <Text mb='8px' fontSize='md'><b>Loop 17: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    </div>
  </React.Fragment>
)}
</Timer>
)
};

const DelayComponentViradiseMinLoop18 = () => {
const [show, setShow] = React.useState(false)

React.useEffect(() => {
const timeout = setTimeout(() => {
  setShow(true)
}, totalLoopTimeMin3_5SecPerHP30MinTimeVal18)
return () => clearTimeout(timeout)
}, [show])
if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
<b>Loop 18: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
direction="backward"
  timeToUpdate={10}>
{({ start, resume, pause, stop, reset, timerState }) => (
  <React.Fragment>
    <div>
    <Text mb='8px' fontSize='md'><b>Loop 18: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    </div>
  </React.Fragment>
)}
</Timer>
)
};

const DelayComponentViradiseMinLoop19 = () => {
const [show, setShow] = React.useState(false)

React.useEffect(() => {
const timeout = setTimeout(() => {
  setShow(true)
}, totalLoopTimeMin3_5SecPerHP30MinTimeVal19)
return () => clearTimeout(timeout)
}, [show])
if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
<b>Loop 19: </b>{totalViradiseMins10} minutes and {totalViradiseSecs10} seconds </Text>)
return (   <Timer initialTime={totalLoopTimeMin3_5SecPerHP30MinTimeVal2}
direction="backward"
  timeToUpdate={10}>
{({ start, resume, pause, stop, reset, timerState }) => (
  <React.Fragment>
    <div>
    <Text mb='8px' fontSize='md'><b>Loop 19: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>	 
    </div>
  </React.Fragment>
)}
</Timer>
)
};


const DelayComponentViradiseMinLoopFinal = () => {
  const [show, setShow] = React.useState(false)

  React.useEffect(() => {
    const timeout = setTimeout(() => {
      setShow(true)
    }, totalWhenToStartFinalViradiseLoopMin)
    return () => clearTimeout(timeout)
  }, [show])
  if (!show) return (<Text mb='8px' fontSize='md' style={{color: '#7a7a7a'}}>
    <b>Final Loop: </b>{totalViradiseFinalMins} minutes and {totalViradiseFinalSecs} seconds </Text>)
  return (   <Timer initialTime={totalFinalLoopSecsViradiseMin}
  direction="backward"
      timeToUpdate={10}>
    {({ start, resume, pause, stop, reset, timerState }) => (
      <React.Fragment>
        <div>
        <Text mb='8px' fontSize='md'>
          <b>Final Loop: </b><Timer.Minutes /> minutes and <Timer.Seconds /> seconds </Text>
        </div>
      </React.Fragment>
    )}
  </Timer>
)
};

  //Viradise - min - it goes in its boxes precious//

  const ViradiseTimerMin = () => {
    if (totalViradiseLoops == 1)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin2 = () => {
    if (totalViradiseLoops == 2)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin3 = () => {
    if (totalViradiseLoops == 3)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin4 = () => {
    if (totalViradiseLoops == 4)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin5 = () => {
    if (totalViradiseLoops == 5)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin6 = () => {
    if (totalViradiseLoops == 6)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin7 = () => {
    if (totalViradiseLoops == 7)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoop7 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin8 = () => {
    if (totalViradiseLoops == 8)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoop7 />
  <DelayComponentViradiseMinLoop8 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin9 = () => {
    if (totalViradiseLoops == 9)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoop7 />
  <DelayComponentViradiseMinLoop8 />
  <DelayComponentViradiseMinLoop9 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin10 = () => {
    if (totalViradiseLoops == 10)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoop7 />
  <DelayComponentViradiseMinLoop8 />
  <DelayComponentViradiseMinLoop9 />
  <DelayComponentViradiseMinLoop10 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin11 = () => {
    if (totalViradiseLoops == 11)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoop7 />
  <DelayComponentViradiseMinLoop8 />
  <DelayComponentViradiseMinLoop9 />
  <DelayComponentViradiseMinLoop10 />
  <DelayComponentViradiseMinLoop11 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin12 = () => {
    if (totalViradiseLoops == 12)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoop7 />
  <DelayComponentViradiseMinLoop8 />
  <DelayComponentViradiseMinLoop9 />
  <DelayComponentViradiseMinLoop10 />
  <DelayComponentViradiseMinLoop11 />
  <DelayComponentViradiseMinLoop12 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin13 = () => {
    if (totalViradiseLoops == 13)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoop7 />
  <DelayComponentViradiseMinLoop8 />
  <DelayComponentViradiseMinLoop9 />
  <DelayComponentViradiseMinLoop10 />
  <DelayComponentViradiseMinLoop11 />
  <DelayComponentViradiseMinLoop12 />
  <DelayComponentViradiseMinLoop13 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin14 = () => {
    if (totalViradiseLoops == 14)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoop7 />
  <DelayComponentViradiseMinLoop8 />
  <DelayComponentViradiseMinLoop9 />
  <DelayComponentViradiseMinLoop10 />
  <DelayComponentViradiseMinLoop11 />
  <DelayComponentViradiseMinLoop12 />
  <DelayComponentViradiseMinLoop13 />
  <DelayComponentViradiseMinLoop14 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin15 = () => {
    if (totalViradiseLoops == 15)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoop7 />
  <DelayComponentViradiseMinLoop8 />
  <DelayComponentViradiseMinLoop9 />
  <DelayComponentViradiseMinLoop10 />
  <DelayComponentViradiseMinLoop11 />
  <DelayComponentViradiseMinLoop12 />
  <DelayComponentViradiseMinLoop13 />
  <DelayComponentViradiseMinLoop14 />
  <DelayComponentViradiseMinLoop15 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin16 = () => {
    if (totalViradiseLoops == 16)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoop7 />
  <DelayComponentViradiseMinLoop8 />
  <DelayComponentViradiseMinLoop9 />
  <DelayComponentViradiseMinLoop10 />
  <DelayComponentViradiseMinLoop11 />
  <DelayComponentViradiseMinLoop12 />
  <DelayComponentViradiseMinLoop13 />
  <DelayComponentViradiseMinLoop14 />
  <DelayComponentViradiseMinLoop15 />
  <DelayComponentViradiseMinLoop16 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin17 = () => {
    if (totalViradiseLoops == 17)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoop7 />
  <DelayComponentViradiseMinLoop8 />
  <DelayComponentViradiseMinLoop9 />
  <DelayComponentViradiseMinLoop10 />
  <DelayComponentViradiseMinLoop11 />
  <DelayComponentViradiseMinLoop12 />
  <DelayComponentViradiseMinLoop13 />
  <DelayComponentViradiseMinLoop14 />
  <DelayComponentViradiseMinLoop15 />
  <DelayComponentViradiseMinLoop16 />
  <DelayComponentViradiseMinLoop17 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin18 = () => {
    if (totalViradiseLoops == 18)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoop7 />
  <DelayComponentViradiseMinLoop8 />
  <DelayComponentViradiseMinLoop9 />
  <DelayComponentViradiseMinLoop10 />
  <DelayComponentViradiseMinLoop11 />
  <DelayComponentViradiseMinLoop12 />
  <DelayComponentViradiseMinLoop13 />
  <DelayComponentViradiseMinLoop14 />
  <DelayComponentViradiseMinLoop15 />
  <DelayComponentViradiseMinLoop16 />
  <DelayComponentViradiseMinLoop17 />
  <DelayComponentViradiseMinLoop18 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

  const ViradiseTimerMin19 = () => {
    if (totalViradiseLoops == 19)
      return(<Container>
  <DelayComponentViradiseMinLoop />
  <DelayComponentViradiseMinLoop2 />
  <DelayComponentViradiseMinLoop3 />
  <DelayComponentViradiseMinLoop4 />
  <DelayComponentViradiseMinLoop5 />
  <DelayComponentViradiseMinLoop6 />
  <DelayComponentViradiseMinLoop7 />
  <DelayComponentViradiseMinLoop8 />
  <DelayComponentViradiseMinLoop9 />
  <DelayComponentViradiseMinLoop10 />
  <DelayComponentViradiseMinLoop11 />
  <DelayComponentViradiseMinLoop12 />
  <DelayComponentViradiseMinLoop13 />
  <DelayComponentViradiseMinLoop14 />
  <DelayComponentViradiseMinLoop15 />
  <DelayComponentViradiseMinLoop16 />
  <DelayComponentViradiseMinLoop17 />
  <DelayComponentViradiseMinLoop18 />
  <DelayComponentViradiseMinLoop19 />
  <DelayComponentViradiseMinLoopFinal />
  <YayBattleEndViradiseMin />
  </Container>
  )
  };

//Viradise - it goes in its boxes precious//

const ViradiseTimer4 = () => {
  if (totalViradise75Loops == 4)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer5 = () => {
  if (totalViradise75Loops == 5)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise /></Container>
)
};

const ViradiseTimer6 = () => {
  if (totalViradise75Loops == 6)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer7 = () => {
  if (totalViradise75Loops == 7)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer8 = () => {
  if (totalViradise75Loops == 8)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer9 = () => {
  if (totalViradise75Loops == 9)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer10 = () => {
  if (totalViradise75Loops == 10)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer11 = () => {
  if (totalViradise75Loops == 11)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer12 = () => {
  if (totalViradise75Loops == 12)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer13 = () => {
  if (totalViradise75Loops == 13)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer14 = () => {
  if (totalViradise75Loops == 14)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer15 = () => {
  if (totalViradise75Loops == 15)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer16 = () => {
  if (totalViradise75Loops == 16)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer17 = () => {
  if (totalViradise75Loops == 17)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer18 = () => {
  if (totalViradise75Loops == 18)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer19 = () => {
  if (totalViradise75Loops == 19)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer20 = () => {
  if (totalViradise75Loops == 20)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer21 = () => {
  if (totalViradise75Loops == 21)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer22 = () => {
  if (totalViradise75Loops == 22)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer23 = () => {
  if (totalViradise75Loops == 23)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer24 = () => {
  if (totalViradise75Loops == 24)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer25 = () => {
  if (totalViradise75Loops == 25)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer26 = () => {
  if (totalViradise75Loops == 26)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer27 = () => {
  if (totalViradise75Loops == 27)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer28 = () => {
  if (totalViradise75Loops == 28)
    return(<Container>
<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer29 = () => {
  if (totalViradise75Loops == 29)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer30 = () => {
  if (totalViradise75Loops == 30)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer31 = () => {
  if (totalViradise75Loops == 31)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer32 = () => {
  if (totalViradise75Loops == 32)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer33 = () => {
  if (totalViradise75Loops == 33)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer34 = () => {
  if (totalViradise75Loops == 34)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer35 = () => {
  if (totalViradise75Loops == 35)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer36 = () => {
  if (totalViradise75Loops == 36)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer37 = () => {
  if (totalViradise75Loops == 37)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer38 = () => {
  if (totalViradise75Loops == 38)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer39 = () => {
  if (totalViradise75Loops == 39)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer40 = () => {
  if (totalViradise75Loops == 40)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer41 = () => {
  if (totalViradise75Loops == 41)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer42 = () => {
  if (totalViradise75Loops == 42)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer43 = () => {
  if (totalViradise75Loops == 43)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer44 = () => {
  if (totalViradise75Loops == 44)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer45 = () => {
  if (totalViradise75Loops == 45)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer46 = () => {
  if (totalViradise75Loops == 46)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer47 = () => {
  if (totalViradise75Loops == 47)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer48 = () => {
  if (totalViradise75Loops == 48)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer49 = () => {
  if (totalViradise75Loops == 49)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer50 = () => {
  if (totalViradise75Loops == 50)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer51 = () => {
  if (totalViradise75Loops == 51)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer52 = () => {
  if (totalViradise75Loops == 52)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer53 = () => {
  if (totalViradise75Loops == 53)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer54 = () => {
  if (totalViradise75Loops == 54)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer55 = () => {
  if (totalViradise75Loops == 55)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer56 = () => {
  if (totalViradise75Loops == 56)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer57 = () => {
  if (totalViradise75Loops == 57)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer58 = () => {
  if (totalViradise75Loops == 58)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer59 = () => {
  if (totalViradise75Loops == 59)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer60 = () => {
  if (totalViradise75Loops == 60)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer61 = () => {
  if (totalViradise75Loops == 61)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer62 = () => {
  if (totalViradise75Loops == 62)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer63 = () => {
  if (totalViradise75Loops == 63)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer64 = () => {
  if (totalViradise75Loops == 64)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer65 = () => {
  if (totalViradise75Loops == 65)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer66 = () => {
  if (totalViradise75Loops == 66)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer67 = () => {
  if (totalViradise75Loops == 67)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer68 = () => {
  if (totalViradise75Loops == 68)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer69 = () => {
  if (totalViradise75Loops == 69)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer70 = () => {
  if (totalViradise75Loops == 70)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer71 = () => {
  if (totalViradise75Loops == 71)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer72 = () => {
  if (totalViradise75Loops == 72)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer73 = () => {
  if (totalViradise75Loops == 73)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer74 = () => {
  if (totalViradise75Loops == 74)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer75 = () => {
  if (totalViradise75Loops == 75)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer76 = () => {
  if (totalViradise75Loops == 76)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer77 = () => {
  if (totalViradise75Loops == 77)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer78 = () => {
  if (totalViradise75Loops == 78)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer79 = () => {
  if (totalViradise75Loops == 79)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer80 = () => {
  if (totalViradise75Loops == 80)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer81 = () => {
  if (totalViradise75Loops == 81)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer82 = () => {
  if (totalViradise75Loops == 82)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer83 = () => {
  if (totalViradise75Loops == 83)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer84 = () => {
  if (totalViradise75Loops == 84)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer85 = () => {
  if (totalViradise75Loops == 85)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer86 = () => {
  if (totalViradise75Loops == 86)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer87 = () => {
  if (totalViradise75Loops == 87)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer88 = () => {
  if (totalViradise75Loops == 88)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer89 = () => {
  if (totalViradise75Loops == 89)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer90 = () => {
  if (totalViradise75Loops == 90)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer91 = () => {
  if (totalViradise75Loops == 91)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer92 = () => {
  if (totalViradise75Loops == 92)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer93 = () => {
  if (totalViradise75Loops == 93)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer94 = () => {
  if (totalViradise75Loops == 94)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer95 = () => {
  if (totalViradise75Loops == 95)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer96 = () => {
  if (totalViradise75Loops == 96)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer97 = () => {
  if (totalViradise75Loops == 97)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer98 = () => {
  if (totalViradise75Loops == 98)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer99 = () => {
  if (totalViradise75Loops == 99)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer100 = () => {
  if (totalViradise75Loops == 100)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer101 = () => {
  if (totalViradise75Loops == 101)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer102 = () => {
  if (totalViradise75Loops == 102)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer103 = () => {
  if (totalViradise75Loops == 103)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer104 = () => {
  if (totalViradise75Loops == 104)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer105 = () => {
  if (totalViradise75Loops == 105)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer106 = () => {
  if (totalViradise75Loops == 106)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer107 = () => {
  if (totalViradise75Loops == 107)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer108 = () => {
  if (totalViradise75Loops == 108)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer109 = () => {
  if (totalViradise75Loops == 109)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer110 = () => {
  if (totalViradise75Loops == 110)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer111 = () => {
  if (totalViradise75Loops == 111)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};

const ViradiseTimer112 = () => {
  if (totalViradise75Loops == 112)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer113 = () => {
  if (totalViradise75Loops == 113)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer114 = () => {
  if (totalViradise75Loops == 114)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer115 = () => {
  if (totalViradise75Loops == 115)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer116 = () => {
  if (totalViradise75Loops == 116)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />
<DelayComponentViradiseLoop116 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer117 = () => {
  if (totalViradise75Loops == 117)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />
<DelayComponentViradiseLoop116 />
<DelayComponentViradiseLoop117 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer118 = () => {
  if (totalViradise75Loops == 118)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />
<DelayComponentViradiseLoop116 />
<DelayComponentViradiseLoop117 />
<DelayComponentViradiseLoop118 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer119 = () => {
  if (totalViradise75Loops == 119)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />
<DelayComponentViradiseLoop116 />
<DelayComponentViradiseLoop117 />
<DelayComponentViradiseLoop118 />
<DelayComponentViradiseLoop119 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer120 = () => {
  if (totalViradise75Loops == 120)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />
<DelayComponentViradiseLoop116 />
<DelayComponentViradiseLoop117 />
<DelayComponentViradiseLoop118 />
<DelayComponentViradiseLoop119 />
<DelayComponentViradiseLoop120 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer121 = () => {
  if (totalViradise75Loops == 121)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />
<DelayComponentViradiseLoop116 />
<DelayComponentViradiseLoop117 />
<DelayComponentViradiseLoop118 />
<DelayComponentViradiseLoop119 />
<DelayComponentViradiseLoop120 />
<DelayComponentViradiseLoop121 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer122 = () => {
  if (totalViradise75Loops == 122)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />
<DelayComponentViradiseLoop116 />
<DelayComponentViradiseLoop117 />
<DelayComponentViradiseLoop118 />
<DelayComponentViradiseLoop119 />
<DelayComponentViradiseLoop120 />
<DelayComponentViradiseLoop121 />
<DelayComponentViradiseLoop122 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer123 = () => {
  if (totalViradise75Loops == 123)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />
<DelayComponentViradiseLoop116 />
<DelayComponentViradiseLoop117 />
<DelayComponentViradiseLoop118 />
<DelayComponentViradiseLoop119 />
<DelayComponentViradiseLoop120 />
<DelayComponentViradiseLoop121 />
<DelayComponentViradiseLoop122 />
<DelayComponentViradiseLoop123 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer124 = () => {
  if (totalViradise75Loops == 124)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />
<DelayComponentViradiseLoop116 />
<DelayComponentViradiseLoop117 />
<DelayComponentViradiseLoop118 />
<DelayComponentViradiseLoop119 />
<DelayComponentViradiseLoop120 />
<DelayComponentViradiseLoop121 />
<DelayComponentViradiseLoop122 />
<DelayComponentViradiseLoop123 />
<DelayComponentViradiseLoop124 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer125 = () => {
  if (totalViradise75Loops == 125)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />
<DelayComponentViradiseLoop116 />
<DelayComponentViradiseLoop117 />
<DelayComponentViradiseLoop118 />
<DelayComponentViradiseLoop119 />
<DelayComponentViradiseLoop120 />
<DelayComponentViradiseLoop121 />
<DelayComponentViradiseLoop122 />
<DelayComponentViradiseLoop123 />
<DelayComponentViradiseLoop124 />
<DelayComponentViradiseLoop125 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer126 = () => {
  if (totalViradise75Loops == 126)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />
<DelayComponentViradiseLoop116 />
<DelayComponentViradiseLoop117 />
<DelayComponentViradiseLoop118 />
<DelayComponentViradiseLoop119 />
<DelayComponentViradiseLoop120 />
<DelayComponentViradiseLoop121 />
<DelayComponentViradiseLoop122 />
<DelayComponentViradiseLoop123 />
<DelayComponentViradiseLoop124 />
<DelayComponentViradiseLoop125 />
<DelayComponentViradiseLoop126 />

<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer127 = () => {
  if (totalViradise75Loops == 127)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />
<DelayComponentViradiseLoop116 />
<DelayComponentViradiseLoop117 />
<DelayComponentViradiseLoop118 />
<DelayComponentViradiseLoop119 />
<DelayComponentViradiseLoop120 />
<DelayComponentViradiseLoop121 />
<DelayComponentViradiseLoop122 />
<DelayComponentViradiseLoop123 />
<DelayComponentViradiseLoop124 />
<DelayComponentViradiseLoop125 />
<DelayComponentViradiseLoop126 />
<DelayComponentViradiseLoop127 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const ViradiseTimer128 = () => {
  if (totalViradise75Loops == 128)
    return(<Container>

<DelayComponentViradiseLoop />
<DelayComponentViradiseLoop2 />
<DelayComponentViradiseLoop3 />
<DelayComponentViradiseLoop4 />
<DelayComponentViradiseLoop5 />
<DelayComponentViradiseLoop6 />
<DelayComponentViradiseLoop7 />
<DelayComponentViradiseLoop8 />
<DelayComponentViradiseLoop9 />
<DelayComponentViradiseLoop10 />
<DelayComponentViradiseLoop11 />
<DelayComponentViradiseLoop12 />
<DelayComponentViradiseLoop13 />
<DelayComponentViradiseLoop14 />
<DelayComponentViradiseLoop15 />
<DelayComponentViradiseLoop16 />
<DelayComponentViradiseLoop17 />
<DelayComponentViradiseLoop18 />
<DelayComponentViradiseLoop19 />
<DelayComponentViradiseLoop20 />
<DelayComponentViradiseLoop21 />
<DelayComponentViradiseLoop22 />
<DelayComponentViradiseLoop23 />
<DelayComponentViradiseLoop24 />
<DelayComponentViradiseLoop25 />
<DelayComponentViradiseLoop26 />
<DelayComponentViradiseLoop27 />
<DelayComponentViradiseLoop28 />
<DelayComponentViradiseLoop29 />
<DelayComponentViradiseLoop30 />
<DelayComponentViradiseLoop31 />
<DelayComponentViradiseLoop32 />
<DelayComponentViradiseLoop33 />
<DelayComponentViradiseLoop34 />
<DelayComponentViradiseLoop35 />
<DelayComponentViradiseLoop36 />
<DelayComponentViradiseLoop37 />
<DelayComponentViradiseLoop38 />
<DelayComponentViradiseLoop39 />
<DelayComponentViradiseLoop40 />
<DelayComponentViradiseLoop41 />
<DelayComponentViradiseLoop42 />
<DelayComponentViradiseLoop43 />
<DelayComponentViradiseLoop44 />
<DelayComponentViradiseLoop45 />
<DelayComponentViradiseLoop46 />
<DelayComponentViradiseLoop47 />
<DelayComponentViradiseLoop48 />
<DelayComponentViradiseLoop49 />
<DelayComponentViradiseLoop50 />
<DelayComponentViradiseLoop51 />
<DelayComponentViradiseLoop52 />
<DelayComponentViradiseLoop53 />
<DelayComponentViradiseLoop54 />
<DelayComponentViradiseLoop55 />
<DelayComponentViradiseLoop56 />
<DelayComponentViradiseLoop57 />
<DelayComponentViradiseLoop58 />
<DelayComponentViradiseLoop59 />
<DelayComponentViradiseLoop60 />
<DelayComponentViradiseLoop61 />
<DelayComponentViradiseLoop62 />
<DelayComponentViradiseLoop63 />
<DelayComponentViradiseLoop64 />
<DelayComponentViradiseLoop65 />
<DelayComponentViradiseLoop66 />
<DelayComponentViradiseLoop67 />
<DelayComponentViradiseLoop68 />
<DelayComponentViradiseLoop69 />
<DelayComponentViradiseLoop70 />
<DelayComponentViradiseLoop71 />
<DelayComponentViradiseLoop72 />
<DelayComponentViradiseLoop73 />
<DelayComponentViradiseLoop74 />
<DelayComponentViradiseLoop75 />
<DelayComponentViradiseLoop76 />
<DelayComponentViradiseLoop77 />
<DelayComponentViradiseLoop78 />
<DelayComponentViradiseLoop79 />
<DelayComponentViradiseLoop80 />
<DelayComponentViradiseLoop81 />
<DelayComponentViradiseLoop82 />
<DelayComponentViradiseLoop83 />
<DelayComponentViradiseLoop84 />
<DelayComponentViradiseLoop85 />
<DelayComponentViradiseLoop86 />
<DelayComponentViradiseLoop87 />
<DelayComponentViradiseLoop88 />
<DelayComponentViradiseLoop89 />
<DelayComponentViradiseLoop90 />
<DelayComponentViradiseLoop91 />
<DelayComponentViradiseLoop92 />
<DelayComponentViradiseLoop93 />
<DelayComponentViradiseLoop94 />
<DelayComponentViradiseLoop95 />
<DelayComponentViradiseLoop96 />
<DelayComponentViradiseLoop97 />
<DelayComponentViradiseLoop98 />
<DelayComponentViradiseLoop99 />
<DelayComponentViradiseLoop100 />
<DelayComponentViradiseLoop101 />
<DelayComponentViradiseLoop102 />
<DelayComponentViradiseLoop103 />
<DelayComponentViradiseLoop104 />
<DelayComponentViradiseLoop105 />
<DelayComponentViradiseLoop106 />
<DelayComponentViradiseLoop107 />
<DelayComponentViradiseLoop108 />
<DelayComponentViradiseLoop109 />
<DelayComponentViradiseLoop110 />
<DelayComponentViradiseLoop111 />
<DelayComponentViradiseLoop112 />
<DelayComponentViradiseLoop113 />
<DelayComponentViradiseLoop114 />
<DelayComponentViradiseLoop115 />
<DelayComponentViradiseLoop116 />
<DelayComponentViradiseLoop117 />
<DelayComponentViradiseLoop118 />
<DelayComponentViradiseLoop119 />
<DelayComponentViradiseLoop120 />
<DelayComponentViradiseLoop121 />
<DelayComponentViradiseLoop122 />
<DelayComponentViradiseLoop123 />
<DelayComponentViradiseLoop124 />
<DelayComponentViradiseLoop125 />
<DelayComponentViradiseLoop126 />
<DelayComponentViradiseLoop127 />
<DelayComponentViradiseLoop128 />
<DelayComponentViradiseLoopFinal />
<YayBattleEndViradise />
</Container>
)
};


const Viradise4 = () => {
  if (totalViradiseBackTo100 == 4)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise5 = () => {
  if (totalViradiseBackTo100 == 5)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise6 = () => {
  if (totalViradiseBackTo100 == 6)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise7 = () => {
  if (totalViradiseBackTo100 == 7)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise8 = () => {
  if (totalViradiseBackTo100 == 8)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise9 = () => {
  if (totalViradiseBackTo100 == 9)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise10 = () => {
  if (totalViradiseBackTo100 == 10)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise11 = () => {
  if (totalViradiseBackTo100 == 11)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viradise12 = () => {
  if (totalViradiseBackTo100 == 12)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viradise13 = () => {
  if (totalViradiseBackTo100 == 13)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc ex sodales.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viradise14 = () => {
  if (totalViradiseBackTo100 == 14)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at ex sodales.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viradise15 = () => {
  if (totalViradiseBackTo100 == 15)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viradise16 = () => {
  if (totalViradiseBackTo100 == 16)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in nunc at elia ex sodales consequat.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}


const Viradise17 = () => {
  if (totalViradiseBackTo100 == 17)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus orci. ')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viradise18 = () => {
  if (totalViradiseBackTo100 == 18)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in orci. ')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viradise19 = () => {
  if (totalViradiseBackTo100 == 19)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius. ')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viradise20 = () => {
  if (totalViradiseBackTo100 == 20)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque. ')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viradise21 = () => {
  if (totalViradiseBackTo100 == 21)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus.')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viradise22 = () => {
  if (totalViradiseBackTo100 == 22)
	return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut efficitur sem eros, sed auctor mi maximus in. Orci varius natoque penatibus et. ')}}>
Copy {totalViradiseBackTo100} words<br/>(Lorem Ipsum)</Button>  )
}

const Viradise26 = () => {
  if (totalViradiseHPToLose == 26)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam vel ante quam. Nulla egestas auctor enim non rhoncus. Maecenas feugiat dapibus lacus nec graViradiseda. Quisque dictum.')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise28 = () => {
  if (totalViradiseHPToLose == 28)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam non purus feugiat, graViradiseda dolor eget, porta mi. Aliquam iaculis elit diam. Ut id blandit dui. Nulla et dolor.')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise30 = () => {
  if (totalViradiseHPToLose == 30)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rhoncus euismod lacus ut lobortis. Maecenas tincidunt lacus quis interdum faucibus. Aliquam erat volutpat. Vestibulum semper est in condimentum mattis. Suspendisse.')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise32 = () => {
  if (totalViradiseHPToLose == 32)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec faucibus risus justo, ac consectetur orci maximus nec. Proin placerat, lectus nec tempus cursus, augue nibh eleifend erat, at porttitor nulla arcu in.')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise34 = () => {
  if (totalViradiseHPToLose == 34)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus diam tellus, volutpat Viradisetae dapibus vel, convallis auctor tellus. Cras fringilla tincidunt lorem, quis sagittis odio accumsan at. Sed nec dictum diam. Cras ac pulViradisenar.')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise36 = () => {
  if (totalViradiseHPToLose == 36)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus mollis egestas ex. Viradisevamus tempus neque odio, nec scelerisque ipsum vehicula sit amet. Duis nisl dolor, posuere sed ante vel, euismod faucibus nisi. Donec nulla leo, aliquet.')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise38 = () => {
  if (totalViradiseHPToLose == 38)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque feugiat aliquam ipsum ac auctor. Phasellus a nisi auctor, tempus felis eget, porta felis. Maecenas et tempor nisi. Aenean metus arcu, posuere sit amet nunc vel, cursus porttitor nisl.')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise40 = () => {
  if (totalViradiseHPToLose == 40)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Viradisevamus at est et ipsum suscipit lacinia nec sit amet turpis. Vestibulum nec ex nibh. Etiam consequat et justo sit amet commodo. Suspendisse mattis semper arcu eget fermentum. Donec eu nisi elementum.')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise42 = () => {
  if (totalViradiseHPToLose == 42)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ac aliquam nunc. Sed Viradisetae tellus a tellus dictum condimentum. Nunc volutpat feugiat justo. Fusce vulputate ligula nisl, sed ullamcorper libero imperdiet sit amet. In fermentum sed metus nec pellentesque. Duis eget tellus. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise44 = () => {
  if (totalViradiseHPToLose == 44)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus vehicula volutpat ligula eu efficitur. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris mollis et odio eu placerat. Phasellus mollis eleifend orci, eget pulViradisenar sem Viradiseverra eu. Nam turpis. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise46 = () => {
  if (totalViradiseHPToLose == 46)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer aliquam mauris ac dignissim hendrerit. Suspendisse leo nulla, hendrerit ultrices diam interdum, consequat mollis sapien. Donec ac placerat leo. In ante libero, facilisis sit amet quam in, iaculis commodo nisl. Aliquam tincidunt nunc massa, sit amet Viradiseverra.')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise48 = () => {
  if (totalViradiseHPToLose == 48)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis eu ligula ac ipsum tempus tristique ac at urna. Phasellus accumsan erat ac dui elementum fringilla. Phasellus sagittis et mi ac malesuada. Nam eleifend mi in velit auctor, vel mollis massa volutpat. Ut tempus lorem diam, a sollicitudin ex.')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise50 = () => {
  if (totalViradiseHPToLose == 50)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam consequat blandit eros, pellentesque vulputate tortor imperdiet et. In hac habitasse platea dictumst. Aenean non dapibus diam, Viradisetae suscipit augue. Phasellus ut aliquam magna, nec efficitur lacus. Pellentesque lacus sapien, vulputate in blandit at, venenatis vestibulum magna. Nullam quis facilisis dui. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise52 = () => {
  if (totalViradiseHPToLose == 52)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eros odio, pellentesque quis tellus at, consectetur lobortis sem. Etiam turpis libero, Viradiseverra at malesuada ac, fringilla consectetur orci. Etiam sed convallis magna. Morbi feugiat rutrum metus Viradisetae placerat. Cras fermentum convallis posuere. Viradisevamus hendrerit neque id pharetra consectetur. Etiam fringilla augue et. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise54 = () => {
  if (totalViradiseHPToLose == 54)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec id posuere est, a ultrices nisi. In porttitor ligula vel arcu dapibus, vel interdum magna ultricies. Aenean odio ante, ultrices Viradisetae fermentum sed, aliquam eu tellus. Vestibulum mattis dignissim sollicitudin. Integer mollis, lorem et convallis elementum, lorem nisi vehicula dolor, congue vulputate metus eros id. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise56 = () => {
  if (totalViradiseHPToLose == 56)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce blandit Viradiseverra neque, iaculis blandit urna vulputate et. Etiam eu imperdiet nulla, ut malesuada mi. Nullam ex nisi, fringilla eget orci sed, porta porttitor tellus. Donec nec turpis feugiat, commodo eros in, sodales lacus. Maecenas fermentum lacus posuere mauris placerat tempus. Mauris a lectus tincidunt, aliquet nunc. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise58 = () => {
  if (totalViradiseHPToLose == 58)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam feugiat erat libero, et auctor lorem maximus et. Nam vel massa sed eros luctus finibus nec Viradisetae augue. In pellentesque tortor vel pulViradisenar efficitur. Aenean non nunc volutpat, semper lacus quis, dignissim erat. Phasellus dignissim, leo et finibus maximus, nunc est dignissim augue, quis placerat urna ligula sit amet. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise60 = () => {
  if (totalViradiseHPToLose == 60)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ut sapien ac lacus porttitor aliquam at at nulla. Viradisevamus pharetra pulViradisenar elementum. Nullam imperdiet augue vel eros imperdiet eleifend. Suspendisse rutrum, tortor id volutpat sagittis, elit urna luctus odio, ut congue massa felis eu ligula. Maecenas tempor, urna in eleifend eleifend, eros ante vehicula odio, Viradisetae maximus ipsum sapien sed.')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise62 = () => {
  if (totalViradiseHPToLose == 62)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc Viradiseverra finibus sapien, nec aliquam sem ornare elementum. Mauris a ornare nunc. Vestibulum placerat massa sit amet nisl faucibus, in euismod turpis sollicitudin. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean consectetur vel quam dapibus interdum. Maecenas lacinia dolor justo, at vestibulum ex sollicitudin eget. Nunc in velit. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise64 = () => {
  if (totalViradiseHPToLose == 64)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec eu elementum odio. Nulla imperdiet sit amet risus nec pharetra. Duis auctor, justo et sodales posuere, risus sapien maximus enim, at convallis lorem ex eu orci. Donec imperdiet dictum ex, semper fermentum diam auctor sit amet. In suscipit nec odio Viradisetae Viradiseverra. Nullam Viradisetae hendrerit lectus, at accumsan mauris. Suspendisse facilisis quam eu imperdiet interdum. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise66 = () => {
  if (totalViradiseHPToLose == 66)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec commodo rutrum ultrices. Nullam dapibus nisi ut nisl placerat malesuada. Proin luctus dignissim dui, Viradisetae lacinia velit graViradiseda ac. Proin et nisi ac mi ultricies blandit ac ac sem. Nullam id mattis libero. Sed euismod metus ut odio tincidunt, sed sodales metus blandit. Phasellus aliquam elit in lacinia ornare. Nullam suscipit ipsum ac auctor convallis. Donec tempor. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise68 = () => {
  if (totalViradiseHPToLose == 68)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam ac dolor lobortis ante ornare scelerisque. Ut finibus luctus purus sit amet accumsan. Duis vel suscipit erat, nec molestie enim. Nullam bibendum odio nunc. Viradisevamus mollis fermentum ex, in dictum eros blandit nec. Sed sollicitudin quis tortor ac pharetra. Sed consectetur, turpis eu eleifend rutrum, nibh urna condimentum leo, eget interdum urna est nec sapien. Interdum et malesuada fames. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise70 = () => {
  if (totalViradiseHPToLose == 70)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse pharetra purus elementum auctor varius. Morbi elementum mi nec iaculis pretium. Cras nec porta turpis. Nullam vehicula urna Viradisetae volutpat sollicitudin. Aliquam erat volutpat. In vehicula ex in augue scelerisque bibendum. Suspendisse cursus neque at mauris feugiat mattis. Ut at congue justo. Phasellus elementum aliquet graViradiseda. Aliquam rhoncus vulputate est eget efficitur. Cras tristique elit non tellus consequat iaculis. Nunc sit. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise72 = () => {
  if (totalViradiseHPToLose == 72)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc sodales, elit sed posuere laoreet, ante mi maximus velit, vel accumsan sem metus vel justo. Curabitur nec tincidunt tellus, at laoreet felis. Fusce eu luctus felis. Morbi varius, turpis eu aliquam auctor, magna ante interdum nulla, quis maximus magna felis nec nisl. Viradisevamus Viradisetae ullamcorper dolor. Donec feugiat in dolor in maximus. Integer Viradiseverra dui sit amet nulla tristique, sit amet suscipit leo. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise74 = () => {
  if (totalViradiseHPToLose == 74)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi quis magna a justo bibendum dictum sit amet sit amet ex. Aenean quis hendrerit urna, ut ullamcorper nisi. Aenean a nunc consectetur, pharetra lectus non, rhoncus sapien. Sed quis nulla graViradiseda, interdum turpis a, faucibus est. Curabitur a odio Viradisetae ex tristique luctus Viradisetae a sem. Nulla congue vel lacus eget varius. Aliquam fermentum nibh quis diam dictum, vel porta justo rhoncus. Morbi at rhoncus. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise76 = () => {
  if (totalViradiseHPToLose == 76)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque nec euismod est. Cras tincidunt tempus blandit. Vestibulum vel tortor sed ligula vestibulum aliquet sit amet vel tellus. Mauris Viradisetae ultricies nibh. Integer eu augue non nulla consectetur cursus. Fusce diam purus, faucibus non interdum sed, varius eget tellus. Suspendisse vehicula justo diam, ac fringilla eros sagittis sit amet. Suspendisse non justo lacinia, tempor libero pulViradisenar, efficitur arcu. Nunc Viradisetae enim vestibulum massa interdum volutpat sit amet. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise78 = () => {
  if (totalViradiseHPToLose == 78)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec augue arcu, fringilla Viradisetae tempus vel, ultricies commodo turpis. Pellentesque ut risus luctus, accumsan dolor eget, luctus felis. Suspendisse ac egestas nunc. Sed Viradiseverra felis nec lectus tempor feugiat. Nunc tincidunt finibus turpis non luctus. Nullam orci nisl, porttitor ut neque in, malesuada porta nisi. Phasellus sollicitudin magna faucibus est lobortis, ornare mollis lacus sodales. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise80 = () => {
  if (totalViradiseHPToLose == 80)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas congue dignissim cursus. Viradisevamus id nulla ut risus pellentesque semper. Pellentesque lobortis augue eget ultrices molestie. Nunc euismod massa a lectus varius sollicitudin. Sed dictum quis est placerat porta. Ut malesuada feugiat nisi et accumsan. Morbi et pulViradisenar nunc. Proin fringilla condimentum metus, id blandit mauris egestas in. Fusce tincidunt, nisi eget ornare fermentum, elit erat dictum nulla, tristique iaculis leo massa in orci. Ut aliquam efficitur lacus, in commodo nibh.')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise82 = () => {
  if (totalViradiseHPToLose == 82)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec auctor felis ligula, sit amet pulViradisenar arcu porta quis. Mauris ultrices tristique neque, id ullamcorper nisi pharetra sit amet. Nam commodo leo sit amet sollicitudin vehicula. Morbi congue tellus risus, eu dapibus ex consequat id. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Pellentesque vestibulum arcu diam, non ornare dui volutpat sollicitudin. Nunc Viradisetae massa in leo volutpat fermentum nec eu lectus. Sed sit amet finibus dui, sed. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise84 = () => {
  if (totalViradiseHPToLose == 84)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus dictum velit Viradisetae nunc ultrices, non sagittis eros euismod. Donec mattis leo id tempor tristique. In dignissim tempus augue, et posuere eros tempus sed. Suspendisse in ex felis. Ut faucibus blandit imperdiet. Sed convallis quam quis augue Viradiseverra rutrum. Ut sapien orci, scelerisque blandit nulla sit amet, malesuada sollicitudin justo. Proin et nulla consequat, fermentum eros non, rutrum orci. Suspendisse porttitor Viradiseverra tortor sed consequat. Etiam et augue ac metus condimentum finibus. Nunc vel dictum. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise86 = () => {
  if (totalViradiseHPToLose == 86)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. In a rutrum lorem, vel congue libero. Maecenas egestas tincidunt mauris, ut interdum turpis eleifend id. Mauris consectetur metus id eros consectetur graViradiseda. Viradisevamus eget velit ipsum. Nunc porta tortor eu est imperdiet fringilla. Curabitur vel nibh ac odio imperdiet ultricies. Donec tempus ante non libero euismod dapibus. Aenean faucibus consectetur bibendum. Morbi sollicitudin, enim id congue laoreet, elit dui volutpat metus, non egestas ante tortor sit amet ex. Mauris sagittis pulViradisenar finibus. Integer non vehicula lectus, ut. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise88 = () => {
  if (totalViradiseHPToLose == 88)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla arcu odio, vulputate eu tortor ac, convallis convallis ipsum. Proin imperdiet luctus odio id vehicula. Sed congue posuere tristique. Viradisevamus accumsan luctus tellus. Mauris porttitor leo et metus convallis elementum. Suspendisse in urna pharetra, eleifend arcu et, porttitor lectus. Viradisevamus eros tellus, volutpat in est accumsan, bibendum congue est. Phasellus dignissim consequat sem, in rutrum lorem interdum nec. Phasellus facilisis lectus eu eros condimentum, vel luctus justo eleifend. Fusce venenatis ipsum ut ante tincidunt commodo. Suspendisse potenti. Sed volutpat. .')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};

const Viradise90 = () => {
  if (totalViradiseHPToLose == 90)
    return(
<Button mt='15px' mb='15px' height='50px'
onClick={() => {navigator.clipboard.writeText('Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam eu dignissim neque. Quisque a commodo diam. Cras in accumsan nisl. Maecenas Viradisetae scelerisque arcu, at pretium ipsum. Nam tincidunt ullamcorper congue. Donec scelerisque, augue nec hendrerit vehicula, erat dui pellentesque odio, et Viradiseverra dolor felis nec sem. Praesent a lorem vel tellus feugiat ultricies. Etiam lacinia, sapien quis vulputate tincidunt, nisi lacus ornare augue, elementum efficitur elit diam in nibh. Suspendisse ullamcorper mollis purus, at tincidunt odio porta rhoncus. Quisque efficitur nisl nibh, id auctor libero Viradiseverra ac. In hac. ')}}>
Copy {totalViradiseHPToLose} words<br/>(Lorem Ipsum)</Button>  )
};


//hp bug info box//

const HPBug = () => {
  if (DefenseStat > 70)
    return(
    
    <Container align='center'>
<Box mt='12px' width='250px' padding='12px' rounded='10px' style={{backgroundColor: 'rgba(0,0,0,0.36'}}>
<Text fontSize='lg'><b>May 10, 2024 Note: </b></Text> 
<Text fontSize='md'>In most cases, it's not worth going above 70 Defense at this time.</Text>
<Text mt='12px' fontSize='md'>There's a bug with the monster's health resetting to 100 HP, 
but still calculating requirements for reward multipliers based on the bonus health you can't actually write to.</Text>
</Box>
<br></br> 
<Accordion allowMultiple>
  <AccordionItem>
  <h2>
      <AccordionButton>
        <Box as="span" flex='1' textAlign='center' p={3}>
        <Text>Expand for more info on the bug</Text>
        </Box>
        <AccordionIcon />
      </AccordionButton>
    </h2>
    <AccordionPanel pb={4}>
    <Text fontSize='lg'>
      There's a bug impacting endurance battles at 71 Defense or higher.
      <br></br><br></br>
      When a user copy/pastes, the endurance monster's HP will reset to 100 HP 
      every few seconds when the HP auto-loss hits. Thus, it's impossible to 
      write into bonus HP.<br></br><br></br>
      However, reward multipliers are still calculated based on the actual HP. 
      You need to maintain 75% of the monster's health for 90% of the battle to get 
      the 4x reward multiplier. At 106 Defense, the minimum health to get 4x the rewards 
      is 102 HP -- mathematically impossible with this bug.
      <br></br><br></br>
      TL;DR: don't go above 70 Defense if you're copy/pasting, not worth        
</Text>
    </AccordionPanel>
  </AccordionItem>

  </Accordion>
  </Container>
    )
}

const VanstraLowerDef = () => {
  if (DefenseStat <= 59)
	return(
      <Box>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text ><b>{totalVanstraHPToLose} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text ><b>{totalVanstraMins10} mins {totalVanstraSecs10} secs</b></Text>
      <Text fontSize='lg'><i>to keep Vanstra at or above above</i></Text>
      <Text ><b>{totalVanstraDownTo10} HP</b></Text>
      </Box>
  )
}
const Vanstra60Def = () => {
  if (DefenseStat >= 60)
	return(
      <Box>
      <Text mt='5px' fontSize='lg'>At this defense, Vanstra can be fought in a continuous loop 
      without typing. Great for editing, research, or any kind of non-typing work.
      </Text>
      <Text mt='8px' fontSize='lg'>The lowest possible defense stat to achieve this is <b>60 Def</b>. 
      </Text>
      </Box>
  )
}

const VoidWignowLowerDef = () => {
  if (DefenseStat <= 59)
	return(
      <Box>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text ><b>{totalVoidWignowHPToLose} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text ><b>{totalVoidWignowMins10} mins {totalVoidWignowSecs10} secs</b></Text>
      <Text fontSize='lg'><i>to keep Void Wignow at or above</i></Text>
      <Text ><b>{totalVoidWignowDownTo10} HP</b></Text>
      </Box>
  )
}
const VoidWignow60Def = () => {
  if (DefenseStat >= 60)
	return(
      <Box>
      <Text mt='5px' fontSize='lg'>At this defense, Void Wignow can be fought in a continuous loop 
      without typing. Great for editing, research, or any kind of non-typing work.
      </Text>
      <Text mt='8px' fontSize='lg'>The lowest possible defense stat to achieve this is <b>60 Def</b>. 
      </Text>
      </Box>
  )
}


  return (
      <Box textAlign="center" fontSize="xl">
        <Grid minH="100vh">
          <VStack spacing={8}>
          <Heading mt='-50px'>Endurance Monster Planner</Heading>
            <Container><p>This page estimates the minimum input needed to defeat an endurance monster, based on the monster's HP loss rate and your Defense stat. 
                <br></br>
                <br></br>
                Select <b>Minimum to Win</b> to just defeat the monster. Select <b>Minimum for 4x bonus </b> to defeat the monster with 4x reward multipliers.
                <br></br>
                <br></br>
                </p>
                <Accordion allowMultiple>
  <AccordionItem>
  <h2>
      <AccordionButton>
        <Box as="span" flex='1' textAlign='center' p={3}>
        <Text fontSize='2xl'><b>Endurance Monsters Explained</b></Text>
        </Box>
        <AccordionIcon />
      </AccordionButton>
    </h2>
    <AccordionPanel pb={4}>
          <Text><b>The Basics</b></Text>
          <Text fontSize='md' mt='8px'>
          1. Endurance monsters have a health bar measured in HP (health points). Its value is calculated as <code>30 Base HP + Defense Stat</code>
          </Text>
          <Text fontSize='md' mt='8px'>
          2. All endurance monsters function by losing 2 HP every X seconds, specific to the monster.
          </Text>
          <Text fontSize='md' mt='8px'>
          3. If the monster's HP stays above 0 for the entire timer, you win the battle. If the monster's HP stays above 75% of its value, you earn a 4x rewards multiplier.
          </Text>
          <Text fontSize='md' mt='8px'>
          4. 1 word = 1 HP regenerated. Endurance battles also count pasted words.
          </Text>
          <Text fontSize='md' mt='8px'>
          Thus, we can calculate the exact timing to defeat an endurance monster predictably and consistently. 
          </Text>
          <Text mt='25px' mb='8px'><b>All HP Loss Rates</b></Text>
          <TableContainer align='center'>
          <Divider width='240px' mb='3px' align='center' />
  <Table align='center' variant='striped' width='200px' size='sm'>
    <Thead>
      <Tr>
        <Th isNumeric>Secs to<br/>lose 2 HP</Th>
        <Th>Monster</Th>
      </Tr>
    </Thead>
    <Tbody>
      <Tr>
        <Td isNumeric>4</Td>
        <Td>Vanstra</Td>
      </Tr>
      <Tr>
        <Td isNumeric>5</Td>
        <Td>Vanspi</Td>
      </Tr>
      <Tr>
        <Td isNumeric>5</Td>
        <Td>Vi</Td>
      </Tr>
      <Tr>
        <Td isNumeric>5</Td>
        <Td>Viyu</Td>
      </Tr>
      <Tr>
        <Td isNumeric>5</Td>
        <Td>Prof. Bartholemus</Td>
      </Tr>
      <Tr>
        <Td isNumeric>6</Td>
        <Td>Lucereb</Td>
      </Tr>
      <Tr>
        <Td isNumeric>6</Td>
        <Td>Vanvri</Td>
      </Tr>
      <Tr>
        <Td isNumeric>7</Td>
        <Td>Viradise</Td>
      </Tr>
      <Tr>
        <Td isNumeric>7</Td>
        <Td>Viyusa</Td>
      </Tr>
      <Tr>
        <Td isNumeric>8</Td>
        <Td>Void Wignow</Td>
      </Tr>
    </Tbody>
  </Table>
</TableContainer>
<br/>
    </AccordionPanel>
  </AccordionItem>
  <AccordionItem>
  <h2>
      <AccordionButton>
        <Box as="span" flex='1' textAlign='center' p={3}>
        <Text fontSize='2xl'><b>The Math: 4x Multiplier</b></Text>
        </Box>
        <AccordionIcon />
      </AccordionButton>
    </h2>
    <AccordionPanel pb={4}>
          <Text><b>The Equation</b></Text>
          <Text fontSize='md' mt='8px'>
          1. Take 75% of the max health (<code>30 Base HP + Defense Stat</code>)
          </Text>
          <Text fontSize='md' mt='8px'>
          2. Divide by 2 and round the answer up
          </Text>
          <Text fontSize='md' mt='8px'>
          3. Multiply by 2
          </Text>
          <Text fontSize='md' mt='8px'>
          4. Add 2 
          </Text>
          <Text fontSize='md' mt='8px'>
          If you want to make your own tracker, here's the equation for Google Sheets (where "Defense Stat" is the only variable to replace with a cell value)
          </Text>
          <Text fontSize='sm' mt='8px'>
        <code>
        =((ROUNDUP(((30 + Def Stat)*0.75)/2)*2)+2)
        </code>
          </Text>
          <Divider mt='25px' mb='15px' />
          <Text mt='25px'><b>The Explanation</b></Text>
          <Text fontSize='md' mt='8px'>
          To achieve a 4x multiplier, you have to keep the endurance monster's health above 75% of its overall HP.
          </Text>
          <Text fontSize='md' mt='8px'>
          Because endurance monsters function by losing 2 HP every second, it matters what range that 2-HP loss hits on.
          </Text>
          <Text fontSize='md' mt='8px'>
          For example, let's say the monster has 100 HP. Simple math argues we need to stay at or above 75 HP.
          </Text>
          <Text fontSize='md' mt='8px'>
          If the auto-loss hits on a 75-76 HP range, it counts as at least 75% HP. If it's 74-75 HP, it counts as <i>just</i> under 75% HP.
          </Text>
          <Text fontSize='md' mt='8px'>
          Thus, aiming for exactly 75% HP causes a somewhat random outcome between 3x and 4x multipliers. This planner accounts for that by rounding up any non-even HP to the next even number (Steps 2 & 3), then adding 2 HP as a buffer to guarantee a 4x drop.
          </Text>
    </AccordionPanel>
  </AccordionItem>
  <AccordionItem>
  <h2>
      <AccordionButton>
        <Box as="span" flex='1' textAlign='center' p={3}>
        <Text fontSize='2xl'><b>Current Endurance Bugs</b></Text>
        </Box>
        <AccordionIcon />
      </AccordionButton>
    </h2>
    <AccordionPanel pb={4}>
          <Text fontSize='md'>
          - Toggling the loop button, copying a monster, or adding/deleting a monster from the battle list all reset the health to max, but also resets the score multiplier to 1x. Toggling autostart has no effect on the endurance battle.
          </Text>
          <Text fontSize='md' mt='8px'>
          - Refreshing the page resets the health to max, but also resets the score multiplier to 1x
          </Text>
          <Text fontSize='md' mt='8px'>
          - Having multiple tabs open can cause a random loss, usually because of the battle hitting 0 HP in another tab
          </Text>
          <Text fontSize='md' mt='8px'>
          - The HP bar doesn't allow input above 100 HP if the user has copy/pasted during that day, but still calculates multiplier requirements from the overall HP. With high enough defense, it's impossible to get multipliers because 75% of the overall HP is above 100. While this bug is active, 70 Defense is the maximum effective defense stat.
          </Text>
    </AccordionPanel>
  </AccordionItem>
  <AccordionItem>
  <h2>
      <AccordionButton>
        <Box as="span" flex='1' textAlign='center' p={3}>
        <Text fontSize='2xl'><b>Guided Countdown Instructions</b></Text>
        </Box>
        <AccordionIcon />
      </AccordionButton>
    </h2>
    <AccordionPanel pb={4}>
	<Text mb='8px' textAlign='left' fontSize='md'>
 1. Put your endurance monster in your battle list </Text>
 <Text mb='8px' textAlign='left' fontSize='md'>
  2. Double-check your copy-paste settings on 4theWords, if necessary</Text>
  <Text mb='8px' textAlign='left' fontSize='md'>
  3. Start the battle on 4theWords</Text>
  <Text mb='8px' textAlign='left' fontSize='md'>
  4. Start the Guided Countdown on this site</Text>
  <Text mb='8px' textAlign='left' fontSize='md'>
  5. Paste the word count specified when each loop's timer hits zero (no need to paste on the final loop)</Text>
<Text mb='8px' textAlign='left' fontSize='md'>
  6. For getting 4x rewards: <b><i>type</i></b> at least one word when the multiplier shows x4
</Text>
<Text mb='15px' mt='25px'><b>Extra Tips:</b><br></br></Text>
	<Text mb='8px' textAlign='left' fontSize='md'>
  - 1 HP = 1 typed or pasted word. So if you're at 75 HP, you need 25 words to regenerate to 100 HP.</Text>
 <Text mb='8px' textAlign='left' fontSize='md'>
 - If you paste too early, paste again at the end of the loop, regardless of what the HP is. This will bring you back into sync with the timer.
   </Text>
   <Text mb='8px' textAlign='left' fontSize='md'>
  - If you paste too late, just bring your monster's HP back to its max HP (1 HP = 1 word). Then paste at the end 
  of the loop as normal, regardless of what the HP is.
  </Text>
  <Text mb='50px' textAlign='left' fontSize='md'>
  - If your battle refreshed to its starting base HP (known bug), reset the guided countdown while at that starting HP to sync the timer again. 
  </Text>
    </AccordionPanel>
  </AccordionItem>
  </Accordion>
         <br></br>
                <VStack>
<Heading>4theMath:</Heading>
<Spacer></Spacer>
<Container>Your Defense Stat</Container>
<NumberInput default={null} min={0} max={9999} size='md'>
<NumberInputField placeholder='🚨 Required'  onInput={(e) => handleDefenseStatChange(e.target.value)} />
</NumberInput>
<HPBug />

</VStack>
                <br></br>
                <br></br>
    <Container align='center'>
      <Text mb='8px'><b>Select Your Endurance Monster:</b></Text>
    <Wrap justify='center'>
            <WrapItem>
            <Button w='100px' h='150px' pb={5} onClick={handleVanstraClick} style={{ backgroundColor: VanstraActive ? "#1A1521" : "#2D3748" }}>
       <VStack> 
       <Image
        mt='12px'
        align='center' 
        boxSize='5rem'
        borderRadius='full'
        src='https://static.wikia.nocookie.net/4thewords/images/0/0c/Vanstra.png/'
        mr='5px'
      /> <Text fontSize='sm' align='center'>Vanstra<br></br>3 minutes</Text>
      </VStack>
            </Button>
            </WrapItem>
            <WrapItem>
            <Button w='100px' h='150px' pb={5} onClick={handleViClick} style={{ backgroundColor: ViActive ? "#1A1521" : "#2D3748" }}>
       <VStack> 
       <Image
        mt='12px'
        align='center' 
        boxSize='5rem'
        borderRadius='full'
        src='https://static.wikia.nocookie.net/4thewords/images/c/cf/Vi.png'
        mr='5px'
      /> <Text fontSize='sm' align='center'>Vi<br></br>5 minutes</Text>
      </VStack>
            </Button>
            </WrapItem>

            <WrapItem>
            <Button w='100px' h='150px' pb={5} onClick={handleVoidWignowClick} style={{ backgroundColor: VoidWignowActive ? "#1A1521" : "#2D3748" }}>
       <VStack> 
       <Image
        mt='12px'
        align='center' 
        boxSize='5rem'
        borderRadius='full'
        src='https://static.wikia.nocookie.net/4thewords/images/5/56/Void_Wignow.png/'
        mr='5px'
      /> <Text fontSize='sm' align='center'>Void Wignow<br></br>6 minutes</Text>
      </VStack>
            </Button>
            </WrapItem>
            

            <WrapItem>
            <Button w='100px' h='150px' pb={5} onClick={handleLucerebClick} style={{ backgroundColor: LucerebActive ? "#1A1521" : "#2D3748" }}>
       <VStack> 
       <Image
        mt='12px'
        align='center' 
        boxSize='5rem'
        borderRadius='full'
        src='https://static.wikia.nocookie.net/4thewords/images/0/00/Lucereb.png'
        mr='5px'
      /> <Text fontSize='sm' align='center'>Lucereb<br></br>10 minutes</Text>
      </VStack>
            </Button>
            </WrapItem>

            <WrapItem>
            <Button w='100px' h='150px' pb={5} onClick={handleProfBartClick} style={{ backgroundColor: ProfBartActive ? "#1A1521" : "#2D3748" }}>
       <VStack> 
       <Image
        mt='12px'
        align='center' 
        boxSize='5rem'
        borderRadius='full'
        src='https://static.wikia.nocookie.net/4thewords/images/d/d4/Professor_Bartholemus.png/'
        mr='5px'
      /> <Text fontSize='sm' align='center'>Prof.<br></br>Bartholemus<br></br> 10 minutes</Text>
      </VStack>
            </Button>
            </WrapItem>
            <WrapItem>
            <Button w='100px' h='150px' pb={5} onClick={handleVanspiClick} style={{ backgroundColor: VanspiActive ? "#1A1521" : "#2D3748" }}>
       <VStack> 
       <Image
        mt='12px'
        align='center' 
        boxSize='5rem'
        borderRadius='full'
        src='https://static.wikia.nocookie.net/4thewords/images/b/ba/Vanspi.png'
        mr='5px'
      /> <Text fontSize='sm' align='center'>Vanspi<br></br> 10 minutes</Text>
      </VStack>
            </Button>
            </WrapItem>
            <WrapItem>
            <Button w='100px' h='150px' pb={5} onClick={handleViyuClick} style={{ backgroundColor: ViyuActive ? "#1A1521" : "#2D3748" }}>
       <VStack> 
       <Image
        mt='12px'
        align='center' 
        boxSize='5rem'
        borderRadius='full'
        src='https://static.wikia.nocookie.net/4thewords/images/1/14/Viyu.png/'
        mr='5px'
      /> <Text fontSize='sm' align='center'>Viyu<br></br> 15 minutes</Text>
      </VStack>
            </Button>
            </WrapItem>

            <WrapItem>
            <Button w='100px' h='150px' pb={5} onClick={handleVanvriClick} style={{ backgroundColor: VanvriActive ? "#1A1521" : "#2D3748" }}>
       <VStack> 
       <Image
        mt='12px'
        align='center' 
        boxSize='5rem'
        borderRadius='full'
        src='https://static.wikia.nocookie.net/4thewords/images/4/46/Vanvri.png/'
        mr='5px'
      /> <Text fontSize='sm' align='center'>Vanvri<br></br> 20 minutes</Text>
      </VStack>
            </Button>
            </WrapItem>
          <WrapItem>
            <Button w='100px' h='150px' pb={5} onClick={handleViyusaClick} style={{ backgroundColor: ViyusaActive ? "#1A1521" : "#2D3748" }}>
       <VStack> 
       <Image
        mt='12px'
        align='center' 
        boxSize='5rem'
        borderRadius='full'
        src='https://static.wikia.nocookie.net/4thewords/images/6/65/Viyusa.png/'
        mr='5px'
      /> <Text fontSize='sm' align='center'>Viyusa<br></br> 25 minutes</Text>
      </VStack>
            </Button>
            </WrapItem>
            <WrapItem>
            <Button w='100px' h='150px' pb={5} onClick={handleViradiseClick} style={{ backgroundColor: ViradiseActive ? "#1A1521" : "#2D3748" }}>
       <VStack> 
       <Image
        mt='12px'
        align='center' 
        boxSize='5rem'
        borderRadius='full'
        src='https://static.wikia.nocookie.net/4thewords/images/e/e5/Viradise.png/'
        mr='5px'
      /> <Text fontSize='sm' align='center'>Viradise<br></br> 30 minutes</Text>
      </VStack>
            </Button>
            </WrapItem>
          </Wrap>
          </Container>
                <br></br>
                </Container>
                <Box rounded='lg'  w='290px' h='725px' pb={5} >                
  
      <Tabs isFitted variant='enclosed'>
  <TabList mb='1em'>
    <Tab onClick={handleTab1Click}  _selected={{ color: '#B794F4', bg: '#1a1521' }}>Minimum to Win</Tab>
    <Tab onClick={handleTab2Click} _selected={{ color: '#B794F4', bg: '#1a1521' }}>Minimum for 4x Bonus</Tab>
  </TabList>

{!VanstraIsShown && !ViIsShown && !VoidWignowIsShown && !LucerebIsShown && !ProfBartIsShown &&
!VanspiIsShown && !ViyuIsShown && !VanvriIsShown && !ViyusaIsShown && !ViradiseIsShown &&
<TabPanels height='400px' mt='-20px' style={{backgroundColor: '#1a1521'}}>
<TabPanel>
  <VStack>
<Image
     mt='25px'
   	 justify='center'
   	 boxSize='7.5rem'
   	 src='https://static.wikia.nocookie.net/4thewords/images/3/32/TellMeMore.png'
      />
      <br></br>
  <Text>Select a monster to show its info</Text>
  </VStack>
</TabPanel>
<TabPanel>
<VStack>
<Image
     mt='25px'
   	 justify='center'
   	 boxSize='7.5rem'
   	 src='https://static.wikia.nocookie.net/4thewords/images/3/32/TellMeMore.png'
      />
      <br></br>
  <Text>Select a monster to show its info</Text>
  </VStack>
</TabPanel>
</TabPanels>
}

  {VanstraIsShown &&
  <TabPanels mt='-20px' style={{backgroundColor: '#1a1521'}}>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Vanstra</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>3 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>4 secs</b></span>
            </Text> 
         	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
   	 src='https://static.wikia.nocookie.net/4thewords/images/0/0c/Vanstra.png/'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <VanstraLowerDef />
      <Vanstra60Def />
      </VStack>    
    </TabPanel>
    <TabPanel>
  	<VStack>
    	<Heading size='lg' mt='15px' ><b>Vanstra</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>3 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>4 secs</b></span>
            </Text>     	<br></br>

    	<Image
    	align='center'
    	boxSize='7.5rem'
    	borderRadius='full'
   	 src='https://static.wikia.nocookie.net/4thewords/images/0/0c/Vanstra.png/'
  	/>
  	<br></br>
  	<Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
    <Divider align='center' width='200px'></Divider>
  	<Text fontSize='lg'><i>paste or write</i></Text>
  	<Text mt='-8px'><b>{totalVanstraBackTo100} words</b></Text>
  	<Text fontSize='lg'><i>approx. every</i></Text>
  	<Text mt='-8px'><b>{totalVanstraMins75} mins {totalVanstraSecsAdj75} secs</b></Text>
  	<Text fontSize='lg'><i>to keep Vanstra at or above</i></Text>
  	<Text mt='-8px'><b>{totalVanstra75} HP</b></Text>
  	</VStack>	 
	</TabPanel>
  </TabPanels>
}

      {ViIsShown &&
  <TabPanels mt='-20px' style={{backgroundColor: '#1a1521'}}>
	<TabPanel>
  	<VStack>
    	<Heading size='lg' mt='15px' ><b>Vi</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>5 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>5 secs</b></span>
            </Text>     	
            <br></br>

    	<Image
    	align='center'
    	boxSize='7.5rem'
    	borderRadius='full'
    	src='https://static.wikia.nocookie.net/4thewords/images/c/cf/Vi.png'
  	/>
  	<br></br>      
    <div>
  	<Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <Divider align='center' width='200px'></Divider>
  	<Text fontSize='lg'><i>paste or write</i></Text>
  	<Text mt='-8px'><b>{totalViHPToLose} words</b></Text>
    <Text fontSize='lg'><i>approx. every</i></Text>
  	<Text mt='-8px'><b>{totalViMins10} mins {totalViSecs10} secs</b></Text>
  	<Text fontSize='lg'><i>to keep Vi at or above</i></Text>
  	<Text mt='-8px'><b>{totalViDownTo10} HP</b></Text>
    </div>


  	</VStack>	 
	</TabPanel>
	<TabPanel>
  	<VStack>
    	<Heading size='lg' mt='15px' ><b>Vi</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>5 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>5 secs</b></span>
            </Text>
          	<br></br>

    	<Image
    	align='center'
    	boxSize='7.5rem'
    	borderRadius='full'
    	src='https://static.wikia.nocookie.net/4thewords/images/c/cf/Vi.png'
  	/>
  	<br></br>
    <div>
  	<Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <Divider align='center' width='200px'></Divider>
  	<Text fontSize='lg'><i>paste or write</i></Text>
  	<Text mt='-8px'><b>{totalViBackTo100} words</b></Text>
    <Text fontSize='lg'><i>approx. every</i></Text>
  	<Text mt='-8px'><b>{totalViMins75} mins {totalViSecsAdj75} secs</b></Text>
  	<Text fontSize='lg'><i>to keep Vi at or above</i></Text>
  	<Text mt='-8px'><b>{totalVi75} HP</b></Text>
    </div>
  	</VStack>	 
	</TabPanel>
  </TabPanels>
}


      {VoidWignowIsShown && 
  <TabPanels mt='-20px' style={{backgroundColor: '#1a1521'}}>
    <TabPanel>
      <VStack>
        <Heading size='lg' mt='15px' ><b>Void Wignow</b></Heading>
        <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>6 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>8 secs</b></span>
            </Text>
            <br></br>
        <Image
        align='center' 
        boxSize='7.5rem'
        borderRadius='full'
        src='https://static.wikia.nocookie.net/4thewords/images/5/56/Void_Wignow.png/'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <VoidWignowLowerDef />
      <VoidWignow60Def />
      </VStack>       
    </TabPanel>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Void Wignow</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>6 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>8 secs</b></span>
            </Text>
         	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
      src='https://static.wikia.nocookie.net/4thewords/images/5/56/Void_Wignow.png/'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalVoidWignowBackTo100} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalVoidWignowMins75} mins {totalVoidWignowSecsAdj75} secs</b></Text>
      <Text fontSize='lg'><i>to keep Void Wignow at or above</i></Text>
      <Text mt='-8px'><b>{totalVoidWignow75} HP</b></Text>
      </VStack>    
    </TabPanel>
  </TabPanels>
}

{LucerebIsShown &&
  <TabPanels mt='-20px' style={{backgroundColor: '#1a1521'}}>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Lucereb</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>10 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>6 secs</b></span>
            </Text>
         	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
   	 src='https://static.wikia.nocookie.net/4thewords/images/0/00/Lucereb.png'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalLucerebHPToLose} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalLucerebMins10} mins {totalLucerebSecs10} secs</b></Text>
      <Text fontSize='lg'><i>to keep Lucereb at or above</i></Text>
      <Text mt='-8px'><b>{totalLucerebDownTo10} HP</b></Text>
      </VStack>    
    </TabPanel>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Lucereb</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>10 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>6 secs</b></span>
            </Text>
         	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
   	 src='https://static.wikia.nocookie.net/4thewords/images/0/00/Lucereb.png'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalLucerebBackTo100} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalLucerebMins75} mins {totalLucerebSecsAdj75} secs</b></Text>
      <Text fontSize='lg'><i>to keep Lucereb at or above</i></Text>
      <Text mt='-8px'><b>{totalLucereb75} HP</b></Text>
      </VStack>    
    </TabPanel>
  </TabPanels>
}

{ProfBartIsShown &&
  <TabPanels mt='-20px' style={{backgroundColor: '#1a1521'}}>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Professor Bartholemus</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>10 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>5 secs</b></span>
            </Text>
         	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
   	 src='https://static.wikia.nocookie.net/4thewords/images/d/d4/Professor_Bartholemus.png/'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalProfBartHPToLose} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalProfBartMins10} mins {totalProfBartSecs10} secs</b></Text>
      <Text fontSize='lg'><i>to keep Prof. Bartholemus at or above</i></Text>
      <Text mt='-8px'><b>{totalProfBartDownTo10} HP</b></Text>

      </VStack>    
    </TabPanel>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Professor Bartholemus</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>10 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>5 secs</b></span>
            </Text>
   	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
   	 src='https://static.wikia.nocookie.net/4thewords/images/d/d4/Professor_Bartholemus.png/'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalProfBartBackTo100} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalProfBartMins75} mins {totalProfBartSecsAdj75} secs</b></Text>
      <Text fontSize='lg'><i>to keep Prof. Bartholemus at or above</i></Text>
      <Text mt='-8px'><b>{totalProfBart75} HP</b></Text>
      </VStack>    
    </TabPanel>
  </TabPanels>
}
  {VanspiIsShown &&
  <TabPanels mt='-20px' style={{backgroundColor: '#1a1521'}}>
    <TabPanel>
      <VStack>
      <Heading size='lg' mt='15px' ><b>Vanspi</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>10 mins</b></span>
            </Text>
     <Text mt='-8px' style={{color:'#B794F4'}}><b>{totalMaxHP} HP</b></Text>
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>5 secs</b></span>
            </Text>   	 
   	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
   	 src='https://static.wikia.nocookie.net/4thewords/images/b/ba/Vanspi.png'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalVanspiHPToLose} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalVanspiMins10} mins {totalVanspiSecs10} secs</b></Text>
      <Text fontSize='lg'><i>to keep Vanspi at or above</i></Text>
      <Text mt='-8px'><b>{totalVanspiDownTo10} HP</b></Text>

      </VStack>    
    </TabPanel>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Vanspi</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>10 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>5 secs</b></span>
            </Text>   	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
   	 src='https://static.wikia.nocookie.net/4thewords/images/b/ba/Vanspi.png'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalVanspiBackTo100} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalVanspiMins75} mins {totalVanspiSecsAdj75} secs</b></Text>
      <Text fontSize='lg'><i>to keep Vanspi at or above</i></Text>
      <Text mt='-8px'><b>{totalVanspi75} HP</b></Text>

      </VStack>    
    </TabPanel>
  </TabPanels>
}
{ViyuIsShown &&
  <TabPanels mt='-20px' style={{backgroundColor: '#1a1521'}}>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Viyu</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>15 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>5 secs</b></span>
            </Text>
         	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
  	  src='https://static.wikia.nocookie.net/4thewords/images/1/14/Viyu.png/'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalViyuHPToLose} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalViyuMins10} mins {totalViyuSecs10} secs</b></Text>
      <Text fontSize='lg'><i>to keep Viyu at or above</i></Text>
      <Text mt='-8px'><b>{totalViyuDownTo10} HP</b></Text>

      </VStack>    
    </TabPanel>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Viyu</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>15 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>5 secs</b></span>
            </Text>
               	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
   	 src='https://static.wikia.nocookie.net/4thewords/images/1/14/Viyu.png/'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalViyuBackTo100} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalViyuMins75} mins {totalViyuSecsAdj75} secs</b></Text>
      <Text fontSize='lg'><i>to keep Viyu at or above</i></Text>
      <Text mt='-8px'><b>{totalViyu75} HP</b></Text>

      </VStack>    
    </TabPanel>
  </TabPanels>
}


  {VanvriIsShown &&
  <TabPanels mt='-20px' style={{backgroundColor: '#1a1521'}}>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Vanvri</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>20 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>6 secs</b></span>
            </Text> 

   	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
  	  src='https://static.wikia.nocookie.net/4thewords/images/4/46/Vanvri.png/'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalVanvriHPToLose} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalVanvriMins10} mins {totalVanvriSecs10} secs</b></Text>
      <Text fontSize='lg'><i>to keep Vanvri at or above</i></Text>
      <Text mt='-8px'><b>{totalVanvriDownTo10} HP</b></Text>

      </VStack>    
    </TabPanel>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Vanvri</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>20 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>6 secs</b></span>
            </Text> 
     	 <br></br>
   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
   	 src='https://static.wikia.nocookie.net/4thewords/images/4/46/Vanvri.png/'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalVanvriBackTo100} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalVanvriMins75} mins {totalVanvriSecsAdj75} secs</b></Text>
      <Text fontSize='lg'><i>to keep Vanvri at or above</i></Text>
      <Text mt='-8px'><b>{totalVanvri75} HP</b></Text>

      </VStack>    
    </TabPanel>
  </TabPanels>
}

  {ViyusaIsShown &&
  <TabPanels mt='-20px' style={{backgroundColor: '#1a1521'}}>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Viyusa</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>25 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>7 secs</b></span>
            </Text> 
         	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
  	  src='https://static.wikia.nocookie.net/4thewords/images/6/65/Viyusa.png/'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalViyusaHPToLose} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalViyusaMins10} mins {totalViyusaSecs10} secs</b></Text>
      <Text fontSize='lg'><i>to keep Viyusa at or above</i></Text>
      <Text mt='-8px'><b>{totalViyusaDownTo10} HP</b></Text>

      </VStack>    
    </TabPanel>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Viyusa</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>25 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>7 secs</b></span>
            </Text> 
         	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
   	 src='https://static.wikia.nocookie.net/4thewords/images/6/65/Viyusa.png/'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalViyusaBackTo100} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalViyusaMins75} mins {totalViyusaSecsAdj75} secs</b></Text>
      <Text fontSize='lg'><i>to keep Viyusa at or above</i></Text>
      <Text mt='-8px'><b>{totalViyusa75} HP</b></Text>
      </VStack>    
    </TabPanel>
  </TabPanels>}

  {ViradiseIsShown &&
  <TabPanels mt='-20px' style={{backgroundColor: '#1a1521'}}>
    <TabPanel> 
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Viradise</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>30 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>7 secs</b></span>
            </Text> 
         	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
  	  src='https://static.wikia.nocookie.net/4thewords/images/e/e5/Viradise.png/'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalViradiseHPToLose} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalViradiseMins10} mins {totalViradiseSecs10} secs</b></Text>
      <Text fontSize='lg'><i>to keep Viradise at or above</i></Text>
      <Text mt='-8px'><b>{totalViradiseDownTo10} HP</b></Text>
      </VStack>    
    </TabPanel>
    <TabPanel>
      <VStack>
   	 <Heading size='lg' mt='15px' ><b>Viradise</b></Heading>
      <Text mt='-8px' mb='3px'>
          <span style={{color: '#B794F4'}}><b>{totalMaxHP} HP</b></span><span> | </span>
            <span style={{color: '#B794F4'}}><b>30 mins</b></span>
            </Text> 
     <Text mt='-8px' mb='3px' fontSize='md'>
          <span>loses </span>
          <span style={{color: '#B794F4'}}><b>2 HP</b></span><span> every </span>
            <span style={{color: '#B794F4'}}><b>7 secs</b></span>
            </Text> 
         	 <br></br>

   	 <Image
   	 align='center'
   	 boxSize='7.5rem'
   	 borderRadius='full'
   	 src='https://static.wikia.nocookie.net/4thewords/images/e/e5/Viradise.png/'
      />
      <br></br>
      <Text fontSize='lg'>calculated at {DefenseStat} Defense</Text><br></br>
      <div>
      <Divider align='center' width='200px'></Divider>
      </div>
      <Text fontSize='lg'><i>paste or write</i></Text>
      <Text mt='-8px'><b>{totalViradiseBackTo100} words</b></Text>
      <Text fontSize='lg'><i>approx. every</i></Text>
      <Text mt='-8px'><b>{totalViradiseMins75} mins {totalViradiseSecsAdj75} secs</b></Text>
      <Text fontSize='lg'><i>to keep Viradise at or above</i></Text>
      <Text mt='-8px'><b>{totalViradise75} HP</b></Text>
      </VStack>    
    </TabPanel>
  </TabPanels>
}
</Tabs>

{(VanstraIsShown || ViIsShown || LucerebIsShown || ProfBartIsShown || ViyuIsShown || 
ViyusaIsShown || VanspiIsShown ||  VanvriIsShown || ViradiseIsShown) && (DefenseStat === 0) &&

<Container align='center' mt='12px' width='275px' padding='12px' rounded='10px' style={{backgroundColor: 'rgba(0,0,0,0.36'}}>
<Text fontSize='md'>psst - your defense stat is currently 0 </Text>
<Text mt='12px' fontSize='md'>please input a defense stat to use the guided countdown</Text>
</Container>
}

{(VanstraIsShown || ViIsShown || LucerebIsShown || ProfBartIsShown || ViyuIsShown || 
ViyusaIsShown || VanspiIsShown ||  VanvriIsShown || ViradiseIsShown) && !Tab2IsShown && (DefenseStat>0) &&

<Container mt='15px'>

<Button mt='25px' mb='15px' onClick={handleGuidedCountdownMinClick}
style={{ backgroundColor: GuidedCountdownMinActive ? "#1A1521" : "#B794F4",
color: GuidedCountdownMinActive ? "#B794F4" : "#1A1521",
}}>

  {GuidedCountdownMinActive ? 'Stop Guided Countdown' : 'Start Guided Countdown'}</Button>

<br></br>


{!GuidedCountdownMinIsShown && 
  <Container height='575px' width='258px' mt='20px' style={{backgroundColor: '#00000080'}}>
<Text pt='25px'>
Don't forget to check your copy/paste settings on 4theWords <br/>
💜💜💜<br/><br/></Text>
<Text><b>Quick Tips:</b></Text>
<Text fontSize='md' mt='8px'>1 HP = 1 word</Text>
<Text fontSize='md' mt='8px'>If your battle's HP stops matching the timer: stay above the minimum HP,
   then paste to full health at the end of the loop</Text>

<Text mt='15px' fontSize='md'>
Scroll down for detailed instructions and tips for use
</Text>
</Container>
}

{GuidedCountdownMinIsShown && VanstraIsShown &&
    <Container height='180px' align='center' style={{backgroundColor: '#000000'
    }} >
            <Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span>
          <span style={{color: '#B794F4'}}><b>{totalVanstraHPToLose} words</b></span><br/><span> every </span>
            <span style={{color: '#B794F4'}}><b>{totalVanstraMins10}m {totalVanstraSecs10}s</b></span>
          <br/>
          <span> to stay at or above </span>
            <span style={{color: '#B794F4'}}><b>{totalVanstraDownTo10} HP</b></span>
            </Text> 
            <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
            <Vanstra26 /><Vanstra28 /><Vanstra30 /><Vanstra32 /><Vanstra34 /><Vanstra36 /><Vanstra38 /><Vanstra40 /><Vanstra42 /><Vanstra44 />
            <Vanstra46 /><Vanstra48 /><Vanstra50 /><Vanstra52 /><Vanstra54 /><Vanstra56 /><Vanstra58 /><Vanstra60 /><Vanstra62 /><Vanstra64 />
            <Vanstra66 /><Vanstra68 /><Vanstra70 /><Vanstra72 /><Vanstra74 /><Vanstra76 /><Vanstra78 /><Vanstra80 /><Vanstra82 /><Vanstra84 />
            <Vanstra86 /><Vanstra88 /><Vanstra90 />
            </HStack>
          </Container>}
  {GuidedCountdownMinIsShown && VanstraIsShown &&
    <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
  <VanstraTimerMin />
  <VanstraTimerMin2 />
  <VanstraTimerMin3 />
  </Container>
  }

{GuidedCountdownMinIsShown && ViIsShown &&
    <Container height='180px' align='center' style={{backgroundColor: '#000000'
    }} >
            <Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span>
          <span style={{color: '#B794F4'}}><b>{totalViHPToLose} words</b></span><br/><span> every </span>
            <span style={{color: '#B794F4'}}><b>{totalViMins10}m {totalViSecs10}s</b></span>
          <br/>
          <span> to stay at or above </span>
            <span style={{color: '#B794F4'}}><b>{totalViDownTo10} HP</b></span>
            </Text> 
            <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
            <Vi26 /><Vi28 /><Vi30 /><Vi32 /><Vi34 /><Vi36 /><Vi38 /><Vi40 /><Vi42 /><Vi44 />
            <Vi46 /><Vi48 /><Vi50 /><Vi52 /><Vi54 /><Vi56 /><Vi58 /><Vi60 /><Vi62 /><Vi64 />
            <Vi66 /><Vi68 /><Vi70 /><Vi72 /><Vi74 /><Vi76 /><Vi78 /><Vi80 /><Vi82 /><Vi84 />
            <Vi86 /><Vi88 /><Vi90 />
            </HStack>
          </Container>}
  {GuidedCountdownMinIsShown && ViIsShown &&
    <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
  <ViTimerMin />
  <ViTimerMin2 />
  <ViTimerMin3 />
  <ViTimerMin4 />
  </Container>
  }


{GuidedCountdownMinIsShown && LucerebIsShown &&
    <Container height='180px' align='center' style={{backgroundColor: '#000000'
    }} >
            <Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span>
          <span style={{color: '#B794F4'}}><b>{totalLucerebHPToLose} words</b></span><br/><span> every </span>
            <span style={{color: '#B794F4'}}><b>{totalLucerebMins10}m {totalLucerebSecs10}s</b></span>
          <br/>
          <span> to stay at or above </span>
            <span style={{color: '#B794F4'}}><b>{totalLucerebDownTo10} HP</b></span>
            </Text>  
            <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
            <Lucereb26 /><Lucereb28 /><Lucereb30 /><Lucereb32 /><Lucereb34 /><Lucereb36 /><Lucereb38 /><Lucereb40 /><Lucereb42 /><Lucereb44 />
            <Lucereb46 /><Lucereb48 /><Lucereb50 /><Lucereb52 /><Lucereb54 /><Lucereb56 /><Lucereb58 /><Lucereb60 /><Lucereb62 /><Lucereb64 />
            <Lucereb66 /><Lucereb68 /><Lucereb70 /><Lucereb72 /><Lucereb74 /><Lucereb76 /><Lucereb78 /><Lucereb80 /><Lucereb82 /><Lucereb84 />
            <Lucereb86 /><Lucereb88 /><Lucereb90 />
            </HStack>
          </Container>}

  {GuidedCountdownMinIsShown && LucerebIsShown &&
    <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
  <LucerebTimerMin />
  <LucerebTimerMin2 />
  <LucerebTimerMin3 />
  <LucerebTimerMin4 />
  <LucerebTimerMin5 />
  <LucerebTimerMin6 />
  <LucerebTimerMin7 />
  </Container>
  }

{GuidedCountdownMinIsShown && ViyuIsShown &&
    <Container height='180px' align='center' style={{backgroundColor: '#000000'
    }} >
            <Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span>
          <span style={{color: '#B794F4'}}><b>{totalViyuHPToLose} words</b></span><br/><span> every </span>
            <span style={{color: '#B794F4'}}><b>{totalViyuMins10}m {totalViyuSecs10}s</b></span>
          <br/>
          <span> to stay at or above </span>
            <span style={{color: '#B794F4'}}><b>{totalViyuDownTo10} HP</b></span>
            </Text>  
            <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
            <Viyu26 /><Viyu28 /><Viyu30 /><Viyu32 /><Viyu34 /><Viyu36 /><Viyu38 /><Viyu40 /><Viyu42 /><Viyu44 />
            <Viyu46 /><Viyu48 /><Viyu50 /><Viyu52 /><Viyu54 /><Viyu56 /><Viyu58 /><Viyu60 /><Viyu62 /><Viyu64 />
            <Viyu66 /><Viyu68 /><Viyu70 /><Viyu72 /><Viyu74 /><Viyu76 /><Viyu78 /><Viyu80 /><Viyu82 /><Viyu84 />
            <Viyu86 /><Viyu88 /><Viyu90 />
            </HStack>
          </Container>}
  {GuidedCountdownMinIsShown && ViyuIsShown &&
    <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
  <ViyuTimerMin />
  <ViyuTimerMin2 />
  <ViyuTimerMin3 />
  <ViyuTimerMin4 />
  <ViyuTimerMin5 />
  <ViyuTimerMin6 />
  <ViyuTimerMin7 />
  <ViyuTimerMin8 />
  <ViyuTimerMin9 />
  <ViyuTimerMin10 />
  <ViyuTimerMin11 />
  <ViyuTimerMin12 />
  <ViyuTimerMin13 />
  </Container>
  }

{GuidedCountdownMinIsShown && VanvriIsShown &&
    <Container height='180px' align='center' style={{backgroundColor: '#000000'
    }} >
            <Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span>
          <span style={{color: '#B794F4'}}><b>{totalVanvriHPToLose} words</b></span><br/><span> every </span>
            <span style={{color: '#B794F4'}}><b>{totalVanvriMins10}m {totalVanvriSecs10}s</b></span>
          <br/>
          <span> to stay at or above </span>
            <span style={{color: '#B794F4'}}><b>{totalVanvriDownTo10} HP</b></span>
            </Text>  
            <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
            <Vanvri26 /><Vanvri28 /><Vanvri30 /><Vanvri32 /><Vanvri34 /><Vanvri36 /><Vanvri38 /><Vanvri40 /><Vanvri42 /><Vanvri44 />
            <Vanvri46 /><Vanvri48 /><Vanvri50 /><Vanvri52 /><Vanvri54 /><Vanvri56 /><Vanvri58 /><Vanvri60 /><Vanvri62 /><Vanvri64 />
            <Vanvri66 /><Vanvri68 /><Vanvri70 /><Vanvri72 /><Vanvri74 /><Vanvri76 /><Vanvri78 /><Vanvri80 /><Vanvri82 /><Vanvri84 />
            <Vanvri86 /><Vanvri88 /><Vanvri90 />
            </HStack>
          </Container>}
  {GuidedCountdownMinIsShown && VanvriIsShown &&
    <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
  <VanvriTimerMin />
  <VanvriTimerMin2 />
  <VanvriTimerMin3 />
  <VanvriTimerMin4 />
  <VanvriTimerMin5 />
  <VanvriTimerMin6 />
  <VanvriTimerMin7 />
  <VanvriTimerMin8 />
  <VanvriTimerMin9 />
  <VanvriTimerMin10 />
  <VanvriTimerMin11 />
  <VanvriTimerMin12 />
  <VanvriTimerMin13 />
  <VanvriTimerMin14 />
  <VanvriTimerMin15 />
  </Container>
  }
  {GuidedCountdownMinIsShown && ViyusaIsShown &&
    <Container height='180px' align='center' style={{backgroundColor: '#000000'
    }} >
            <Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span>
          <span style={{color: '#B794F4'}}><b>{totalViyusaHPToLose} words</b></span><br/><span> every </span>
            <span style={{color: '#B794F4'}}><b>{totalViyusaMins10}m {totalViyusaSecs10}s</b></span>
          <br/>
          <span> to stay at or above </span>
            <span style={{color: '#B794F4'}}><b>{totalViyusaDownTo10} HP</b></span>
            </Text>  
            <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
            <Viyusa26 /><Viyusa28 /><Viyusa30 /><Viyusa32 /><Viyusa34 /><Viyusa36 /><Viyusa38 /><Viyusa40 /><Viyusa42 /><Viyusa44 />
            <Viyusa46 /><Viyusa48 /><Viyusa50 /><Viyusa52 /><Viyusa54 /><Viyusa56 /><Viyusa58 /><Viyusa60 /><Viyusa62 /><Viyusa64 />
            <Viyusa66 /><Viyusa68 /><Viyusa70 /><Viyusa72 /><Viyusa74 /><Viyusa76 /><Viyusa78 /><Viyusa80 /><Viyusa82 /><Viyusa84 />
            <Viyusa86 /><Viyusa88 /><Viyusa90 />
            </HStack>
          </Container>}
  {GuidedCountdownMinIsShown && ViyusaIsShown &&
    <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
  <ViyusaTimerMin />
  <ViyusaTimerMin2 />
  <ViyusaTimerMin3 />
  <ViyusaTimerMin4 />
  <ViyusaTimerMin5 />
  <ViyusaTimerMin6 />
  <ViyusaTimerMin7 />
  <ViyusaTimerMin8 />
  <ViyusaTimerMin9 />
  <ViyusaTimerMin10 />
  <ViyusaTimerMin11 />
  <ViyusaTimerMin12 />
  <ViyusaTimerMin13 />
  <ViyusaTimerMin14 />
  <ViyusaTimerMin15 />
  <ViyusaTimerMin16 />
  </Container>
  }

{GuidedCountdownMinIsShown && ViradiseIsShown &&
    <Container height='180px' align='center' style={{backgroundColor: '#000000'
    }} >
            <Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span>
          <span style={{color: '#B794F4'}}><b>{totalViradiseHPToLose} words</b></span><br/><span> every </span>
            <span style={{color: '#B794F4'}}><b>{totalViradiseMins10}m {totalViradiseSecs10}s</b></span>
          <br/>
          <span> to stay at or above </span>
            <span style={{color: '#B794F4'}}><b>{totalViradiseDownTo10} HP</b></span>
            </Text>  
            <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
            <Viradise26 /><Viradise28 /><Viradise30 /><Viradise32 /><Viradise34 /><Viradise36 /><Viradise38 /><Viradise40 /><Viradise42 /><Viradise44 />
            <Viradise46 /><Viradise48 /><Viradise50 /><Viradise52 /><Viradise54 /><Viradise56 /><Viradise58 /><Viradise60 /><Viradise62 /><Viradise64 />
            <Viradise66 /><Viradise68 /><Viradise70 /><Viradise72 /><Viradise74 /><Viradise76 /><Viradise78 /><Viradise80 /><Viradise82 /><Viradise84 />
            <Viradise86 /><Viradise88 /><Viradise90 />
            </HStack>
          </Container>}
  {GuidedCountdownMinIsShown && ViradiseIsShown &&
    <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
  <ViradiseTimerMin />
  <ViradiseTimerMin2 />
  <ViradiseTimerMin3 />
  <ViradiseTimerMin4 />
  <ViradiseTimerMin5 />
  <ViradiseTimerMin6 />
  <ViradiseTimerMin7 />
  <ViradiseTimerMin8 />
  <ViradiseTimerMin9 />
  <ViradiseTimerMin10 />
  <ViradiseTimerMin11 />
  <ViradiseTimerMin12 />
  <ViradiseTimerMin13 />
  <ViradiseTimerMin14 />
  <ViradiseTimerMin15 />
  <ViradiseTimerMin16 />
  <ViradiseTimerMin17 />
  <ViradiseTimerMin18 />
  <ViradiseTimerMin19 />
  </Container>
  }

{GuidedCountdownMinIsShown && VanspiIsShown &&
    <Container height='180px' align='center' style={{backgroundColor: '#000000'
    }} >
            <Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span>
          <span style={{color: '#B794F4'}}><b>{totalVanspiHPToLose} words</b></span><br/><span> every </span>
            <span style={{color: '#B794F4'}}><b>{totalVanspiMins10}m {totalVanspiSecs10}s</b></span>
          <br/>
          <span> to stay at or above </span>
            <span style={{color: '#B794F4'}}><b>{totalVanspiDownTo10} HP</b></span>
            </Text>  
            <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
            <VanspiProfB26 /><VanspiProfB28 /><VanspiProfB30 /><VanspiProfB32 /><VanspiProfB34 /><VanspiProfB36 /><VanspiProfB38 /><VanspiProfB40 /><VanspiProfB42 /><VanspiProfB44 />
            <VanspiProfB46 /><VanspiProfB48 /><VanspiProfB50 /><VanspiProfB52 /><VanspiProfB54 /><VanspiProfB56 /><VanspiProfB58 /><VanspiProfB60 /><VanspiProfB62 /><VanspiProfB64 />
            <VanspiProfB66 /><VanspiProfB68 /><VanspiProfB70 /><VanspiProfB72 /><VanspiProfB74 /><VanspiProfB76 /><VanspiProfB78 /><VanspiProfB80 /><VanspiProfB82 /><VanspiProfB84 />
            <VanspiProfB86 /><VanspiProfB88 /><VanspiProfB90 />
            </HStack>
          </Container>}
  {GuidedCountdownMinIsShown && VanspiIsShown &&
    <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
  <VanspiProfBTimerMin />
  <VanspiProfBTimerMin2 />
  <VanspiProfBTimerMin3 />
  <VanspiProfBTimerMin4 />
  <VanspiProfBTimerMin5 />
  <VanspiProfBTimerMin6 />
  <VanspiProfBTimerMin7 />
  <VanspiProfBTimerMin8 />
  <VanspiProfBTimerMin9 />
  </Container>
  }

{GuidedCountdownMinIsShown && ProfBartIsShown &&
    <Container height='180px' align='center' style={{backgroundColor: '#000000'
    }} >
            <Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span>
          <span style={{color: '#B794F4'}}><b>{totalVanspiHPToLose} words</b></span><br/><span> every </span>
            <span style={{color: '#B794F4'}}><b>{totalVanspiMins10}m {totalVanspiSecs10}s</b></span>
          <br/>
          <span> to stay at or above </span>
            <span style={{color: '#B794F4'}}><b>{totalProfBartDownTo10} HP</b></span>
            </Text>  
            <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
            <VanspiProfB26 /><VanspiProfB28 /><VanspiProfB30 /><VanspiProfB32 /><VanspiProfB34 /><VanspiProfB36 /><VanspiProfB38 /><VanspiProfB40 /><VanspiProfB42 /><VanspiProfB44 />
            <VanspiProfB46 /><VanspiProfB48 /><VanspiProfB50 /><VanspiProfB52 /><VanspiProfB54 /><VanspiProfB56 /><VanspiProfB58 /><VanspiProfB60 /><VanspiProfB62 /><VanspiProfB64 />
            <VanspiProfB66 /><VanspiProfB68 /><VanspiProfB70 /><VanspiProfB72 /><VanspiProfB74 /><VanspiProfB76 /><VanspiProfB78 /><VanspiProfB80 /><VanspiProfB82 /><VanspiProfB84 />
            <VanspiProfB86 /><VanspiProfB88 /><VanspiProfB90 />
            </HStack>
          </Container>}
  {GuidedCountdownMinIsShown && ProfBartIsShown &&
    <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
  <VanspiProfBTimerMin />
  <VanspiProfBTimerMin2 />
  <VanspiProfBTimerMin3 />
  <VanspiProfBTimerMin4 />
  <VanspiProfBTimerMin5 />
  <VanspiProfBTimerMin6 />
  <VanspiProfBTimerMin7 />
  <VanspiProfBTimerMin8 />
  <VanspiProfBTimerMin9 />
  </Container>
  }

<Box height='100px'></Box>

</Container>
}

{VoidWignowIsShown && !Tab2IsShown && (DefenseStat<=59) &&

<Container mt='15px'>
<Button mt='25px' mb='15px' onClick={handleGuidedCountdownMinClick}
style={{ backgroundColor: GuidedCountdownMinActive ? "#1A1521" : "#B794F4",
color: GuidedCountdownMinActive ? "#B794F4" : "#1A1521",
}}>
  {GuidedCountdownMinActive ? 'Stop Guided Countdown' : 'Start Guided Countdown'}</Button>
<br></br>



{!GuidedCountdownMinIsShown && 
  <Container height='575px' width='258px' mt='20px' style={{backgroundColor: '#00000080'}}>
<Text pt='25px'>
Don't forget to check your copy/paste settings on 4theWords <br/>
💜💜💜<br/><br/></Text>
<Text><b>Quick Tips:</b></Text>
<Text fontSize='md' mt='8px'>1 HP = 1 word</Text>
<Text fontSize='md' mt='8px'>If your battle's HP stops matching the timer: stay above the minimum HP,
   then paste to full health at the end of the loop</Text>
<Text mt='15px' fontSize='md'>
Scroll down for detailed instructions and tips for use
</Text>

</Container>
}

{GuidedCountdownMinIsShown && VoidWignowIsShown &&
    <Container height='180px' align='center' style={{backgroundColor: '#000000'
    }} >
            <Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span>
          <span style={{color: '#B794F4'}}><b>{totalVoidWignowHPToLose} words</b></span><br/><span> every </span>
            <span style={{color: '#B794F4'}}><b>{totalVoidWignowMins10}m {totalVoidWignowSecs10}s</b></span>
          <br/>
          <span> to stay at or above </span>
            <span style={{color: '#B794F4'}}><b>{totalVoidWignowDownTo10} HP</b></span>
            </Text>
            <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>  
            <VoidWignow26 /><VoidWignow28 /><VoidWignow30 /><VoidWignow32 /><VoidWignow34 /><VoidWignow36 /><VoidWignow38 /><VoidWignow40 /><VoidWignow42 /><VoidWignow44 />
            <VoidWignow46 /><VoidWignow48 /><VoidWignow50 /><VoidWignow52 /><VoidWignow54 /><VoidWignow56 /><VoidWignow58 /><VoidWignow60 /><VoidWignow62 /><VoidWignow64 />
            <VoidWignow66 /><VoidWignow68 /><VoidWignow70 /><VoidWignow72 /><VoidWignow74 /><VoidWignow76 /><VoidWignow78 /><VoidWignow80 /><VoidWignow82 /><VoidWignow84 />
            <VoidWignow86 /><VoidWignow88 /><VoidWignow90 />
            </HStack>
          </Container>}
  {GuidedCountdownMinIsShown && VoidWignowIsShown &&
    <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
  <VoidWignowTimerMin />
  <VoidWignowTimerMin2 />
  <VoidWignowTimerMin3 />
  </Container>
  }

<Box height='100px'></Box>

</Container>
}



{(VanstraIsShown || ViIsShown || VoidWignowIsShown || LucerebIsShown || ProfBartIsShown || ViyuIsShown || 
ViyusaIsShown || VanspiIsShown ||  VanvriIsShown || ViradiseIsShown) && Tab2IsShown && (DefenseStat>=99) &&

<Text pt='25px' mb='100px'>
Due to a bug that disallows typing above 100 HP, it's impossible to get a 4x multiplier at this defense.
</Text>
}

{(VanstraIsShown || ViIsShown || VoidWignowIsShown || LucerebIsShown || ProfBartIsShown || ViyuIsShown || 
ViyusaIsShown || VanspiIsShown ||  VanvriIsShown || ViradiseIsShown) && Tab2IsShown && (DefenseStat<=99) && (DefenseStat>0) &&

<Container align='center' mt='15px'>

<Button mt='25px' mb='15px' onClick={handleGuidedCountdownClick}
style={{ backgroundColor: GuidedCountdownActive ? "#1A1521" : "#B794F4",
color: GuidedCountdownActive ? "#B794F4" : "#1A1521",
}}>
  {GuidedCountdownActive ? 'Stop Guided Countdown' : 'Start Guided Countdown'}</Button>
<br></br>

{!GuidedCountdownIsShown && 
  <Container height='575px' width='258px' mt='20px' style={{backgroundColor: '#00000080'}}>
<Text pt='25px'>
Don't forget to check your copy/paste settings on 4theWords <br/>
💜💜💜<br/><br/></Text>
<Text><b>Quick Tips:</b></Text>
<Text fontSize='md' mt='8px'>1 HP = 1 word</Text>
<Text fontSize='md' mt='8px'>If your battle's HP stops matching the timer: stay above the minimum HP,
   then paste to full health at the end of the loop</Text>
<Text mt='15px' fontSize='md'>
Scroll down for detailed instructions and tips for use
</Text>
</Container>
}


{GuidedCountdownIsShown && VanstraIsShown &&
  <Container height='180px' align='center' style={{backgroundColor: '#000000'
  }} >
      	<Text pt='15px' mt='20px' mb='3px' fontSize='md'>
        <span>Paste </span>
        <span style={{color: '#B794F4'}}><b>{totalVanstraBackTo100} words</b></span><br/><span> every </span>
      	<span style={{color: '#B794F4'}}><b>{totalVanstraMins75}m {totalVanstraSecsAdj75}s</b></span>
        <br/>
        <span> to stay at or above </span>
      	<span style={{color: '#B794F4'}}><b>{totalVanstra75} HP</b></span>
      	</Text>
        <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
<Vanstra4 />
<Vanstra5 />
<Vanstra6 />
<Vanstra7 />
<Vanstra8 />
<Vanstra9 />
<Vanstra10 />
<Vanstra11 />
<Vanstra12 />
<Vanstra13 />
<Vanstra14 />
<Vanstra15 />
<Vanstra16 />
<Vanstra17 />
<Vanstra18 />
<Vanstra19 />
<Vanstra20 />
<Vanstra21 />
<Vanstra22 />
</HStack>
        </Container>}
{GuidedCountdownIsShown && VanstraIsShown &&
  <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
<VanstraTimer4 />
<VanstraTimer5 />
<VanstraTimer6 />
<VanstraTimer7 />
<VanstraTimer8 />
<VanstraTimer9 />
<VanstraTimer10 />
<VanstraTimer11 />
<VanstraTimer12 />
<VanstraTimer13 />
<VanstraTimer14 />
<VanstraTimer15 />
<VanstraTimer16 />
<VanstraTimer17 />
<VanstraTimer18 />
<VanstraTimer19 />
<VanstraTimer20 />
<VanstraTimer21 />
<VanstraTimer22 />
</Container>
}
{GuidedCountdownIsShown && VanstraIsShown &&
  <DelayComponentVanstraLoop4x mt='-20px' style={{position: 'absolute',}} />

}

{GuidedCountdownIsShown && ViIsShown &&
  <Container height='180px' align='center' style={{backgroundColor: '#000000'
  }} >
      	<Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span><span style={{color: '#B794F4'}}><b>{totalViBackTo100} words</b></span><br/><span> every </span>
      	<span style={{color: '#B794F4'}}><b>{totalViMins75}m {totalViSecsAdj75}s</b></span><br/><span> to stay at or above </span>
      	<span style={{color: '#B794F4'}}><b>{totalVi75} HP</b></span>

      	</Text>
        <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
<Vi4 />
<Vi5 />
<Vi6 />
<Vi7 />
<Vi8 />
<Vi9 />
<Vi10 />
<Vi11 />
<Vi12 />
<Vi13 />
<Vi14 />
<Vi15 />
<Vi16 />
<Vi17 />
<Vi18 />
<Vi19 />
<Vi20 />
<Vi21 />
<Vi22 />
</HStack>
</Container>}

{GuidedCountdownIsShown && ViIsShown &&
  <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
<ViTimer4 />
<ViTimer5 />
<ViTimer6 />
<ViTimer7 />
<ViTimer8 />
<ViTimer9 />
<ViTimer10 />
<ViTimer11 />
<ViTimer12 />
<ViTimer13 />
<ViTimer14 />
<ViTimer15 />
<ViTimer16 />
<ViTimer17 />
<ViTimer18 />
<ViTimer19 />
<ViTimer20 />
<ViTimer21 />
<ViTimer22 />
<ViTimer23 />
<ViTimer24 />
<ViTimer25 />
<ViTimer26 />
<ViTimer27 />
<ViTimer28 />
<ViTimer29 />
<ViTimer30 />
</Container>
}
{GuidedCountdownIsShown && ViIsShown &&
  <DelayComponentViLoop4x mt='-20px' style={{position: 'absolute',}} />
}

{GuidedCountdownIsShown && VoidWignowIsShown &&
  <Container height='180px' align='center' style={{backgroundColor: '#000000'
  }} >
      	<Text pt='15px' mt='20px' mb='3px' fontSize='md'>
            <span>Paste </span><span style={{color: '#B794F4'}}><b>{totalVoidWignowBackTo100} words</b></span><br/><span> every </span>
          <span style={{color: '#B794F4'}}><b>{totalVoidWignowMins75}m {totalVoidWignowSecsAdj75}s</b></span><br/><span> to stay at or above </span>
          <span style={{color: '#B794F4'}}><b>{totalVoidWignow75} HP</b></span>

          </Text>
          <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
<VoidWignow4 />
<VoidWignow5 />
<VoidWignow6 />
<VoidWignow7 />
<VoidWignow8 />
<VoidWignow9 />
<VoidWignow10 />
<VoidWignow11 />
<VoidWignow12 />
<VoidWignow13 />
<VoidWignow14 />
<VoidWignow15 />
<VoidWignow16 />
<VoidWignow17 />
<VoidWignow18 />
<VoidWignow19 />
<VoidWignow20 />
<VoidWignow21 />
<VoidWignow22 />
</HStack>
</Container>}

{GuidedCountdownIsShown && VoidWignowIsShown &&
  <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
<VoidWignowTimer4 />
<VoidWignowTimer5 />
<VoidWignowTimer6 />
<VoidWignowTimer7 />
<VoidWignowTimer8 />
<VoidWignowTimer9 />
<VoidWignowTimer10 />
<VoidWignowTimer11 />
<VoidWignowTimer12 />
<VoidWignowTimer13 />
<VoidWignowTimer14 />
<VoidWignowTimer15 />
<VoidWignowTimer16 />
<VoidWignowTimer17 />
<VoidWignowTimer18 />
<VoidWignowTimer19 />
<VoidWignowTimer20 />
<VoidWignowTimer21 />
<VoidWignowTimer22 />
</Container>
}
{GuidedCountdownIsShown && VoidWignowIsShown &&
  <DelayComponent55Loop4x mt='-20px' style={{position: 'absolute',}} />

}
{GuidedCountdownIsShown && ProfBartIsShown &&
  <Container height='180px' align='center' style={{backgroundColor: '#000000'
  }} >
      	<Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span><span style={{color: '#B794F4'}}><b>{totalVanspiBackTo100} words</b></span><br/><span> every </span>
      	<span style={{color: '#B794F4'}}><b>{totalVanspiMins75}m {totalVanspiSecsAdj75}s</b></span><br/><span> to stay at or above </span>
      	<span style={{color: '#B794F4'}}><b>{totalVanspi75} HP</b></span>

      	</Text>


        <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
<VanspiProfB4 />
<VanspiProfB5 />
<VanspiProfB6 />
<VanspiProfB7 />
<VanspiProfB8 />
<VanspiProfB9 />
<VanspiProfB10 />
<VanspiProfB11 />
<VanspiProfB12 />
<VanspiProfB13 />
<VanspiProfB14 />
<VanspiProfB15 />
<VanspiProfB16 />
<VanspiProfB17 />
<VanspiProfB18 />
<VanspiProfB19 />
<VanspiProfB20 />
<VanspiProfB21 />
<VanspiProfB22 />
</HStack>
</Container>}

{GuidedCountdownIsShown && ProfBartIsShown &&
  <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
<VanspiProfBTimer4 />
<VanspiProfBTimer5 />
<VanspiProfBTimer6 />
<VanspiProfBTimer7 />
<VanspiProfBTimer8 />
<VanspiProfBTimer9 />
<VanspiProfBTimer10 />
<VanspiProfBTimer11 />
<VanspiProfBTimer12 />
<VanspiProfBTimer13 />
<VanspiProfBTimer14 />
<VanspiProfBTimer15 />
<VanspiProfBTimer16 />
<VanspiProfBTimer17 />
<VanspiProfBTimer18 />
<VanspiProfBTimer19 />
<VanspiProfBTimer20 />
<VanspiProfBTimer21 />
<VanspiProfBTimer22 />
<VanspiProfBTimer23 />
<VanspiProfBTimer24 />
<VanspiProfBTimer25 />
<VanspiProfBTimer26 />
<VanspiProfBTimer27 />
<VanspiProfBTimer28 />
<VanspiProfBTimer29 />
<VanspiProfBTimer30 />
<VanspiProfBTimer31 />
<VanspiProfBTimer32 />
<VanspiProfBTimer33 />
<VanspiProfBTimer34 />
<VanspiProfBTimer35 />
<VanspiProfBTimer36 />
<VanspiProfBTimer37 />
<VanspiProfBTimer38 />
<VanspiProfBTimer39 />
<VanspiProfBTimer40 />
<VanspiProfBTimer41 />
<VanspiProfBTimer42 />
<VanspiProfBTimer43 />
<VanspiProfBTimer44 />
<VanspiProfBTimer45 />
<VanspiProfBTimer46 />
<VanspiProfBTimer47 />
<VanspiProfBTimer48 />
<VanspiProfBTimer49 />
<VanspiProfBTimer50 />
<VanspiProfBTimer51 />
<VanspiProfBTimer52 />
<VanspiProfBTimer53 />
<VanspiProfBTimer54 />
<VanspiProfBTimer55 />
<VanspiProfBTimer56 />
<VanspiProfBTimer57 />
<VanspiProfBTimer58 />
<VanspiProfBTimer59 />
<VanspiProfBTimer60 />
</Container>
}
{GuidedCountdownIsShown && ProfBartIsShown &&
  <DelayComponentVanspiProfBLoop4x mt='-20px' style={{position: 'absolute',}} />
}



{GuidedCountdownIsShown && VanspiIsShown &&
  <Container height='180px' align='center' style={{backgroundColor: '#000000'
  }} >
      	<Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span><span style={{color: '#B794F4'}}><b>{totalVanspiBackTo100} words</b></span><br/><span> every </span>
      	<span style={{color: '#B794F4'}}><b>{totalVanspiMins75}m {totalVanspiSecsAdj75}s</b></span><br/><span> to stay at or above </span>
      	<span style={{color: '#B794F4'}}><b>{totalVanspi75} HP</b></span>

      	</Text>


        <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
<VanspiProfB4 />
<VanspiProfB5 />
<VanspiProfB6 />
<VanspiProfB7 />
<VanspiProfB8 />
<VanspiProfB9 />
<VanspiProfB10 />
<VanspiProfB11 />
<VanspiProfB12 />
<VanspiProfB13 />
<VanspiProfB14 />
<VanspiProfB15 />
<VanspiProfB16 />
<VanspiProfB17 />
<VanspiProfB18 />
<VanspiProfB19 />
<VanspiProfB20 />
<VanspiProfB21 />
<VanspiProfB22 />
</HStack>
</Container>}

{GuidedCountdownIsShown && VanspiIsShown &&
  <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
<VanspiProfBTimer4 />
<VanspiProfBTimer5 />
<VanspiProfBTimer6 />
<VanspiProfBTimer7 />
<VanspiProfBTimer8 />
<VanspiProfBTimer9 />
<VanspiProfBTimer10 />
<VanspiProfBTimer11 />
<VanspiProfBTimer12 />
<VanspiProfBTimer13 />
<VanspiProfBTimer14 />
<VanspiProfBTimer15 />
<VanspiProfBTimer16 />
<VanspiProfBTimer17 />
<VanspiProfBTimer18 />
<VanspiProfBTimer19 />
<VanspiProfBTimer20 />
<VanspiProfBTimer21 />
<VanspiProfBTimer22 />
<VanspiProfBTimer23 />
<VanspiProfBTimer24 />
<VanspiProfBTimer25 />
<VanspiProfBTimer26 />
<VanspiProfBTimer27 />
<VanspiProfBTimer28 />
<VanspiProfBTimer29 />
<VanspiProfBTimer30 />
<VanspiProfBTimer31 />
<VanspiProfBTimer32 />
<VanspiProfBTimer33 />
<VanspiProfBTimer34 />
<VanspiProfBTimer35 />
<VanspiProfBTimer36 />
<VanspiProfBTimer37 />
<VanspiProfBTimer38 />
<VanspiProfBTimer39 />
<VanspiProfBTimer40 />
<VanspiProfBTimer41 />
<VanspiProfBTimer42 />
<VanspiProfBTimer43 />
<VanspiProfBTimer44 />
<VanspiProfBTimer45 />
<VanspiProfBTimer46 />
<VanspiProfBTimer47 />
<VanspiProfBTimer48 />
<VanspiProfBTimer49 />
<VanspiProfBTimer50 />
<VanspiProfBTimer51 />
<VanspiProfBTimer52 />
<VanspiProfBTimer53 />
<VanspiProfBTimer54 />
<VanspiProfBTimer55 />
<VanspiProfBTimer56 />
<VanspiProfBTimer57 />
<VanspiProfBTimer58 />
<VanspiProfBTimer59 />
<VanspiProfBTimer60 />
</Container>
}
{GuidedCountdownIsShown && VanspiIsShown &&
  <DelayComponentVanspiProfBLoop4x mt='-20px' style={{position: 'absolute',}} />
}

{GuidedCountdownIsShown && ViyuIsShown &&
  <Container height='180px' align='center' style={{backgroundColor: '#000000'
  }} >
      	<Text pt='15px' mt='20px' mb='3px' fontSize='md'>
        <span>Paste </span><span style={{color: '#B794F4'}}><b>{totalViyuBackTo100} words</b></span><br/><span> every </span>
      	<span style={{color: '#B794F4'}}><b>{totalViyuMins75}m {totalViyuSecsAdj75}s</b></span><br/><span> to stay at or above </span>
      	<span style={{color: '#B794F4'}}><b>{totalViyu75} HP</b></span>
      	</Text>
<HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
<Viyu4 />
<Viyu5 />
<Viyu6 />
<Viyu7 />
<Viyu8 />
<Viyu9 />
<Viyu10 />
<Viyu11 />
<Viyu12 />
<Viyu13 />
<Viyu14 />
<Viyu15 />
<Viyu16 />
<Viyu17 />
<Viyu18 />
<Viyu19 />
<Viyu20 />
<Viyu21 />
<Viyu22 />
</HStack>

</Container>}

{GuidedCountdownIsShown && ViyuIsShown &&
  <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
<ViyuTimer4 />
<ViyuTimer5 />
<ViyuTimer6 />
<ViyuTimer7 />
<ViyuTimer8 />
<ViyuTimer9 />
<ViyuTimer10 />
<ViyuTimer11 />
<ViyuTimer12 />
<ViyuTimer13 />
<ViyuTimer14 />
<ViyuTimer15 />
<ViyuTimer16 />
<ViyuTimer17 />
<ViyuTimer18 />
<ViyuTimer19 />
<ViyuTimer20 />
<ViyuTimer21 />
<ViyuTimer22 />
<ViyuTimer23 />
<ViyuTimer24 />
<ViyuTimer25 />
<ViyuTimer26 />
<ViyuTimer27 />
<ViyuTimer28 />
<ViyuTimer29 />
<ViyuTimer30 />
<ViyuTimer31 />
<ViyuTimer32 />
<ViyuTimer33 />
<ViyuTimer34 />
<ViyuTimer35 />
<ViyuTimer36 />
<ViyuTimer37 />
<ViyuTimer38 />
<ViyuTimer39 />
<ViyuTimer40 />
<ViyuTimer41 />
<ViyuTimer42 />
<ViyuTimer43 />
<ViyuTimer44 />
<ViyuTimer45 />
<ViyuTimer46 />
<ViyuTimer47 />
<ViyuTimer48 />
<ViyuTimer49 />
<ViyuTimer50 />
<ViyuTimer51 />
<ViyuTimer52 />
<ViyuTimer53 />
<ViyuTimer54 />
<ViyuTimer55 />
<ViyuTimer56 />
<ViyuTimer57 />
<ViyuTimer58 />
<ViyuTimer59 />
<ViyuTimer60 />
<ViyuTimer61 />
<ViyuTimer62 />
<ViyuTimer63 />
<ViyuTimer64 />
<ViyuTimer65 />
<ViyuTimer66 />
<ViyuTimer67 />
<ViyuTimer68 />
<ViyuTimer69 />
<ViyuTimer70 />
<ViyuTimer71 />
<ViyuTimer72 />
<ViyuTimer73 />
<ViyuTimer74 />
<ViyuTimer75 />
<ViyuTimer76 />
<ViyuTimer77 />
<ViyuTimer78 />
<ViyuTimer79 />
<ViyuTimer70 />
<ViyuTimer80 />
<ViyuTimer81 />
<ViyuTimer82 />
<ViyuTimer83 />
<ViyuTimer84 />
<ViyuTimer85 />
<ViyuTimer86 />
<ViyuTimer87 />
<ViyuTimer88 />
<ViyuTimer89 />
<ViyuTimer90 />
</Container>
}
{GuidedCountdownIsShown && ViyuIsShown &&
  <DelayComponentViyuLoop4x mt='-20px' style={{position: 'absolute',}} />
}

{GuidedCountdownIsShown && VanvriIsShown &&
  <Container height='180px' align='center' style={{backgroundColor: '#000000'
  }} >
      	<Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span><span style={{color: '#B794F4'}}><b>{totalVanvriBackTo100} words</b></span><br/><span> every </span>
      	<span style={{color: '#B794F4'}}><b>{totalVanvriMins75}m {totalVanvriSecsAdj75}s</b></span><br/><span> to stay at or above </span>
      	<span style={{color: '#B794F4'}}><b>{totalVanvri75} HP</b></span>
      	</Text>

        <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
  <Vanvri4 />
<Vanvri5 />
<Vanvri6 />
<Vanvri7 />
<Vanvri8 />
<Vanvri9 />
<Vanvri10 />
<Vanvri11 />
<Vanvri12 />
<Vanvri13 />
<Vanvri14 />
<Vanvri15 />
<Vanvri16 />
<Vanvri17 />
<Vanvri18 />
<Vanvri19 />
<Vanvri20 />
<Vanvri21 />
<Vanvri22 />
</HStack>
</Container>}

{GuidedCountdownIsShown && VanvriIsShown &&
  <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>
<VanvriTimer4 />
<VanvriTimer5 />
<VanvriTimer6 />
<VanvriTimer7 />
<VanvriTimer8 />
<VanvriTimer9 />
<VanvriTimer10 />
<VanvriTimer11 />
<VanvriTimer12 />
<VanvriTimer13 />
<VanvriTimer14 />
<VanvriTimer15 />
<VanvriTimer16 />
<VanvriTimer17 />
<VanvriTimer18 />
<VanvriTimer19 />
<VanvriTimer20 />
<VanvriTimer21 />
<VanvriTimer22 />
<VanvriTimer23 />
<VanvriTimer24 />
<VanvriTimer25 />
<VanvriTimer26 />
<VanvriTimer27 />
<VanvriTimer28 />
<VanvriTimer29 />
<VanvriTimer30 />
<VanvriTimer31 />
<VanvriTimer32 />
<VanvriTimer33 />
<VanvriTimer34 />
<VanvriTimer35 />
<VanvriTimer36 />
<VanvriTimer37 />
<VanvriTimer38 />
<VanvriTimer39 />
<VanvriTimer40 />
<VanvriTimer41 />
<VanvriTimer42 />
<VanvriTimer43 />
<VanvriTimer44 />
<VanvriTimer45 />
<VanvriTimer46 />
<VanvriTimer47 />
<VanvriTimer48 />
<VanvriTimer49 />
<VanvriTimer50 />
<VanvriTimer51 />
<VanvriTimer52 />
<VanvriTimer53 />
<VanvriTimer54 />
<VanvriTimer55 />
<VanvriTimer56 />
<VanvriTimer57 />
<VanvriTimer58 />
<VanvriTimer59 />
<VanvriTimer60 />
<VanvriTimer61 />
<VanvriTimer62 />
<VanvriTimer63 />
<VanvriTimer64 />
<VanvriTimer65 />
<VanvriTimer66 />
<VanvriTimer67 />
<VanvriTimer68 />
<VanvriTimer69 />
<VanvriTimer70 />
<VanvriTimer71 />
<VanvriTimer72 />
<VanvriTimer73 />
<VanvriTimer74 />
<VanvriTimer75 />
<VanvriTimer76 />
<VanvriTimer77 />
<VanvriTimer78 />
<VanvriTimer79 />
<VanvriTimer70 />
<VanvriTimer80 />
<VanvriTimer81 />
<VanvriTimer82 />
<VanvriTimer83 />
<VanvriTimer84 />
<VanvriTimer85 />
<VanvriTimer86 />
<VanvriTimer87 />
<VanvriTimer88 />
<VanvriTimer89 />
<VanvriTimer90 />
<VanvriTimer91 />
<VanvriTimer92 />
<VanvriTimer93 />
<VanvriTimer94 />
<VanvriTimer95 />
<VanvriTimer96 />
<VanvriTimer97 />
<VanvriTimer98 />
<VanvriTimer99 />
<VanvriTimer100 />
</Container>
}
{GuidedCountdownIsShown && VanvriIsShown &&
  <DelayComponentVanvriLoop4x mt='-20px' style={{position: 'absolute',}} />
}


{GuidedCountdownIsShown && LucerebIsShown &&
  <Container height='180px' align='center' style={{backgroundColor: '#000000'
}} >
      <Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span><span style={{color: '#B794F4'}}><b>{totalLucerebBackTo100} words</b></span><br/><span> every </span>
      	<span style={{color: '#B794F4'}}><b>{totalLucerebMins75}m {totalLucerebSecsAdj75}s</b></span><br/><span> to stay at or above </span>
      	<span style={{color: '#B794F4'}}><b>{totalLucereb75} HP</b></span>
      	</Text>
        <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
<Lucereb4 />
<Lucereb5 />
<Lucereb6 />
<Lucereb7 />
<Lucereb8 />
<Lucereb9 />
<Lucereb10 />
<Lucereb11 />
<Lucereb12 />
<Lucereb13 />
<Lucereb14 />
<Lucereb15 />
<Lucereb16 />
<Lucereb17 />
<Lucereb18 />
<Lucereb19 />
<Lucereb20 />
<Lucereb21 />
<Lucereb22 />
</HStack>
    </Container>
    }

{GuidedCountdownIsShown && LucerebIsShown &&
  <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>

<LucerebTimer4 />
<LucerebTimer5 />
<LucerebTimer6 />
<LucerebTimer7 />
<LucerebTimer8 />
<LucerebTimer9 />
<LucerebTimer10 />
<LucerebTimer11 />
<LucerebTimer12 />
<LucerebTimer13 />
<LucerebTimer14 />
<LucerebTimer15 />
<LucerebTimer16 />
<LucerebTimer17 />
<LucerebTimer18 />
<LucerebTimer19 />
<LucerebTimer20 />
<LucerebTimer21 />
<LucerebTimer22 />
<LucerebTimer23 />
<LucerebTimer24 />
<LucerebTimer25 />
<LucerebTimer26 />
<LucerebTimer27 />
<LucerebTimer28 />
<LucerebTimer29 />
<LucerebTimer30 />
<LucerebTimer31 />
<LucerebTimer32 />
<LucerebTimer33 />
<LucerebTimer34 />
<LucerebTimer35 />
<LucerebTimer36 />
<LucerebTimer37 />
<LucerebTimer38 />
<LucerebTimer39 />
<LucerebTimer40 />
<LucerebTimer41 />
<LucerebTimer42 />
<LucerebTimer43 />
<LucerebTimer44 />
<LucerebTimer45 />
<LucerebTimer46 />
<LucerebTimer47 />
<LucerebTimer48 />
<LucerebTimer49 />
<LucerebTimer50 />
</Container>
}
{GuidedCountdownIsShown && LucerebIsShown &&
  <DelayComponentLucerebLoop4x mt='-20px' style={{position: 'absolute',}} />
}


{GuidedCountdownIsShown && ViyusaIsShown &&
  <Container height='180px' align='center' style={{backgroundColor: '#000000'
  }} >
      	<Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span><span style={{color: '#B794F4'}}><b>{totalViyusaBackTo100} words</b></span><br/><span> every </span>
      	<span style={{color: '#B794F4'}}><b>{totalViyusaMins75}m {totalViyusaSecsAdj75}s</b></span><br/><span> to stay at or above </span>
      	<span style={{color: '#B794F4'}}><b>{totalViyusa75} HP</b></span>
      	</Text>
        <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
        <Viyusa4 />
<Viyusa5 />
<Viyusa6 />
<Viyusa7 />
<Viyusa8 />
<Viyusa9 />
<Viyusa10 />
<Viyusa11 />
<Viyusa12 />
<Viyusa13 />
<Viyusa14 />
<Viyusa15 />
<Viyusa16 />
<Viyusa17 />
<Viyusa18 />
<Viyusa19 />
<Viyusa20 />
<Viyusa21 />
<Viyusa22 />
</HStack>
    </Container>}

    {GuidedCountdownIsShown && ViyusaIsShown &&
  <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>



<ViyusaTimer4 />
<ViyusaTimer5 />
<ViyusaTimer6 />
<ViyusaTimer7 />
<ViyusaTimer8 />
<ViyusaTimer9 />
<ViyusaTimer10 />
<ViyusaTimer11 />
<ViyusaTimer12 />
<ViyusaTimer13 />
<ViyusaTimer14 />
<ViyusaTimer15 />
<ViyusaTimer16 />
<ViyusaTimer17 />
<ViyusaTimer18 />
<ViyusaTimer19 />
<ViyusaTimer20 />
<ViyusaTimer21 />
<ViyusaTimer22 />
<ViyusaTimer23 />
<ViyusaTimer24 />
<ViyusaTimer25 />
<ViyusaTimer26 />
<ViyusaTimer27 />
<ViyusaTimer28 />
<ViyusaTimer29 />
<ViyusaTimer30 />
<ViyusaTimer31 />
<ViyusaTimer32 />
<ViyusaTimer33 />
<ViyusaTimer34 />
<ViyusaTimer35 />
<ViyusaTimer36 />
<ViyusaTimer37 />
<ViyusaTimer38 />
<ViyusaTimer39 />
<ViyusaTimer40 />
<ViyusaTimer41 />
<ViyusaTimer42 />
<ViyusaTimer43 />
<ViyusaTimer44 />
<ViyusaTimer45 />
<ViyusaTimer46 />
<ViyusaTimer47 />
<ViyusaTimer48 />
<ViyusaTimer49 />
<ViyusaTimer50 />
<ViyusaTimer51 />
<ViyusaTimer52 />
<ViyusaTimer53 />
<ViyusaTimer54 />
<ViyusaTimer55 />
<ViyusaTimer56 />
<ViyusaTimer57 />
<ViyusaTimer58 />
<ViyusaTimer59 />
<ViyusaTimer60 />
<ViyusaTimer61 />
<ViyusaTimer62 />
<ViyusaTimer63 />
<ViyusaTimer64 />
<ViyusaTimer65 />
<ViyusaTimer66 />
<ViyusaTimer67 />
<ViyusaTimer68 />
<ViyusaTimer69 />
<ViyusaTimer70 />
<ViyusaTimer71 />
<ViyusaTimer72 />
<ViyusaTimer73 />
<ViyusaTimer74 />
<ViyusaTimer75 />
<ViyusaTimer76 />
<ViyusaTimer77 />
<ViyusaTimer78 />
<ViyusaTimer79 />
<ViyusaTimer70 />
<ViyusaTimer80 />
<ViyusaTimer81 />
<ViyusaTimer82 />
<ViyusaTimer83 />
<ViyusaTimer84 />
<ViyusaTimer85 />
<ViyusaTimer86 />
<ViyusaTimer87 />
<ViyusaTimer88 />
<ViyusaTimer89 />
<ViyusaTimer90 />
<ViyusaTimer91 />
<ViyusaTimer92 />
<ViyusaTimer93 />
<ViyusaTimer94 />
<ViyusaTimer95 />
<ViyusaTimer96 />
<ViyusaTimer97 />
<ViyusaTimer98 />
<ViyusaTimer99 />
<ViyusaTimer100 />
<ViyusaTimer101 />
<ViyusaTimer102 />
<ViyusaTimer103 />
<ViyusaTimer104 />
<ViyusaTimer105 />
<ViyusaTimer106 />
<ViyusaTimer107 />
</Container>
}
{GuidedCountdownIsShown && ViyusaIsShown &&
  <DelayComponentViyusaLoop4x mt='-20px' style={{position: 'absolute',}} />
}

{GuidedCountdownIsShown && ViradiseIsShown &&
  <Container height='180px' align='center' style={{backgroundColor: '#000000'
  }} >
      	<Text pt='15px' mt='20px' mb='3px' fontSize='md'>
          <span>Paste </span><span style={{color: '#B794F4'}}><b>{totalViradiseBackTo100} words</b></span><br/><span> every </span>
      	<span style={{color: '#B794F4'}}><b>{totalViradiseMins75}m {totalViradiseSecsAdj75}s</b></span><br/><span> to stay at or above </span>
      	<span style={{color: '#B794F4'}}><b>{totalViradise75} HP</b></span>
      	</Text>
        <HStack>
  <Button mt='15px' mb='15px' height='50px' onClick={setGuidedCountdownActive}>Reset<br/>Battle</Button>
        <Viradise4 />
<Viradise5 />
<Viradise6 />
<Viradise7 />
<Viradise8 />
<Viradise9 />
<Viradise10 />
<Viradise11 />
<Viradise12 />
<Viradise13 />
<Viradise14 />
<Viradise15 />
<Viradise16 />
<Viradise17 />
<Viradise18 />
<Viradise19 />
<Viradise20 />
<Viradise21 />
<Viradise22 />
</HStack>
</Container>}

{GuidedCountdownIsShown && ViradiseIsShown &&
  <Container mt='-10px' pb='50px' overflowY='scroll' height='475px' style={{backgroundColor: '#00000080'}}>

<ViradiseTimer4 />
<ViradiseTimer5 />
<ViradiseTimer6 />
<ViradiseTimer7 />
<ViradiseTimer8 />
<ViradiseTimer9 />
<ViradiseTimer10 />
<ViradiseTimer11 />
<ViradiseTimer12 />
<ViradiseTimer13 />
<ViradiseTimer14 />
<ViradiseTimer15 />
<ViradiseTimer16 />
<ViradiseTimer17 />
<ViradiseTimer18 />
<ViradiseTimer19 />
<ViradiseTimer20 />
<ViradiseTimer21 />
<ViradiseTimer22 />
<ViradiseTimer23 />
<ViradiseTimer24 />
<ViradiseTimer25 />
<ViradiseTimer26 />
<ViradiseTimer27 />
<ViradiseTimer28 />
<ViradiseTimer29 />
<ViradiseTimer30 />
<ViradiseTimer31 />
<ViradiseTimer32 />
<ViradiseTimer33 />
<ViradiseTimer34 />
<ViradiseTimer35 />
<ViradiseTimer36 />
<ViradiseTimer37 />
<ViradiseTimer38 />
<ViradiseTimer39 />
<ViradiseTimer40 />
<ViradiseTimer41 />
<ViradiseTimer42 />
<ViradiseTimer43 />
<ViradiseTimer44 />
<ViradiseTimer45 />
<ViradiseTimer46 />
<ViradiseTimer47 />
<ViradiseTimer48 />
<ViradiseTimer49 />
<ViradiseTimer50 />
<ViradiseTimer51 />
<ViradiseTimer52 />
<ViradiseTimer53 />
<ViradiseTimer54 />
<ViradiseTimer55 />
<ViradiseTimer56 />
<ViradiseTimer57 />
<ViradiseTimer58 />
<ViradiseTimer59 />
<ViradiseTimer60 />
<ViradiseTimer61 />
<ViradiseTimer62 />
<ViradiseTimer63 />
<ViradiseTimer64 />
<ViradiseTimer65 />
<ViradiseTimer66 />
<ViradiseTimer67 />
<ViradiseTimer68 />
<ViradiseTimer69 />
<ViradiseTimer70 />
<ViradiseTimer71 />
<ViradiseTimer72 />
<ViradiseTimer73 />
<ViradiseTimer74 />
<ViradiseTimer75 />
<ViradiseTimer76 />
<ViradiseTimer77 />
<ViradiseTimer78 />
<ViradiseTimer79 />
<ViradiseTimer70 />
<ViradiseTimer80 />
<ViradiseTimer81 />
<ViradiseTimer82 />
<ViradiseTimer83 />
<ViradiseTimer84 />
<ViradiseTimer85 />
<ViradiseTimer86 />
<ViradiseTimer87 />
<ViradiseTimer88 />
<ViradiseTimer89 />
<ViradiseTimer90 />
<ViradiseTimer91 />
<ViradiseTimer92 />
<ViradiseTimer93 />
<ViradiseTimer94 />
<ViradiseTimer95 />
<ViradiseTimer96 />
<ViradiseTimer97 />
<ViradiseTimer98 />
<ViradiseTimer99 />
<ViradiseTimer100 />
<ViradiseTimer101 />
<ViradiseTimer102 />
<ViradiseTimer103 />
<ViradiseTimer104 />
<ViradiseTimer105 />
<ViradiseTimer106 />
<ViradiseTimer107 />
<ViradiseTimer108 />
<ViradiseTimer109 />
<ViradiseTimer110 />
<ViradiseTimer111 />
<ViradiseTimer112 />
<ViradiseTimer113 />
<ViradiseTimer114 />
<ViradiseTimer115 />
<ViradiseTimer116 />
<ViradiseTimer117 />
<ViradiseTimer118 />
<ViradiseTimer119 />
<ViradiseTimer120 />
<ViradiseTimer121 />
<ViradiseTimer122 />
<ViradiseTimer123 />
<ViradiseTimer124 />
<ViradiseTimer125 />
<ViradiseTimer126 />
<ViradiseTimer127 />
<ViradiseTimer128 />
</Container>
}
{GuidedCountdownIsShown && ViradiseIsShown &&
  <DelayComponentViradiseLoop4x mt='-20px' style={{position: 'absolute',}} />
}

<Box height='100px'></Box>
</Container>}


      </Box>
          </VStack>
<Box height='100px'></Box>
        </Grid>
      </Box>
  );
}

export default App;